2019-04-15 20:30:49 -Starting BootdoJpaApplication on B705_34 with PID 13368 (C:\Users\DZKD_B705\Desktop\bootdojpa\target\classes started by DZKD_B705 in C:\Users\DZKD_B705\Desktop\bootdojpa)
2019-04-15 20:30:49 -The following profiles are active: dev
2019-04-15 20:30:49 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@434a63ab: startup date [Mon Apr 15 20:30:49 CST 2019]; root of context hierarchy
2019-04-15 20:30:50 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-15 20:30:50 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-15 20:30:50 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.activiti.dao.SalaryRepository.
2019-04-15 20:30:50 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.blog.dao.ContentRepository.
2019-04-15 20:30:50 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.ColumnsRepository.
2019-04-15 20:30:50 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.DictRepository.
2019-04-15 20:30:50 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.FileRepository.
2019-04-15 20:30:50 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.LogRepository.
2019-04-15 20:30:50 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.TablesRepository.
2019-04-15 20:30:50 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.TaskRepository.
2019-04-15 20:30:50 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.oa.dao.NotifyRecordRepository.
2019-04-15 20:30:50 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.oa.dao.NotifyRepository.
2019-04-15 20:30:50 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.DeptRepository.
2019-04-15 20:30:50 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.MenuRepository.
2019-04-15 20:30:50 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.RoleMenuRepository.
2019-04-15 20:30:50 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.RoleRepository.
2019-04-15 20:30:50 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.UserRepository.
2019-04-15 20:30:50 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.UserRoleRepository.
2019-04-15 20:30:50 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2bd464ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:30:51 -Bean 'shiroConfig' of type [com.bootdo_jpa.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6bdfd611] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:30:51 -Bean 'userRealm' of type [com.bootdo_jpa.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:30:51 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/C:/Users/DZKD_B705/.m2/repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2019-04-15 20:30:51 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:30:51 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:30:51 -Cache with name 'com.bootdo_jpa.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-15 20:30:51 -Added EhCache named [com.bootdo_jpa.system.shiro.UserRealm.authorizationCache]
2019-04-15 20:30:51 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:30:51 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:30:51 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:30:51 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:30:51 -Tomcat initialized with port(s): 80 (http)
2019-04-15 20:30:51 -Initializing ProtocolHandler ["http-nio-80"]
2019-04-15 20:30:51 -Starting service [Tomcat]
2019-04-15 20:30:51 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-15 20:30:51 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\java\jdk\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\python\Scripts\;D:\python\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;D:\java\jdk\bin;D:\java\jdk\jre\bin;C:\Program Files\Microsoft SQL Server\110\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\IDE\PrivateAssemblies\;C:\Program Files (x86)\Microsoft SQL Server\110\DTS\Binn\;C:\strawberry\c\bin;C:\strawberry\perl\bin;D:\mysql\bin;E:\Anaconda3;E:\Anaconda3\Library\mingw-w64\bin;E:\Anaconda3\Library\usr\bin;E:\Anaconda3\Library\bin;E:\Anaconda3\Scripts;C:\Users\DZKD_B705\AppData\Local\Microsoft\WindowsApps;D:\IDEA\bin;;D:\PyCharm\bin;;.]
2019-04-15 20:30:51 -Initializing Spring embedded WebApplicationContext
2019-04-15 20:30:51 -Root WebApplicationContext: initialization completed in 2398 ms
2019-04-15 20:30:52 -Servlet statViewServlet mapped to [/druid/*]
2019-04-15 20:30:52 -Servlet dispatcherServlet mapped to [/]
2019-04-15 20:30:52 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-15 20:30:52 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-15 20:30:52 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-15 20:30:52 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-15 20:30:52 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-15 20:30:52 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-15 20:30:52 -init datasource error, url: jdbc:log4jdbc:mysql://127.0.0.1:3306/bootdo_jpa?useUnicode=true&characterEncoding=utf8
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at net.sf.log4jdbc.DriverSpy.connect(DriverSpy.java:728)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:734)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1776)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1704)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:581)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:818)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:724)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1276)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1133)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:859)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo_jpa.BootdoJpaApplication.main(BootdoJpaApplication.java:20)
2019-04-15 20:30:52 -{dataSource-1} init error
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at net.sf.log4jdbc.DriverSpy.connect(DriverSpy.java:728)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:734)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1776)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1704)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:581)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:818)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:724)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1276)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1133)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:859)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo_jpa.BootdoJpaApplication.main(BootdoJpaApplication.java:20)
2019-04-15 20:30:52 -{dataSource-1} inited
2019-04-15 20:30:52 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo_jpa/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
2019-04-15 20:30:52 -Stopping service [Tomcat]
2019-04-15 20:30:52 -create connection error, url: jdbc:log4jdbc:mysql://127.0.0.1:3306/bootdo_jpa?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at net.sf.log4jdbc.DriverSpy.connect(DriverSpy.java:728)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2019-04-15 20:30:52 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-04-15 20:30:52 -create connection error, url: jdbc:log4jdbc:mysql://127.0.0.1:3306/bootdo_jpa?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at net.sf.log4jdbc.DriverSpy.connect(DriverSpy.java:728)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2019-04-15 20:30:52 -Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo_jpa/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:732)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1276)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1133)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:859)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo_jpa.BootdoJpaApplication.main(BootdoJpaApplication.java:20)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo_jpa/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1708)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:581)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:818)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:724)
	... 28 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at net.sf.log4jdbc.DriverSpy.connect(DriverSpy.java:728)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:734)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1776)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1704)
	... 39 common frames omitted
2019-04-15 20:32:10 -Starting BootdoJpaApplication on B705_34 with PID 14576 (C:\Users\DZKD_B705\Desktop\bootdojpa\target\classes started by DZKD_B705 in C:\Users\DZKD_B705\Desktop\bootdojpa)
2019-04-15 20:32:10 -The following profiles are active: dev
2019-04-15 20:32:11 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@54bff557: startup date [Mon Apr 15 20:32:11 CST 2019]; root of context hierarchy
2019-04-15 20:32:11 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-15 20:32:11 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-15 20:32:11 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.activiti.dao.SalaryRepository.
2019-04-15 20:32:11 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.blog.dao.ContentRepository.
2019-04-15 20:32:11 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.ColumnsRepository.
2019-04-15 20:32:11 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.DictRepository.
2019-04-15 20:32:11 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.FileRepository.
2019-04-15 20:32:11 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.LogRepository.
2019-04-15 20:32:11 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.TablesRepository.
2019-04-15 20:32:11 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.TaskRepository.
2019-04-15 20:32:11 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.oa.dao.NotifyRecordRepository.
2019-04-15 20:32:11 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.oa.dao.NotifyRepository.
2019-04-15 20:32:11 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.DeptRepository.
2019-04-15 20:32:11 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.MenuRepository.
2019-04-15 20:32:11 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.RoleMenuRepository.
2019-04-15 20:32:11 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.RoleRepository.
2019-04-15 20:32:11 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.UserRepository.
2019-04-15 20:32:11 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.UserRoleRepository.
2019-04-15 20:32:12 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$335b598f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:32:12 -Bean 'shiroConfig' of type [com.bootdo_jpa.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$7366cad2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:32:12 -Bean 'userRealm' of type [com.bootdo_jpa.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:32:12 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/C:/Users/DZKD_B705/.m2/repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2019-04-15 20:32:12 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:32:12 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:32:12 -Cache with name 'com.bootdo_jpa.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-15 20:32:12 -Added EhCache named [com.bootdo_jpa.system.shiro.UserRealm.authorizationCache]
2019-04-15 20:32:12 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:32:12 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:32:12 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:32:12 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:32:13 -Tomcat initialized with port(s): 80 (http)
2019-04-15 20:32:13 -Initializing ProtocolHandler ["http-nio-80"]
2019-04-15 20:32:13 -Starting service [Tomcat]
2019-04-15 20:32:13 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-15 20:32:13 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\java\jdk\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\python\Scripts\;D:\python\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;D:\java\jdk\bin;D:\java\jdk\jre\bin;C:\Program Files\Microsoft SQL Server\110\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\IDE\PrivateAssemblies\;C:\Program Files (x86)\Microsoft SQL Server\110\DTS\Binn\;C:\strawberry\c\bin;C:\strawberry\perl\bin;D:\mysql\bin;E:\Anaconda3;E:\Anaconda3\Library\mingw-w64\bin;E:\Anaconda3\Library\usr\bin;E:\Anaconda3\Library\bin;E:\Anaconda3\Scripts;C:\Users\DZKD_B705\AppData\Local\Microsoft\WindowsApps;D:\IDEA\bin;;D:\PyCharm\bin;;.]
2019-04-15 20:32:13 -Initializing Spring embedded WebApplicationContext
2019-04-15 20:32:13 -Root WebApplicationContext: initialization completed in 2231 ms
2019-04-15 20:32:13 -Servlet statViewServlet mapped to [/druid/*]
2019-04-15 20:32:13 -Servlet dispatcherServlet mapped to [/]
2019-04-15 20:32:13 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-15 20:32:13 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-15 20:32:13 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-15 20:32:13 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-15 20:32:13 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-15 20:32:13 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-15 20:32:13 -init datasource error, url: jdbc:log4jdbc:mysql://127.0.0.1:3306/bootdo_jpa?useUnicode=true&characterEncoding=utf8
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at net.sf.log4jdbc.DriverSpy.connect(DriverSpy.java:728)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:734)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1776)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1704)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:581)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:818)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:724)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1276)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1133)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:859)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo_jpa.BootdoJpaApplication.main(BootdoJpaApplication.java:20)
2019-04-15 20:32:13 -{dataSource-1} init error
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at net.sf.log4jdbc.DriverSpy.connect(DriverSpy.java:728)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:734)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1776)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1704)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:581)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:818)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:724)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1276)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1133)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:859)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo_jpa.BootdoJpaApplication.main(BootdoJpaApplication.java:20)
2019-04-15 20:32:13 -{dataSource-1} inited
2019-04-15 20:32:13 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo_jpa/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
2019-04-15 20:32:13 -Stopping service [Tomcat]
2019-04-15 20:32:13 -create connection error, url: jdbc:log4jdbc:mysql://127.0.0.1:3306/bootdo_jpa?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at net.sf.log4jdbc.DriverSpy.connect(DriverSpy.java:728)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2019-04-15 20:32:13 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-04-15 20:32:13 -create connection error, url: jdbc:log4jdbc:mysql://127.0.0.1:3306/bootdo_jpa?useUnicode=true&characterEncoding=utf8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at net.sf.log4jdbc.DriverSpy.connect(DriverSpy.java:728)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2080)
2019-04-15 20:32:13 -Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo_jpa/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:732)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1276)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1133)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:859)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo_jpa.BootdoJpaApplication.main(BootdoJpaApplication.java:20)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo_jpa/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1708)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:581)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:818)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:724)
	... 28 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at net.sf.log4jdbc.DriverSpy.connect(DriverSpy.java:728)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:734)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1776)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1704)
	... 39 common frames omitted
2019-04-15 20:47:25 -Starting BootdoJpaApplication on B705_34 with PID 13780 (C:\Users\DZKD_B705\Desktop\bootdojpa\target\classes started by DZKD_B705 in C:\Users\DZKD_B705\Desktop\bootdojpa)
2019-04-15 20:47:25 -The following profiles are active: dev
2019-04-15 20:47:25 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@37d4349f: startup date [Mon Apr 15 20:47:25 CST 2019]; root of context hierarchy
2019-04-15 20:47:26 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-15 20:47:26 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-15 20:47:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.activiti.dao.SalaryRepository.
2019-04-15 20:47:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.blog.dao.ContentRepository.
2019-04-15 20:47:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.ColumnsRepository.
2019-04-15 20:47:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.DictRepository.
2019-04-15 20:47:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.FileRepository.
2019-04-15 20:47:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.LogRepository.
2019-04-15 20:47:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.TablesRepository.
2019-04-15 20:47:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.TaskRepository.
2019-04-15 20:47:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.oa.dao.NotifyRecordRepository.
2019-04-15 20:47:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.oa.dao.NotifyRepository.
2019-04-15 20:47:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.DeptRepository.
2019-04-15 20:47:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.MenuRepository.
2019-04-15 20:47:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.RoleMenuRepository.
2019-04-15 20:47:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.RoleRepository.
2019-04-15 20:47:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.UserRepository.
2019-04-15 20:47:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.UserRoleRepository.
2019-04-15 20:47:26 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6bea429a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:47:27 -Bean 'shiroConfig' of type [com.bootdo_jpa.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$abf5b3dd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:47:27 -Bean 'userRealm' of type [com.bootdo_jpa.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:47:27 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/C:/Users/DZKD_B705/.m2/repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2019-04-15 20:47:27 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:47:27 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:47:27 -Cache with name 'com.bootdo_jpa.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-15 20:47:27 -Added EhCache named [com.bootdo_jpa.system.shiro.UserRealm.authorizationCache]
2019-04-15 20:47:27 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:47:27 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:47:27 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:47:27 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:47:27 -Tomcat initialized with port(s): 80 (http)
2019-04-15 20:47:27 -Initializing ProtocolHandler ["http-nio-80"]
2019-04-15 20:47:27 -Starting service [Tomcat]
2019-04-15 20:47:27 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-15 20:47:27 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\java\jdk\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\python\Scripts\;D:\python\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;D:\java\jdk\bin;D:\java\jdk\jre\bin;C:\Program Files\Microsoft SQL Server\110\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\IDE\PrivateAssemblies\;C:\Program Files (x86)\Microsoft SQL Server\110\DTS\Binn\;C:\strawberry\c\bin;C:\strawberry\perl\bin;D:\mysql\bin;E:\Anaconda3;E:\Anaconda3\Library\mingw-w64\bin;E:\Anaconda3\Library\usr\bin;E:\Anaconda3\Library\bin;E:\Anaconda3\Scripts;C:\Users\DZKD_B705\AppData\Local\Microsoft\WindowsApps;D:\IDEA\bin;;D:\PyCharm\bin;;.]
2019-04-15 20:47:27 -Initializing Spring embedded WebApplicationContext
2019-04-15 20:47:27 -Root WebApplicationContext: initialization completed in 2262 ms
2019-04-15 20:47:28 -Servlet statViewServlet mapped to [/druid/*]
2019-04-15 20:47:28 -Servlet dispatcherServlet mapped to [/]
2019-04-15 20:47:28 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-15 20:47:28 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-15 20:47:28 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-15 20:47:28 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-15 20:47:28 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-15 20:47:28 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-15 20:47:28 -1. Connection opened
2019-04-15 20:47:28 -1. Connection.new Connection returned 
2019-04-15 20:47:28 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:28 -1. Connection.isClosed() returned false
2019-04-15 20:47:28 -1. Statement.new Statement returned 
2019-04-15 20:47:28 -1. Connection.createStatement() returned net.sf.log4jdbc.StatementSpy@168b4cb0
2019-04-15 20:47:28 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:28 -select 'x' 

2019-04-15 20:47:28 -select 'x' 
 {executed in 1 msec}
2019-04-15 20:47:28 -1. ResultSet.new ResultSet returned 
2019-04-15 20:47:28 -1. Statement.executeQuery(select 'x') returned net.sf.log4jdbc.ResultSetSpy@4570d7b6
2019-04-15 20:47:28 -1. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@3878be7b - Field level information: 
	com.mysql.jdbc.Field@7df28f1[catalog=,tableName=,originalTableName=,columnName=x,originalColumnName=,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
2019-04-15 20:47:28 -1. ResultSet.next() returned true
2019-04-15 20:47:28 -1. ResultSet.close() returned 
2019-04-15 20:47:28 -1. Statement.close() returned 
2019-04-15 20:47:28 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:28 -1. Connection.getHoldability() returned 2
2019-04-15 20:47:28 -1. Connection.isReadOnly() returned false
2019-04-15 20:47:28 -1. Connection.getTransactionIsolation() returned 4
2019-04-15 20:47:28 -{dataSource-1} inited
2019-04-15 20:47:28 -1. Connection.isClosed() returned false
2019-04-15 20:47:28 -1. Connection.getMetaData() returned com.mysql.jdbc.JDBC4DatabaseMetaData@45b32dfe
2019-04-15 20:47:28 -1. Connection.clearWarnings() returned 
2019-04-15 20:47:28 -Building JPA container EntityManagerFactory for persistence unit 'default'
2019-04-15 20:47:28 -HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2019-04-15 20:47:28 -HHH000412: Hibernate Core {5.2.17.Final}
2019-04-15 20:47:28 -HHH000206: hibernate.properties not found
2019-04-15 20:47:28 -HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2019-04-15 20:47:29 -1. Connection.isClosed() returned false
2019-04-15 20:47:29 -1. Connection.getMetaData() returned com.mysql.jdbc.JDBC4DatabaseMetaData@7135ce0a
2019-04-15 20:47:29 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2019-04-15 20:47:29 -1. Connection.clearWarnings() returned 
2019-04-15 20:47:29 -1. Connection.isClosed() returned false
2019-04-15 20:47:29 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:29 -1. Connection.getMetaData() returned com.mysql.jdbc.JDBC4DatabaseMetaData@1736c1e4
2019-04-15 20:47:29 -1. Statement.new Statement returned 
2019-04-15 20:47:29 -1. Connection.createStatement() returned net.sf.log4jdbc.StatementSpy@6d815fb7
2019-04-15 20:47:29 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:29 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:29 -create table hibernate_sequence (next_val bigint) engine=MyISAM 

2019-04-15 20:47:30 -create table hibernate_sequence (next_val bigint) engine=MyISAM 
 {executed in 797 msec}
2019-04-15 20:47:30 -1. Statement.execute(create table hibernate_sequence (next_val bigint) engine=MyISAM) returned false
2019-04-15 20:47:30 -1. Statement.getUpdateCount() returned 0
2019-04-15 20:47:30 -1. Statement.getWarnings() returned null
2019-04-15 20:47:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:30 -insert into hibernate_sequence values ( 1 ) 

2019-04-15 20:47:30 -insert into hibernate_sequence values ( 1 ) 
 {executed in 13 msec}
2019-04-15 20:47:30 -1. Statement.execute(insert into hibernate_sequence values ( 1 )) returned false
2019-04-15 20:47:30 -1. Statement.getUpdateCount() returned 1
2019-04-15 20:47:30 -1. Statement.getWarnings() returned null
2019-04-15 20:47:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:30 -insert into hibernate_sequence values ( 1 ) 

2019-04-15 20:47:30 -insert into hibernate_sequence values ( 1 ) 
 {executed in 16 msec}
2019-04-15 20:47:30 -1. Statement.execute(insert into hibernate_sequence values ( 1 )) returned false
2019-04-15 20:47:30 -1. Statement.getUpdateCount() returned 1
2019-04-15 20:47:30 -1. Statement.getWarnings() returned null
2019-04-15 20:47:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:30 -insert into hibernate_sequence values ( 1 ) 

2019-04-15 20:47:30 -insert into hibernate_sequence values ( 1 ) 
 {executed in 32 msec}
2019-04-15 20:47:30 -1. Statement.execute(insert into hibernate_sequence values ( 1 )) returned false
2019-04-15 20:47:30 -1. Statement.getUpdateCount() returned 1
2019-04-15 20:47:30 -1. Statement.getWarnings() returned null
2019-04-15 20:47:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:30 -insert into hibernate_sequence values ( 1 ) 

2019-04-15 20:47:30 -insert into hibernate_sequence values ( 1 ) 
 {executed in 20 msec}
2019-04-15 20:47:30 -1. Statement.execute(insert into hibernate_sequence values ( 1 )) returned false
2019-04-15 20:47:30 -1. Statement.getUpdateCount() returned 1
2019-04-15 20:47:30 -1. Statement.getWarnings() returned null
2019-04-15 20:47:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:30 -insert into hibernate_sequence values ( 1 ) 

2019-04-15 20:47:30 -insert into hibernate_sequence values ( 1 ) 
 {executed in 19 msec}
2019-04-15 20:47:30 -1. Statement.execute(insert into hibernate_sequence values ( 1 )) returned false
2019-04-15 20:47:30 -1. Statement.getUpdateCount() returned 1
2019-04-15 20:47:30 -1. Statement.getWarnings() returned null
2019-04-15 20:47:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:30 -insert into hibernate_sequence values ( 1 ) 

2019-04-15 20:47:30 -insert into hibernate_sequence values ( 1 ) 
 {executed in 20 msec}
2019-04-15 20:47:30 -1. Statement.execute(insert into hibernate_sequence values ( 1 )) returned false
2019-04-15 20:47:30 -1. Statement.getUpdateCount() returned 1
2019-04-15 20:47:30 -1. Statement.getWarnings() returned null
2019-04-15 20:47:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:30 -insert into hibernate_sequence values ( 1 ) 

2019-04-15 20:47:30 -insert into hibernate_sequence values ( 1 ) 
 {executed in 20 msec}
2019-04-15 20:47:30 -1. Statement.execute(insert into hibernate_sequence values ( 1 )) returned false
2019-04-15 20:47:30 -1. Statement.getUpdateCount() returned 1
2019-04-15 20:47:30 -1. Statement.getWarnings() returned null
2019-04-15 20:47:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:30 -insert into hibernate_sequence values ( 1 ) 

2019-04-15 20:47:30 -insert into hibernate_sequence values ( 1 ) 
 {executed in 19 msec}
2019-04-15 20:47:30 -1. Statement.execute(insert into hibernate_sequence values ( 1 )) returned false
2019-04-15 20:47:30 -1. Statement.getUpdateCount() returned 1
2019-04-15 20:47:30 -1. Statement.getWarnings() returned null
2019-04-15 20:47:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:30 -insert into hibernate_sequence values ( 1 ) 

2019-04-15 20:47:30 -insert into hibernate_sequence values ( 1 ) 
 {executed in 19 msec}
2019-04-15 20:47:30 -1. Statement.execute(insert into hibernate_sequence values ( 1 )) returned false
2019-04-15 20:47:30 -1. Statement.getUpdateCount() returned 1
2019-04-15 20:47:30 -1. Statement.getWarnings() returned null
2019-04-15 20:47:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:30 -insert into hibernate_sequence values ( 1 ) 

2019-04-15 20:47:30 -insert into hibernate_sequence values ( 1 ) 
 {executed in 19 msec}
2019-04-15 20:47:30 -1. Statement.execute(insert into hibernate_sequence values ( 1 )) returned false
2019-04-15 20:47:30 -1. Statement.getUpdateCount() returned 1
2019-04-15 20:47:30 -1. Statement.getWarnings() returned null
2019-04-15 20:47:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:30 -insert into hibernate_sequence values ( 1 ) 

2019-04-15 20:47:30 -insert into hibernate_sequence values ( 1 ) 
 {executed in 18 msec}
2019-04-15 20:47:30 -1. Statement.execute(insert into hibernate_sequence values ( 1 )) returned false
2019-04-15 20:47:30 -1. Statement.getUpdateCount() returned 1
2019-04-15 20:47:30 -1. Statement.getWarnings() returned null
2019-04-15 20:47:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:30 -insert into hibernate_sequence values ( 1 ) 

2019-04-15 20:47:30 -insert into hibernate_sequence values ( 1 ) 
 {executed in 21 msec}
2019-04-15 20:47:30 -1. Statement.execute(insert into hibernate_sequence values ( 1 )) returned false
2019-04-15 20:47:30 -1. Statement.getUpdateCount() returned 1
2019-04-15 20:47:30 -1. Statement.getWarnings() returned null
2019-04-15 20:47:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:30 -insert into hibernate_sequence values ( 1 ) 

2019-04-15 20:47:30 -insert into hibernate_sequence values ( 1 ) 
 {executed in 19 msec}
2019-04-15 20:47:30 -1. Statement.execute(insert into hibernate_sequence values ( 1 )) returned false
2019-04-15 20:47:30 -1. Statement.getUpdateCount() returned 1
2019-04-15 20:47:30 -1. Statement.getWarnings() returned null
2019-04-15 20:47:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:30 -insert into hibernate_sequence values ( 1 ) 

2019-04-15 20:47:30 -insert into hibernate_sequence values ( 1 ) 
 {executed in 20 msec}
2019-04-15 20:47:30 -1. Statement.execute(insert into hibernate_sequence values ( 1 )) returned false
2019-04-15 20:47:30 -1. Statement.getUpdateCount() returned 1
2019-04-15 20:47:30 -1. Statement.getWarnings() returned null
2019-04-15 20:47:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:30 -create table information_schema_columns (column_name varchar(255) not null, column_comment 
varchar(255), column_key varchar(255), data_type varchar(255), extra varchar(255), primary 
key (column_name)) engine=MyISAM 

2019-04-15 20:47:30 -create table information_schema_columns (column_name varchar(255) not null, column_comment 
varchar(255), column_key varchar(255), data_type varchar(255), extra varchar(255), primary 
key (column_name)) engine=MyISAM 
 {executed in 82 msec}
2019-04-15 20:47:30 -1. Statement.execute(create table information_schema_columns (column_name varchar(255) not null, column_comment varchar(255), column_key varchar(255), data_type varchar(255), extra varchar(255), primary key (column_name)) engine=MyISAM) returned false
2019-04-15 20:47:30 -1. Statement.getUpdateCount() returned 0
2019-04-15 20:47:30 -1. Statement.getWarnings() returned null
2019-04-15 20:47:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:30 -create table information_schema_tables (table_name varchar(255) not null, create_time varchar(255), 
engine varchar(255), table_comment varchar(255), primary key (table_name)) engine=MyISAM 

2019-04-15 20:47:30 -create table information_schema_tables (table_name varchar(255) not null, create_time varchar(255), 
engine varchar(255), table_comment varchar(255), primary key (table_name)) engine=MyISAM 
 {executed in 73 msec}
2019-04-15 20:47:30 -1. Statement.execute(create table information_schema_tables (table_name varchar(255) not null, create_time varchar(255), engine varchar(255), table_comment varchar(255), primary key (table_name)) engine=MyISAM) returned false
2019-04-15 20:47:30 -1. Statement.getUpdateCount() returned 0
2019-04-15 20:47:30 -1. Statement.getWarnings() returned null
2019-04-15 20:47:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:30 -alter table oa_notify_record add constraint FKksq81muiwnuj8chvw9jxbvkig foreign key (notify_id) 
references oa_notify (id) 

2019-04-15 20:47:31 -alter table oa_notify_record add constraint FKksq81muiwnuj8chvw9jxbvkig foreign key (notify_id) 
references oa_notify (id) 
 {executed in 1019 msec}
2019-04-15 20:47:31 -1. Statement.execute(alter table oa_notify_record add constraint FKksq81muiwnuj8chvw9jxbvkig foreign key (notify_id) references oa_notify (id)) returned false
2019-04-15 20:47:31 -1. Statement.getUpdateCount() returned 9
2019-04-15 20:47:31 -1. Statement.getWarnings() returned null
2019-04-15 20:47:31 -1. Statement.close() returned 
2019-04-15 20:47:31 -1. Connection.clearWarnings() returned 
2019-04-15 20:47:31 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2019-04-15 20:47:32 -1. Connection.isClosed() returned false
2019-04-15 20:47:32 -1. Connection.getMetaData() returned com.mysql.jdbc.JDBC4DatabaseMetaData@2b9d4b0
2019-04-15 20:47:32 -1. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:47:32 -1. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:47:32 -1. Connection.prepareStatement(select * from ACT_GE_PROPERTY where NAME_ = ?) returned net.sf.log4jdbc.PreparedStatementSpy@1255de25
2019-04-15 20:47:32 -1. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:47:32 -1. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:47:32 -1. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:47:32 -1. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:47:32 -1. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:47:32 -1. PreparedStatement.setString(1, "schema.version") returned 
2019-04-15 20:47:32 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:32 -1. Connection.getAutoCommit() returned true
2019-04-15 20:47:32 -select * from ACT_GE_PROPERTY where NAME_ = 'schema.version' 

2019-04-15 20:47:32 -select * from ACT_GE_PROPERTY where NAME_ = 'schema.version' 
 {executed in 1 msec}
2019-04-15 20:47:32 -1. PreparedStatement.execute() returned true
2019-04-15 20:47:32 -1. PreparedStatement.getUpdateCount() returned -1
2019-04-15 20:47:32 -1. ResultSet.new ResultSet returned 
2019-04-15 20:47:32 -1. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@51141f64
2019-04-15 20:47:32 -1. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@32c0fecc - Field level information: 
	com.mysql.jdbc.Field@35ceec81[catalog=bootdo_jpa,tableName=ACT_GE_PROPERTY,originalTableName=act_ge_property,columnName=NAME_,originalColumnName=NAME_,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= PRIMARY_KEY BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@d13379e[catalog=bootdo_jpa,tableName=ACT_GE_PROPERTY,originalTableName=act_ge_property,columnName=VALUE_,originalColumnName=VALUE_,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@7c8df667[catalog=bootdo_jpa,tableName=ACT_GE_PROPERTY,originalTableName=act_ge_property,columnName=REV_,originalColumnName=REV_,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
2019-04-15 20:47:32 -1. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@37c87fcc - Field level information: 
	com.mysql.jdbc.Field@35ceec81[catalog=bootdo_jpa,tableName=ACT_GE_PROPERTY,originalTableName=act_ge_property,columnName=NAME_,originalColumnName=NAME_,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= PRIMARY_KEY BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@d13379e[catalog=bootdo_jpa,tableName=ACT_GE_PROPERTY,originalTableName=act_ge_property,columnName=VALUE_,originalColumnName=VALUE_,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@7c8df667[catalog=bootdo_jpa,tableName=ACT_GE_PROPERTY,originalTableName=act_ge_property,columnName=REV_,originalColumnName=REV_,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
2019-04-15 20:47:32 -1. ResultSet.getType() returned 1003
2019-04-15 20:47:32 -1. ResultSet.next() returned true
2019-04-15 20:47:32 -1. ResultSet.getString(NAME_) returned schema.version
2019-04-15 20:47:32 -1. ResultSet.wasNull() returned false
2019-04-15 20:47:32 -1. ResultSet.getString(VALUE_) returned 5.22.0.0
2019-04-15 20:47:32 -1. ResultSet.wasNull() returned false
2019-04-15 20:47:32 -1. ResultSet.getInt(REV_) returned 1
2019-04-15 20:47:32 -1. ResultSet.wasNull() returned false
2019-04-15 20:47:32 -1. ResultSet.next() returned false
2019-04-15 20:47:32 -1. ResultSet.close() returned 
2019-04-15 20:47:32 -1. Connection.getMetaData() returned com.mysql.jdbc.JDBC4DatabaseMetaData@11bfd751
2019-04-15 20:47:32 -1. PreparedStatement.getMoreResults() returned false
2019-04-15 20:47:32 -1. PreparedStatement.getUpdateCount() returned -1
2019-04-15 20:47:32 -1. Connection.isClosed() returned false
2019-04-15 20:47:32 -1. PreparedStatement.clearParameters() returned 
2019-04-15 20:47:32 -1. Connection.getMetaData() returned com.mysql.jdbc.JDBC4DatabaseMetaData@5d58dc61
2019-04-15 20:47:32 -1. Connection.getMetaData() returned com.mysql.jdbc.JDBC4DatabaseMetaData@17df689e
2019-04-15 20:47:32 -1. Connection.clearWarnings() returned 
2019-04-15 20:47:32 -ProcessEngine default created
2019-04-15 20:47:33 -HHH000397: Using ASTQueryTranslatorFactory
2019-04-15 20:47:34 -1. Connection.isClosed() returned false
2019-04-15 20:47:34 -1. Connection.getMetaData() returned com.mysql.jdbc.JDBC4DatabaseMetaData@7b5c9412
2019-04-15 20:47:34 -1. Connection.clearWarnings() returned 
2019-04-15 20:47:34 -Using default implementation for ThreadExecutor
2019-04-15 20:47:34 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-15 20:47:34 -Quartz Scheduler v.2.3.0 created.
2019-04-15 20:47:34 -RAMJobStore initialized.
2019-04-15 20:47:34 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-15 20:47:34 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-15 20:47:34 -Quartz scheduler version: 2.3.0
2019-04-15 20:47:34 -JobFactory set to: com.bootdo_jpa.common.quartz.factory.JobFactory@3340ce58
2019-04-15 20:47:34 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-15 20:47:34 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-15 20:47:35 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-15 20:47:35 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-15 20:47:35 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-15 20:47:35 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-15 20:47:35 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@37d4349f: startup date [Mon Apr 15 20:47:25 CST 2019]; root of context hierarchy
2019-04-15 20:47:35 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2019-04-15 20:47:35 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.activiti.controller.ModelController.remove(java.lang.String)
2019-04-15 20:47:35 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.activiti.controller.ModelController.list(int,int)
2019-04-15 20:47:35 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.activiti.controller.ModelController.batchRemove(java.lang.String[])
2019-04-15 20:47:35 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo_jpa.activiti.controller.ModelController.model()
2019-04-15 20:47:35 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo_jpa.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-15 20:47:35 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo_jpa.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2019-04-15 20:47:35 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo_jpa.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-04-15 20:47:35 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo_jpa.activiti.controller.ModelController.getStencilset()
2019-04-15 20:47:35 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2019-04-15 20:47:35 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo_jpa.activiti.controller.ModelController.getEditorJson(java.lang.String)
2019-04-15 20:47:35 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo_jpa.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-04-15 20:47:35 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo_jpa.activiti.controller.ProcessController.add()
2019-04-15 20:47:35 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.activiti.controller.ProcessController.remove(java.lang.String)
2019-04-15 20:47:35 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.activiti.controller.ProcessController.list(int,int)
2019-04-15 20:47:35 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2019-04-15 20:47:35 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo_jpa.activiti.controller.ProcessController.process()
2019-04-15 20:47:35 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2019-04-15 20:47:35 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo_jpa.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-15 20:47:35 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2019-04-15 20:47:35 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo_jpa.activiti.controller.SalaryController.add()
2019-04-15 20:47:35 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.activiti.controller.SalaryController.remove(java.lang.Long)
2019-04-15 20:47:35 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.activiti.controller.SalaryController.remove(java.lang.Long[])
2019-04-15 20:47:35 -Mapped "{[/act/salary/update]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.activiti.controller.SalaryController.update(com.bootdo_jpa.activiti.domain.SalaryDO)
2019-04-15 20:47:35 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:47:35 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2019-04-15 20:47:35 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.activiti.controller.SalaryController.saveOrUpdate(com.bootdo_jpa.activiti.domain.SalaryDO)
2019-04-15 20:47:35 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo_jpa.activiti.controller.SalaryController.Salary()
2019-04-15 20:47:35 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo_jpa.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-04-15 20:47:35 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.activiti.controller.TaskController.list(int,int)
2019-04-15 20:47:35 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo_jpa.activiti.controller.TaskController.gotoTask()
2019-04-15 20:47:35 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo_jpa.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-04-15 20:47:35 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo_jpa.activiti.controller.TaskController.todo()
2019-04-15 20:47:35 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo_jpa.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-15 20:47:35 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo_jpa.activiti.vo.TaskVO> com.bootdo_jpa.activiti.controller.TaskController.todoList()
2019-04-15 20:47:35 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2019-04-15 20:47:35 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.blog.controller.BlogController.openList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:47:35 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo_jpa.blog.controller.BlogController.blog()
2019-04-15 20:47:35 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2019-04-15 20:47:35 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo_jpa.blog.controller.ContentController.add()
2019-04-15 20:47:35 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.blog.controller.ContentController.remove(java.lang.Long)
2019-04-15 20:47:35 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.blog.controller.ContentController.remove(java.lang.Long[])
2019-04-15 20:47:35 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.blog.controller.ContentController.update(com.bootdo_jpa.blog.domain.ContentDO)
2019-04-15 20:47:35 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:47:35 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.blog.controller.ContentController.save(com.bootdo_jpa.blog.domain.ContentDO)
2019-04-15 20:47:35 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-15 20:47:35 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo_jpa.blog.controller.ContentController.bContent()
2019-04-15 20:47:35 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.DictController.add()
2019-04-15 20:47:35 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.DictController.remove(java.lang.Long)
2019-04-15 20:47:35 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.DictController.remove(java.lang.Long[])
2019-04-15 20:47:35 -Mapped "{[/common/dict/update]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.DictController.update(com.bootdo_jpa.common.domain.DictDO)
2019-04-15 20:47:35 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:47:35 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.DictController.save(com.bootdo_jpa.common.domain.DictDO)
2019-04-15 20:47:35 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo_jpa.common.domain.DictDO> com.bootdo_jpa.common.controller.DictController.listType()
2019-04-15 20:47:35 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-15 20:47:35 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.DictController.dict()
2019-04-15 20:47:35 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo_jpa.common.domain.DictDO> com.bootdo_jpa.common.controller.DictController.listByType(java.lang.String)
2019-04-15 20:47:35 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-15 20:47:35 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.FileController.add()
2019-04-15 20:47:35 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-15 20:47:35 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.FileController.remove(java.lang.Long[])
2019-04-15 20:47:35 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.FileController.update(com.bootdo_jpa.common.domain.FileDO)
2019-04-15 20:47:35 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:47:35 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.FileController.save(com.bootdo_jpa.common.domain.FileDO)
2019-04-15 20:47:35 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.FileController.info(java.lang.Long)
2019-04-15 20:47:35 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-15 20:47:35 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-15 20:47:35 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-15 20:47:35 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:47:35 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<com.bootdo_jpa.common.domain.TablesDO> com.bootdo_jpa.common.controller.GeneratorController.list()
2019-04-15 20:47:35 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo_jpa.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-15 20:47:35 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.GeneratorController.generator()
2019-04-15 20:47:35 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo_jpa.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-15 20:47:35 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo_jpa.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-15 20:47:35 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.JobController.add()
2019-04-15 20:47:35 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.JobController.remove(java.lang.Long)
2019-04-15 20:47:35 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.JobController.remove(java.lang.Long[])
2019-04-15 20:47:35 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.JobController.update(com.bootdo_jpa.common.domain.TaskDO)
2019-04-15 20:47:35 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:47:35 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.JobController.save(com.bootdo_jpa.common.domain.TaskDO)
2019-04-15 20:47:35 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.JobController.info(java.lang.Long)
2019-04-15 20:47:35 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-15 20:47:35 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.JobController.taskScheduleJob()
2019-04-15 20:47:35 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-15 20:47:35 -Mapped "{[/common/log/remove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.LogController.remove(java.lang.Long)
2019-04-15 20:47:35 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.LogController.log()
2019-04-15 20:47:35 -Mapped "{[/common/log/list],methods=[GET]}" onto public com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:47:35 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-15 20:47:35 -Mapped "{[/error]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-15 20:47:35 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo_jpa.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-15 20:47:35 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo_jpa.oa.controller.NotifyController.add()
2019-04-15 20:47:35 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-15 20:47:35 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-15 20:47:35 -Mapped "{[/oa/notify/update]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.oa.controller.NotifyController.update(com.bootdo_jpa.oa.domain.NotifyDO)
2019-04-15 20:47:35 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-15 20:47:35 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:47:35 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.oa.controller.NotifyController.save(com.bootdo_jpa.oa.domain.NotifyDO)
2019-04-15 20:47:35 -Mapped "{[/oa/notify/message],methods=[GET]}" onto public com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.oa.controller.NotifyController.message()
2019-04-15 20:47:35 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-15 20:47:35 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo_jpa.oa.controller.NotifyController.selefNotify()
2019-04-15 20:47:35 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo_jpa.oa.controller.NotifyController.oaNotify()
2019-04-15 20:47:35 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto public com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:47:35 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-15 20:47:35 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.DeptController.remove(java.lang.Long)
2019-04-15 20:47:35 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.DeptController.remove(java.lang.Long[])
2019-04-15 20:47:35 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.DeptController.update(com.bootdo_jpa.system.domain.DeptDO)
2019-04-15 20:47:35 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo_jpa.system.domain.DeptDO> com.bootdo_jpa.system.controller.DeptController.list()
2019-04-15 20:47:35 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.DeptController.save(com.bootdo_jpa.system.domain.DeptDO)
2019-04-15 20:47:35 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo_jpa.common.domain.Tree<com.bootdo_jpa.system.domain.DeptDO> com.bootdo_jpa.system.controller.DeptController.tree()
2019-04-15 20:47:35 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-15 20:47:35 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.DeptController.dept()
2019-04-15 20:47:35 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.DeptController.treeView()
2019-04-15 20:47:35 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-15 20:47:35 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.LoginController.main()
2019-04-15 20:47:35 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-15 20:47:35 -Mapped "{[/login],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-15 20:47:35 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.LoginController.logout()
2019-04-15 20:47:35 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-15 20:47:35 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo_jpa.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-15 20:47:35 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto public java.lang.String com.bootdo_jpa.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-15 20:47:35 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.MenuController.remove(java.lang.Long)
2019-04-15 20:47:35 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.MenuController.update(com.bootdo_jpa.system.domain.MenuDO)
2019-04-15 20:47:35 -Mapped "{[/sys/menu/list]}" onto public java.util.List<com.bootdo_jpa.system.domain.MenuDO> com.bootdo_jpa.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:47:35 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.MenuController.save(com.bootdo_jpa.system.domain.MenuDO)
2019-04-15 20:47:35 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo_jpa.common.domain.Tree<com.bootdo_jpa.system.domain.MenuDO> com.bootdo_jpa.system.controller.MenuController.tree(java.lang.Long)
2019-04-15 20:47:35 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo_jpa.common.domain.Tree<com.bootdo_jpa.system.domain.MenuDO> com.bootdo_jpa.system.controller.MenuController.tree()
2019-04-15 20:47:35 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto public java.lang.String com.bootdo_jpa.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-15 20:47:35 -Mapped "{[/sys/menu],methods=[GET]}" onto public java.lang.String com.bootdo_jpa.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-15 20:47:35 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.RoleController.add()
2019-04-15 20:47:35 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.RoleController.update(com.bootdo_jpa.system.domain.RoleDO)
2019-04-15 20:47:35 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo_jpa.system.domain.RoleDO> com.bootdo_jpa.system.controller.RoleController.list()
2019-04-15 20:47:35 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.RoleController.save(java.lang.Long)
2019-04-15 20:47:35 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.RoleController.save(com.bootdo_jpa.system.domain.RoleDO)
2019-04-15 20:47:35 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-15 20:47:35 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.RoleController.role()
2019-04-15 20:47:35 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-15 20:47:35 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo_jpa.system.domain.UserOnline> com.bootdo_jpa.system.controller.SessionController.list()
2019-04-15 20:47:35 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo_jpa.system.controller.SessionController.sessionList()
2019-04-15 20:47:35 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo_jpa.system.controller.SessionController.online()
2019-04-15 20:47:35 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-15 20:47:35 -Mapped "{[/sys/user/exit],methods=[POST]}" onto public boolean com.bootdo_jpa.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:47:35 -Mapped "{[/sys/user/add],methods=[GET]}" onto public java.lang.String com.bootdo_jpa.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-15 20:47:35 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.UserController.remove(java.lang.Long)
2019-04-15 20:47:35 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.UserController.update(com.bootdo_jpa.system.domain.UserDO)
2019-04-15 20:47:35 -Mapped "{[/sys/user/list],methods=[GET]}" onto public com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:47:35 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.UserController.save(com.bootdo_jpa.system.domain.UserDO)
2019-04-15 20:47:35 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-15 20:47:35 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo_jpa.common.domain.Tree<com.bootdo_jpa.system.domain.DeptDO> com.bootdo_jpa.system.controller.UserController.tree()
2019-04-15 20:47:35 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-15 20:47:35 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-15 20:47:35 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.UserController.treeView()
2019-04-15 20:47:35 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.UserController.updatePeronal(com.bootdo_jpa.system.domain.UserDO)
2019-04-15 20:47:35 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.UserController.resetPwd(com.bootdo_jpa.system.vo.UserVO)
2019-04-15 20:47:35 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-15 20:47:35 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.UserController.adminResetPwd(com.bootdo_jpa.system.vo.UserVO)
2019-04-15 20:47:35 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-15 20:47:35 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-15 20:47:35 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-15 20:47:35 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-15 20:47:35 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-15 20:47:35 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-15 20:47:35 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-15 20:47:36 -Registering beans for JMX exposure on startup
2019-04-15 20:47:36 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-15 20:47:36 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-15 20:47:36 -Starting beans in phase 2147483647
2019-04-15 20:47:36 -Starting Quartz Scheduler now
2019-04-15 20:47:36 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-15 20:47:36 -Starting...
2019-04-15 20:47:36 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-15 20:47:36 -Started.
2019-04-15 20:47:36 -Starting ProtocolHandler ["http-nio-80"]
2019-04-15 20:47:36 -Failed to start connector [Connector[HTTP/1.1-80]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-80]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo_jpa.BootdoJpaApplication.main(BootdoJpaApplication.java:20)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-04-15 20:47:36 -Pausing ProtocolHandler ["http-nio-80"]
2019-04-15 20:47:36 -Stopping service [Tomcat]
2019-04-15 20:47:36 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-04-15 20:47:36 -Stopping ProtocolHandler ["http-nio-80"]
2019-04-15 20:47:36 -Destroying ProtocolHandler ["http-nio-80"]
2019-04-15 20:47:36 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-04-15 20:47:36 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 80 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 80, or configure this application to listen on another port.

2019-04-15 20:47:36 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@37d4349f: startup date [Mon Apr 15 20:47:25 CST 2019]; root of context hierarchy
2019-04-15 20:47:36 -Stopping beans in phase 2147483647
2019-04-15 20:47:36 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-04-15 20:47:36 -Stopping...
2019-04-15 20:47:36 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-15 20:47:36 -Stopped.
2019-04-15 20:47:36 -Unregistering JMX-exposed beans on shutdown
2019-04-15 20:47:36 -Unregistering JMX-exposed beans
2019-04-15 20:47:36 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-04-15 20:47:36 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-04-15 20:47:36 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-04-15 20:47:36 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-04-15 20:47:36 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-04-15 20:47:36 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-04-15 20:47:36 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-04-15 20:47:36 -Shutting down Quartz Scheduler
2019-04-15 20:47:36 -Closing JPA EntityManagerFactory for persistence unit 'default'
2019-04-15 20:47:36 -1. PreparedStatement.close() returned 
2019-04-15 20:47:36 -1. Connection closed
2019-04-15 20:47:36 -1. Connection.close() returned 
2019-04-15 20:47:36 -{dataSource-1} closed
2019-04-15 20:52:00 -Starting BootdoJpaApplication on B705_34 with PID 2684 (C:\Users\DZKD_B705\Desktop\bootdojpa\target\classes started by DZKD_B705 in C:\Users\DZKD_B705\Desktop\bootdojpa)
2019-04-15 20:52:00 -The following profiles are active: dev
2019-04-15 20:52:00 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2b91004a: startup date [Mon Apr 15 20:52:00 CST 2019]; root of context hierarchy
2019-04-15 20:52:01 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-15 20:52:01 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-15 20:52:01 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.activiti.dao.SalaryRepository.
2019-04-15 20:52:01 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.blog.dao.ContentRepository.
2019-04-15 20:52:01 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.ColumnsRepository.
2019-04-15 20:52:01 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.DictRepository.
2019-04-15 20:52:01 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.FileRepository.
2019-04-15 20:52:01 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.LogRepository.
2019-04-15 20:52:01 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.TablesRepository.
2019-04-15 20:52:01 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.TaskRepository.
2019-04-15 20:52:01 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.oa.dao.NotifyRecordRepository.
2019-04-15 20:52:01 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.oa.dao.NotifyRepository.
2019-04-15 20:52:01 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.DeptRepository.
2019-04-15 20:52:01 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.MenuRepository.
2019-04-15 20:52:01 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.RoleMenuRepository.
2019-04-15 20:52:01 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.RoleRepository.
2019-04-15 20:52:01 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.UserRepository.
2019-04-15 20:52:01 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.UserRoleRepository.
2019-04-15 20:52:01 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8e90a21e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:52:02 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/bootdo_jpa/system/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'spring.redis.host' in value "${spring.redis.host}"
2019-04-15 20:52:02 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-04-15 20:52:02 -Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/bootdo_jpa/system/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'spring.redis.host' in value "${spring.redis.host}"
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:238)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:710)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:535)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo_jpa.BootdoJpaApplication.main(BootdoJpaApplication.java:20)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'spring.redis.host' in value "${spring.redis.host}"
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:379)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:94)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:109)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:92)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:101)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:254)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1069)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1042)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:492)
	... 14 common frames omitted
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'spring.redis.host' in value "${spring.redis.host}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:172)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:124)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:237)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:211)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:175)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:839)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1086)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	... 38 common frames omitted
2019-04-15 20:52:41 -Starting BootdoJpaApplication on B705_34 with PID 7808 (C:\Users\DZKD_B705\Desktop\bootdojpa\target\classes started by DZKD_B705 in C:\Users\DZKD_B705\Desktop\bootdojpa)
2019-04-15 20:52:41 -The following profiles are active: dev
2019-04-15 20:52:41 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5a56cdac: startup date [Mon Apr 15 20:52:41 CST 2019]; root of context hierarchy
2019-04-15 20:52:41 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-15 20:52:41 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-15 20:52:41 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.activiti.dao.SalaryRepository.
2019-04-15 20:52:41 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.blog.dao.ContentRepository.
2019-04-15 20:52:41 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.ColumnsRepository.
2019-04-15 20:52:41 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.DictRepository.
2019-04-15 20:52:41 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.FileRepository.
2019-04-15 20:52:41 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.LogRepository.
2019-04-15 20:52:41 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.TablesRepository.
2019-04-15 20:52:41 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.TaskRepository.
2019-04-15 20:52:41 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.oa.dao.NotifyRecordRepository.
2019-04-15 20:52:41 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.oa.dao.NotifyRepository.
2019-04-15 20:52:41 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.DeptRepository.
2019-04-15 20:52:41 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.MenuRepository.
2019-04-15 20:52:41 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.RoleMenuRepository.
2019-04-15 20:52:41 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.RoleRepository.
2019-04-15 20:52:41 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.UserRepository.
2019-04-15 20:52:41 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.UserRoleRepository.
2019-04-15 20:52:42 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7ffc82c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:52:42 -Bean 'shiroConfig' of type [com.bootdo_jpa.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$480b396f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:52:42 -Bean 'userRealm' of type [com.bootdo_jpa.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:52:42 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/C:/Users/DZKD_B705/.m2/repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2019-04-15 20:52:42 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:52:42 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:52:42 -Cache with name 'com.bootdo_jpa.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-15 20:52:42 -Added EhCache named [com.bootdo_jpa.system.shiro.UserRealm.authorizationCache]
2019-04-15 20:52:42 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:52:42 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:52:42 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:52:42 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:52:43 -Tomcat initialized with port(s): 8080 (http)
2019-04-15 20:52:43 -Initializing ProtocolHandler ["http-nio-8080"]
2019-04-15 20:52:43 -Starting service [Tomcat]
2019-04-15 20:52:43 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-15 20:52:43 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\java\jdk\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\python\Scripts\;D:\python\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;D:\java\jdk\bin;D:\java\jdk\jre\bin;C:\Program Files\Microsoft SQL Server\110\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\IDE\PrivateAssemblies\;C:\Program Files (x86)\Microsoft SQL Server\110\DTS\Binn\;C:\strawberry\c\bin;C:\strawberry\perl\bin;D:\mysql\bin;E:\Anaconda3;E:\Anaconda3\Library\mingw-w64\bin;E:\Anaconda3\Library\usr\bin;E:\Anaconda3\Library\bin;E:\Anaconda3\Scripts;C:\Users\DZKD_B705\AppData\Local\Microsoft\WindowsApps;D:\IDEA\bin;;D:\PyCharm\bin;;.]
2019-04-15 20:52:43 -Initializing Spring embedded WebApplicationContext
2019-04-15 20:52:43 -Root WebApplicationContext: initialization completed in 2204 ms
2019-04-15 20:52:43 -Servlet statViewServlet mapped to [/druid/*]
2019-04-15 20:52:43 -Servlet dispatcherServlet mapped to [/]
2019-04-15 20:52:43 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-15 20:52:43 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-15 20:52:43 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-15 20:52:43 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-15 20:52:43 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-15 20:52:43 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-15 20:52:43 -1. Connection opened
2019-04-15 20:52:43 -1. Connection.new Connection returned 
2019-04-15 20:52:43 -1. Connection.getAutoCommit() returned true
2019-04-15 20:52:43 -1. Connection.isClosed() returned false
2019-04-15 20:52:43 -1. Statement.new Statement returned 
2019-04-15 20:52:43 -1. Connection.createStatement() returned net.sf.log4jdbc.StatementSpy@4a8ffd75
2019-04-15 20:52:43 -1. Connection.getAutoCommit() returned true
2019-04-15 20:52:43 -select 'x' 

2019-04-15 20:52:43 -select 'x' 
 {executed in 1 msec}
2019-04-15 20:52:43 -1. ResultSet.new ResultSet returned 
2019-04-15 20:52:43 -1. Statement.executeQuery(select 'x') returned net.sf.log4jdbc.ResultSetSpy@77db3d02
2019-04-15 20:52:43 -1. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@72b6832e - Field level information: 
	com.mysql.jdbc.Field@3850e90c[catalog=,tableName=,originalTableName=,columnName=x,originalColumnName=,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
2019-04-15 20:52:43 -1. ResultSet.next() returned true
2019-04-15 20:52:43 -1. ResultSet.close() returned 
2019-04-15 20:52:43 -1. Statement.close() returned 
2019-04-15 20:52:43 -1. Connection.getAutoCommit() returned true
2019-04-15 20:52:43 -1. Connection.getHoldability() returned 2
2019-04-15 20:52:43 -1. Connection.isReadOnly() returned false
2019-04-15 20:52:43 -1. Connection.getTransactionIsolation() returned 4
2019-04-15 20:52:43 -{dataSource-1} inited
2019-04-15 20:52:43 -1. Connection.isClosed() returned false
2019-04-15 20:52:43 -1. Connection.getMetaData() returned com.mysql.jdbc.JDBC4DatabaseMetaData@56846330
2019-04-15 20:52:43 -1. Connection.clearWarnings() returned 
2019-04-15 20:52:43 -Building JPA container EntityManagerFactory for persistence unit 'default'
2019-04-15 20:52:44 -HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2019-04-15 20:52:44 -HHH000412: Hibernate Core {5.2.17.Final}
2019-04-15 20:52:44 -HHH000206: hibernate.properties not found
2019-04-15 20:52:44 -HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2019-04-15 20:52:44 -1. Connection.isClosed() returned false
2019-04-15 20:52:44 -1. Connection.getMetaData() returned com.mysql.jdbc.JDBC4DatabaseMetaData@7015ebef
2019-04-15 20:52:44 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2019-04-15 20:52:44 -1. Connection.clearWarnings() returned 
2019-04-15 20:52:44 -1. Connection.isClosed() returned false
2019-04-15 20:52:44 -1. Connection.getAutoCommit() returned true
2019-04-15 20:52:44 -1. Connection.getMetaData() returned com.mysql.jdbc.JDBC4DatabaseMetaData@17b6ad97
2019-04-15 20:52:45 -1. Connection.clearWarnings() returned 
2019-04-15 20:52:45 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2019-04-15 20:52:46 -1. Connection.isClosed() returned false
2019-04-15 20:52:46 -1. Connection.getMetaData() returned com.mysql.jdbc.JDBC4DatabaseMetaData@6b030101
2019-04-15 20:52:46 -1. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:52:46 -1. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:52:46 -1. Connection.prepareStatement(select * from ACT_GE_PROPERTY where NAME_ = ?) returned net.sf.log4jdbc.PreparedStatementSpy@5b5b53c6
2019-04-15 20:52:46 -1. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:52:46 -1. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:52:46 -1. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:52:46 -1. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:52:46 -1. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:52:46 -1. PreparedStatement.setString(1, "schema.version") returned 
2019-04-15 20:52:46 -1. Connection.getAutoCommit() returned true
2019-04-15 20:52:46 -1. Connection.getAutoCommit() returned true
2019-04-15 20:52:46 -select * from ACT_GE_PROPERTY where NAME_ = 'schema.version' 

2019-04-15 20:52:46 -select * from ACT_GE_PROPERTY where NAME_ = 'schema.version' 
 {executed in 1 msec}
2019-04-15 20:52:46 -1. PreparedStatement.execute() returned true
2019-04-15 20:52:46 -1. PreparedStatement.getUpdateCount() returned -1
2019-04-15 20:52:46 -1. ResultSet.new ResultSet returned 
2019-04-15 20:52:46 -1. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@21ea1d9d
2019-04-15 20:52:46 -1. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@19f497aa - Field level information: 
	com.mysql.jdbc.Field@36a58466[catalog=bootdo_jpa,tableName=ACT_GE_PROPERTY,originalTableName=act_ge_property,columnName=NAME_,originalColumnName=NAME_,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= PRIMARY_KEY BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@78e387d6[catalog=bootdo_jpa,tableName=ACT_GE_PROPERTY,originalTableName=act_ge_property,columnName=VALUE_,originalColumnName=VALUE_,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@9147ba2[catalog=bootdo_jpa,tableName=ACT_GE_PROPERTY,originalTableName=act_ge_property,columnName=REV_,originalColumnName=REV_,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
2019-04-15 20:52:46 -1. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@53525379 - Field level information: 
	com.mysql.jdbc.Field@36a58466[catalog=bootdo_jpa,tableName=ACT_GE_PROPERTY,originalTableName=act_ge_property,columnName=NAME_,originalColumnName=NAME_,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= PRIMARY_KEY BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@78e387d6[catalog=bootdo_jpa,tableName=ACT_GE_PROPERTY,originalTableName=act_ge_property,columnName=VALUE_,originalColumnName=VALUE_,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@9147ba2[catalog=bootdo_jpa,tableName=ACT_GE_PROPERTY,originalTableName=act_ge_property,columnName=REV_,originalColumnName=REV_,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
2019-04-15 20:52:46 -1. ResultSet.getType() returned 1003
2019-04-15 20:52:46 -1. ResultSet.next() returned true
2019-04-15 20:52:46 -1. ResultSet.getString(NAME_) returned schema.version
2019-04-15 20:52:46 -1. ResultSet.wasNull() returned false
2019-04-15 20:52:46 -1. ResultSet.getString(VALUE_) returned 5.22.0.0
2019-04-15 20:52:46 -1. ResultSet.wasNull() returned false
2019-04-15 20:52:46 -1. ResultSet.getInt(REV_) returned 1
2019-04-15 20:52:46 -1. ResultSet.wasNull() returned false
2019-04-15 20:52:46 -1. ResultSet.next() returned false
2019-04-15 20:52:46 -1. ResultSet.close() returned 
2019-04-15 20:52:46 -1. Connection.getMetaData() returned com.mysql.jdbc.JDBC4DatabaseMetaData@5bb99d1d
2019-04-15 20:52:46 -1. PreparedStatement.getMoreResults() returned false
2019-04-15 20:52:46 -1. PreparedStatement.getUpdateCount() returned -1
2019-04-15 20:52:46 -1. Connection.isClosed() returned false
2019-04-15 20:52:46 -1. PreparedStatement.clearParameters() returned 
2019-04-15 20:52:46 -1. Connection.getMetaData() returned com.mysql.jdbc.JDBC4DatabaseMetaData@5402612e
2019-04-15 20:52:46 -1. Connection.getMetaData() returned com.mysql.jdbc.JDBC4DatabaseMetaData@431babe6
2019-04-15 20:52:46 -1. Connection.clearWarnings() returned 
2019-04-15 20:52:46 -ProcessEngine default created
2019-04-15 20:52:47 -HHH000397: Using ASTQueryTranslatorFactory
2019-04-15 20:52:47 -1. Connection.isClosed() returned false
2019-04-15 20:52:47 -1. Connection.getMetaData() returned com.mysql.jdbc.JDBC4DatabaseMetaData@20723ee
2019-04-15 20:52:47 -1. Connection.clearWarnings() returned 
2019-04-15 20:52:47 -Using default implementation for ThreadExecutor
2019-04-15 20:52:47 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-15 20:52:47 -Quartz Scheduler v.2.3.0 created.
2019-04-15 20:52:47 -RAMJobStore initialized.
2019-04-15 20:52:47 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-15 20:52:47 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-15 20:52:47 -Quartz scheduler version: 2.3.0
2019-04-15 20:52:47 -JobFactory set to: com.bootdo_jpa.common.quartz.factory.JobFactory@2d88c1bf
2019-04-15 20:52:47 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-15 20:52:47 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-15 20:52:48 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-15 20:52:48 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-15 20:52:48 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-15 20:52:49 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-15 20:52:49 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5a56cdac: startup date [Mon Apr 15 20:52:41 CST 2019]; root of context hierarchy
2019-04-15 20:52:49 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2019-04-15 20:52:49 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.activiti.controller.ModelController.remove(java.lang.String)
2019-04-15 20:52:49 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.activiti.controller.ModelController.list(int,int)
2019-04-15 20:52:49 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.activiti.controller.ModelController.batchRemove(java.lang.String[])
2019-04-15 20:52:49 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo_jpa.activiti.controller.ModelController.model()
2019-04-15 20:52:49 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo_jpa.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-15 20:52:49 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo_jpa.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-04-15 20:52:49 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo_jpa.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2019-04-15 20:52:49 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2019-04-15 20:52:49 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo_jpa.activiti.controller.ModelController.getStencilset()
2019-04-15 20:52:49 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo_jpa.activiti.controller.ModelController.getEditorJson(java.lang.String)
2019-04-15 20:52:49 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo_jpa.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-04-15 20:52:49 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo_jpa.activiti.controller.ProcessController.add()
2019-04-15 20:52:49 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.activiti.controller.ProcessController.remove(java.lang.String)
2019-04-15 20:52:49 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.activiti.controller.ProcessController.list(int,int)
2019-04-15 20:52:49 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2019-04-15 20:52:49 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo_jpa.activiti.controller.ProcessController.process()
2019-04-15 20:52:49 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2019-04-15 20:52:49 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo_jpa.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-15 20:52:49 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2019-04-15 20:52:49 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo_jpa.activiti.controller.SalaryController.add()
2019-04-15 20:52:49 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.activiti.controller.SalaryController.remove(java.lang.Long)
2019-04-15 20:52:49 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.activiti.controller.SalaryController.remove(java.lang.Long[])
2019-04-15 20:52:49 -Mapped "{[/act/salary/update]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.activiti.controller.SalaryController.update(com.bootdo_jpa.activiti.domain.SalaryDO)
2019-04-15 20:52:49 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:52:49 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2019-04-15 20:52:49 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo_jpa.activiti.controller.SalaryController.Salary()
2019-04-15 20:52:49 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.activiti.controller.SalaryController.saveOrUpdate(com.bootdo_jpa.activiti.domain.SalaryDO)
2019-04-15 20:52:49 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo_jpa.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-04-15 20:52:49 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.activiti.controller.TaskController.list(int,int)
2019-04-15 20:52:49 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo_jpa.activiti.controller.TaskController.gotoTask()
2019-04-15 20:52:49 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo_jpa.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-04-15 20:52:49 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo_jpa.activiti.controller.TaskController.todo()
2019-04-15 20:52:49 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo_jpa.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-15 20:52:49 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo_jpa.activiti.vo.TaskVO> com.bootdo_jpa.activiti.controller.TaskController.todoList()
2019-04-15 20:52:49 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2019-04-15 20:52:49 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.blog.controller.BlogController.openList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:52:49 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2019-04-15 20:52:49 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo_jpa.blog.controller.BlogController.blog()
2019-04-15 20:52:49 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo_jpa.blog.controller.ContentController.add()
2019-04-15 20:52:49 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.blog.controller.ContentController.remove(java.lang.Long)
2019-04-15 20:52:49 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.blog.controller.ContentController.remove(java.lang.Long[])
2019-04-15 20:52:49 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.blog.controller.ContentController.update(com.bootdo_jpa.blog.domain.ContentDO)
2019-04-15 20:52:49 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:52:49 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.blog.controller.ContentController.save(com.bootdo_jpa.blog.domain.ContentDO)
2019-04-15 20:52:49 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-15 20:52:49 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo_jpa.blog.controller.ContentController.bContent()
2019-04-15 20:52:49 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.DictController.add()
2019-04-15 20:52:49 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.DictController.remove(java.lang.Long)
2019-04-15 20:52:49 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.DictController.remove(java.lang.Long[])
2019-04-15 20:52:49 -Mapped "{[/common/dict/update]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.DictController.update(com.bootdo_jpa.common.domain.DictDO)
2019-04-15 20:52:49 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:52:49 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.DictController.save(com.bootdo_jpa.common.domain.DictDO)
2019-04-15 20:52:49 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo_jpa.common.domain.DictDO> com.bootdo_jpa.common.controller.DictController.listType()
2019-04-15 20:52:49 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-15 20:52:49 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.DictController.dict()
2019-04-15 20:52:49 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-15 20:52:49 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo_jpa.common.domain.DictDO> com.bootdo_jpa.common.controller.DictController.listByType(java.lang.String)
2019-04-15 20:52:49 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.FileController.add()
2019-04-15 20:52:49 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-15 20:52:49 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.FileController.remove(java.lang.Long[])
2019-04-15 20:52:49 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.FileController.update(com.bootdo_jpa.common.domain.FileDO)
2019-04-15 20:52:49 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:52:49 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.FileController.save(com.bootdo_jpa.common.domain.FileDO)
2019-04-15 20:52:49 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.FileController.info(java.lang.Long)
2019-04-15 20:52:49 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-15 20:52:49 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-15 20:52:49 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-15 20:52:49 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:52:49 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<com.bootdo_jpa.common.domain.TablesDO> com.bootdo_jpa.common.controller.GeneratorController.list()
2019-04-15 20:52:49 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo_jpa.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-15 20:52:49 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.GeneratorController.generator()
2019-04-15 20:52:49 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo_jpa.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-15 20:52:49 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo_jpa.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-15 20:52:49 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.JobController.add()
2019-04-15 20:52:49 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.JobController.remove(java.lang.Long)
2019-04-15 20:52:49 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.JobController.remove(java.lang.Long[])
2019-04-15 20:52:49 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.JobController.update(com.bootdo_jpa.common.domain.TaskDO)
2019-04-15 20:52:49 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:52:49 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.JobController.save(com.bootdo_jpa.common.domain.TaskDO)
2019-04-15 20:52:49 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.JobController.info(java.lang.Long)
2019-04-15 20:52:49 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.JobController.taskScheduleJob()
2019-04-15 20:52:49 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-15 20:52:49 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-15 20:52:49 -Mapped "{[/common/log/remove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.LogController.remove(java.lang.Long)
2019-04-15 20:52:49 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.LogController.log()
2019-04-15 20:52:49 -Mapped "{[/common/log/list],methods=[GET]}" onto public com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:52:49 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-15 20:52:49 -Mapped "{[/error]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-15 20:52:49 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo_jpa.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-15 20:52:49 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo_jpa.oa.controller.NotifyController.add()
2019-04-15 20:52:49 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-15 20:52:49 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-15 20:52:49 -Mapped "{[/oa/notify/update]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.oa.controller.NotifyController.update(com.bootdo_jpa.oa.domain.NotifyDO)
2019-04-15 20:52:49 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-15 20:52:49 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:52:49 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.oa.controller.NotifyController.save(com.bootdo_jpa.oa.domain.NotifyDO)
2019-04-15 20:52:49 -Mapped "{[/oa/notify/message],methods=[GET]}" onto public com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.oa.controller.NotifyController.message()
2019-04-15 20:52:49 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-15 20:52:49 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo_jpa.oa.controller.NotifyController.oaNotify()
2019-04-15 20:52:49 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto public com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:52:49 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo_jpa.oa.controller.NotifyController.selefNotify()
2019-04-15 20:52:49 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-15 20:52:49 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.DeptController.remove(java.lang.Long)
2019-04-15 20:52:49 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.DeptController.remove(java.lang.Long[])
2019-04-15 20:52:49 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.DeptController.update(com.bootdo_jpa.system.domain.DeptDO)
2019-04-15 20:52:49 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo_jpa.system.domain.DeptDO> com.bootdo_jpa.system.controller.DeptController.list()
2019-04-15 20:52:49 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.DeptController.save(com.bootdo_jpa.system.domain.DeptDO)
2019-04-15 20:52:49 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo_jpa.common.domain.Tree<com.bootdo_jpa.system.domain.DeptDO> com.bootdo_jpa.system.controller.DeptController.tree()
2019-04-15 20:52:49 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-15 20:52:49 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.DeptController.treeView()
2019-04-15 20:52:49 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.DeptController.dept()
2019-04-15 20:52:49 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-15 20:52:49 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.LoginController.main()
2019-04-15 20:52:49 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-15 20:52:49 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.LoginController.logout()
2019-04-15 20:52:49 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-15 20:52:49 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo_jpa.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-15 20:52:49 -Mapped "{[/login],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-15 20:52:49 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto public java.lang.String com.bootdo_jpa.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-15 20:52:49 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.MenuController.remove(java.lang.Long)
2019-04-15 20:52:49 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.MenuController.update(com.bootdo_jpa.system.domain.MenuDO)
2019-04-15 20:52:49 -Mapped "{[/sys/menu/list]}" onto public java.util.List<com.bootdo_jpa.system.domain.MenuDO> com.bootdo_jpa.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:52:49 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.MenuController.save(com.bootdo_jpa.system.domain.MenuDO)
2019-04-15 20:52:49 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo_jpa.common.domain.Tree<com.bootdo_jpa.system.domain.MenuDO> com.bootdo_jpa.system.controller.MenuController.tree(java.lang.Long)
2019-04-15 20:52:49 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo_jpa.common.domain.Tree<com.bootdo_jpa.system.domain.MenuDO> com.bootdo_jpa.system.controller.MenuController.tree()
2019-04-15 20:52:49 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto public java.lang.String com.bootdo_jpa.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-15 20:52:49 -Mapped "{[/sys/menu],methods=[GET]}" onto public java.lang.String com.bootdo_jpa.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-15 20:52:49 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.RoleController.add()
2019-04-15 20:52:49 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.RoleController.update(com.bootdo_jpa.system.domain.RoleDO)
2019-04-15 20:52:49 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo_jpa.system.domain.RoleDO> com.bootdo_jpa.system.controller.RoleController.list()
2019-04-15 20:52:49 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.RoleController.save(java.lang.Long)
2019-04-15 20:52:49 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.RoleController.save(com.bootdo_jpa.system.domain.RoleDO)
2019-04-15 20:52:49 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-15 20:52:49 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.RoleController.role()
2019-04-15 20:52:49 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-15 20:52:49 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo_jpa.system.domain.UserOnline> com.bootdo_jpa.system.controller.SessionController.list()
2019-04-15 20:52:49 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo_jpa.system.controller.SessionController.sessionList()
2019-04-15 20:52:49 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-15 20:52:49 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo_jpa.system.controller.SessionController.online()
2019-04-15 20:52:49 -Mapped "{[/sys/user/exit],methods=[POST]}" onto public boolean com.bootdo_jpa.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:52:49 -Mapped "{[/sys/user/add],methods=[GET]}" onto public java.lang.String com.bootdo_jpa.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-15 20:52:49 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.UserController.remove(java.lang.Long)
2019-04-15 20:52:49 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.UserController.update(com.bootdo_jpa.system.domain.UserDO)
2019-04-15 20:52:49 -Mapped "{[/sys/user/list],methods=[GET]}" onto public com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:52:49 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.UserController.save(com.bootdo_jpa.system.domain.UserDO)
2019-04-15 20:52:49 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-15 20:52:49 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo_jpa.common.domain.Tree<com.bootdo_jpa.system.domain.DeptDO> com.bootdo_jpa.system.controller.UserController.tree()
2019-04-15 20:52:49 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-15 20:52:49 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-15 20:52:49 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.UserController.treeView()
2019-04-15 20:52:49 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.UserController.adminResetPwd(com.bootdo_jpa.system.vo.UserVO)
2019-04-15 20:52:49 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-15 20:52:49 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.UserController.updatePeronal(com.bootdo_jpa.system.domain.UserDO)
2019-04-15 20:52:49 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-15 20:52:49 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.UserController.resetPwd(com.bootdo_jpa.system.vo.UserVO)
2019-04-15 20:52:49 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-15 20:52:49 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-15 20:52:49 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-15 20:52:49 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-15 20:52:49 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-15 20:52:49 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-15 20:52:50 -Registering beans for JMX exposure on startup
2019-04-15 20:52:50 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-15 20:52:50 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-15 20:52:50 -Starting beans in phase 2147483647
2019-04-15 20:52:50 -Starting Quartz Scheduler now
2019-04-15 20:52:50 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-15 20:52:50 -Starting...
2019-04-15 20:52:50 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-15 20:52:50 -Started.
2019-04-15 20:52:50 -Starting ProtocolHandler ["http-nio-8080"]
2019-04-15 20:52:50 -Using a shared selector for servlet write/read
2019-04-15 20:52:50 -Tomcat started on port(s): 8080 (http) with context path ''
2019-04-15 20:52:50 -Started BootdoJpaApplication in 9.791 seconds (JVM running for 10.493)
2019-04-15 20:52:50 -1. Connection.isClosed() returned false
2019-04-15 20:52:50 -1. Connection.getAutoCommit() returned true
2019-04-15 20:52:50 -1. Connection.setAutoCommit(false) returned 
2019-04-15 20:52:50 -1. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:52:50 -1. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:52:50 -1. Connection.prepareStatement(select taskdo0_.id as id1_13_, taskdo0_.bean_class as bean_cla2_13_, taskdo0_.create_by as create_b3_13_, taskdo0_.create_date as create_d4_13_, taskdo0_.cron_expression as cron_exp5_13_, taskdo0_.description as descript6_13_, taskdo0_.is_concurrent as is_concu7_13_, taskdo0_.job_group as job_grou8_13_, taskdo0_.job_name as job_name9_13_, taskdo0_.job_status as job_sta10_13_, taskdo0_.method_name as method_11_13_, taskdo0_.spring_bean as spring_12_13_, taskdo0_.update_by as update_13_13_, taskdo0_.update_date as update_14_13_ from sys_task taskdo0_) returned net.sf.log4jdbc.PreparedStatementSpy@769f6023
2019-04-15 20:52:50 -1. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:52:50 -1. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:52:50 -1. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:52:50 -1. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:52:50 -1. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:52:50 -1. Connection.getAutoCommit() returned false
2019-04-15 20:52:50 -1. Connection.getAutoCommit() returned false
2019-04-15 20:52:50 -select taskdo0_.id as id1_13_, taskdo0_.bean_class as bean_cla2_13_, taskdo0_.create_by as 
create_b3_13_, taskdo0_.create_date as create_d4_13_, taskdo0_.cron_expression as cron_exp5_13_, 
taskdo0_.description as descript6_13_, taskdo0_.is_concurrent as is_concu7_13_, taskdo0_.job_group 
as job_grou8_13_, taskdo0_.job_name as job_name9_13_, taskdo0_.job_status as job_sta10_13_, 
taskdo0_.method_name as method_11_13_, taskdo0_.spring_bean as spring_12_13_, taskdo0_.update_by 
as update_13_13_, taskdo0_.update_date as update_14_13_ from sys_task taskdo0_ 

2019-04-15 20:52:50 -select taskdo0_.id as id1_13_, taskdo0_.bean_class as bean_cla2_13_, taskdo0_.create_by as 
create_b3_13_, taskdo0_.create_date as create_d4_13_, taskdo0_.cron_expression as cron_exp5_13_, 
taskdo0_.description as descript6_13_, taskdo0_.is_concurrent as is_concu7_13_, taskdo0_.job_group 
as job_grou8_13_, taskdo0_.job_name as job_name9_13_, taskdo0_.job_status as job_sta10_13_, 
taskdo0_.method_name as method_11_13_, taskdo0_.spring_bean as spring_12_13_, taskdo0_.update_by 
as update_13_13_, taskdo0_.update_date as update_14_13_ from sys_task taskdo0_ 
 {executed in 1 msec}
2019-04-15 20:52:50 -1. ResultSet.new ResultSet returned 
2019-04-15 20:52:50 -1. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@3dabdd11
2019-04-15 20:52:50 -1. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@587bf2e1 - Field level information: 
	com.mysql.jdbc.Field@6530a1de[catalog=bootdo_jpa,tableName=taskdo0_,originalTableName=sys_task,columnName=id1_13_,originalColumnName=id,mysqlType=8(FIELD_TYPE_LONGLONG),flags= AUTO_INCREMENT PRIMARY_KEY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@20b921be[catalog=bootdo_jpa,tableName=taskdo0_,originalTableName=sys_task,columnName=bean_cla2_13_,originalColumnName=bean_class,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@431923ed[catalog=bootdo_jpa,tableName=taskdo0_,originalTableName=sys_task,columnName=create_b3_13_,originalColumnName=create_by,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@44723d95[catalog=bootdo_jpa,tableName=taskdo0_,originalTableName=sys_task,columnName=create_d4_13_,originalColumnName=create_date,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@242c4a94[catalog=bootdo_jpa,tableName=taskdo0_,originalTableName=sys_task,columnName=cron_exp5_13_,originalColumnName=cron_expression,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@4df13b7e[catalog=bootdo_jpa,tableName=taskdo0_,originalTableName=sys_task,columnName=descript6_13_,originalColumnName=description,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@477d6f66[catalog=bootdo_jpa,tableName=taskdo0_,originalTableName=sys_task,columnName=is_concu7_13_,originalColumnName=is_concurrent,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@12b66c89[catalog=bootdo_jpa,tableName=taskdo0_,originalTableName=sys_task,columnName=job_grou8_13_,originalColumnName=job_group,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@5408fca1[catalog=bootdo_jpa,tableName=taskdo0_,originalTableName=sys_task,columnName=job_name9_13_,originalColumnName=job_name,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@10660795[catalog=bootdo_jpa,tableName=taskdo0_,originalTableName=sys_task,columnName=job_sta10_13_,originalColumnName=job_status,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@3ccc4ca0[catalog=bootdo_jpa,tableName=taskdo0_,originalTableName=sys_task,columnName=method_11_13_,originalColumnName=method_name,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@1dbfbd94[catalog=bootdo_jpa,tableName=taskdo0_,originalTableName=sys_task,columnName=spring_12_13_,originalColumnName=spring_bean,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@ec1b776[catalog=bootdo_jpa,tableName=taskdo0_,originalTableName=sys_task,columnName=update_13_13_,originalColumnName=update_by,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@2e3b4394[catalog=bootdo_jpa,tableName=taskdo0_,originalTableName=sys_task,columnName=update_14_13_,originalColumnName=update_date,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
2019-04-15 20:52:50 -1. ResultSet.next() returned true
2019-04-15 20:52:50 -1. ResultSet.getLong(id1_13_) returned 2
2019-04-15 20:52:50 -1. ResultSet.wasNull() returned false
2019-04-15 20:52:50 -1. ResultSet.getString(bean_cla2_13_) returned com.bootdo-jpa.common.task.WelcomeJob
2019-04-15 20:52:50 -1. ResultSet.wasNull() returned false
2019-04-15 20:52:50 -1. ResultSet.getString(create_b3_13_) returned null
2019-04-15 20:52:50 -1. ResultSet.getTimestamp(create_d4_13_) returned 2017-05-19 18:30:56.0
2019-04-15 20:52:50 -1. ResultSet.wasNull() returned false
2019-04-15 20:52:50 -1. ResultSet.getString(cron_exp5_13_) returned 0/10 * * * * ?
2019-04-15 20:52:50 -1. ResultSet.wasNull() returned false
2019-04-15 20:52:50 -1. ResultSet.getString(descript6_13_) returned 
2019-04-15 20:52:50 -1. ResultSet.wasNull() returned false
2019-04-15 20:52:50 -1. ResultSet.getString(is_concu7_13_) returned 1
2019-04-15 20:52:50 -1. ResultSet.wasNull() returned false
2019-04-15 20:52:50 -1. ResultSet.getString(job_grou8_13_) returned group1
2019-04-15 20:52:50 -1. ResultSet.wasNull() returned false
2019-04-15 20:52:50 -1. ResultSet.getString(job_name9_13_) returned welcomJob
2019-04-15 20:52:50 -1. ResultSet.wasNull() returned false
2019-04-15 20:52:50 -1. ResultSet.getString(job_sta10_13_) returned 0
2019-04-15 20:52:50 -1. ResultSet.wasNull() returned false
2019-04-15 20:52:50 -1. ResultSet.getString(method_11_13_) returned run1
2019-04-15 20:52:50 -1. ResultSet.wasNull() returned false
2019-04-15 20:52:50 -1. ResultSet.getString(spring_12_13_) returned 
2019-04-15 20:52:50 -1. ResultSet.wasNull() returned false
2019-04-15 20:52:50 -1. ResultSet.getString(update_13_13_) returned 4028ea815a3d2a8c015a3d2f8d2a0002
2019-04-15 20:52:50 -1. ResultSet.wasNull() returned false
2019-04-15 20:52:50 -1. ResultSet.getTimestamp(update_14_13_) returned 2017-05-19 18:31:07.0
2019-04-15 20:52:50 -1. ResultSet.wasNull() returned false
2019-04-15 20:52:50 -1. ResultSet.next() returned false
2019-04-15 20:52:50 -1. ResultSet.close() returned 
2019-04-15 20:52:50 -1. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:52:50 -1. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:52:50 -1. Connection.isClosed() returned false
2019-04-15 20:52:50 -1. PreparedStatement.clearParameters() returned 
2019-04-15 20:52:50 -1. Connection.commit() returned 
2019-04-15 20:52:50 -1. Connection.setAutoCommit(true) returned 
2019-04-15 20:52:50 -1. Connection.isClosed() returned false
2019-04-15 20:52:50 -1. Connection.clearWarnings() returned 
2019-04-15 20:52:50 -1. Connection.clearWarnings() returned 
2019-04-15 20:53:01 -A cookie header was received [1555251430,1555253855,1555254110; Idea-4fde7523=9492d8e9-03e1-4672-9c34-0f8df203a415] that contained an invalid cookie. That cookie will be ignored.Note: further occurrences of this error will be logged at DEBUG level.
2019-04-15 20:53:01 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-15 20:53:01 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-15 20:53:01 -FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
2019-04-15 20:53:01 -Enabling session validation scheduler...
2019-04-15 20:53:01 -请求地址 : http://localhost:8080/login;JSESSIONID=bd452e8b-23e2-441a-9205-d5b8ebcd1d9a
2019-04-15 20:53:01 -HTTP METHOD : GET
2019-04-15 20:53:01 -CLASS_METHOD : com.bootdo_jpa.system.controller.LoginController.login
2019-04-15 20:53:01 -参数 : [{}]
2019-04-15 20:53:01 -耗时 : 2
2019-04-15 20:53:02 -请求地址 : http://localhost:8080/getVerify
2019-04-15 20:53:02 -HTTP METHOD : GET
2019-04-15 20:53:02 -CLASS_METHOD : com.bootdo_jpa.system.controller.LoginController.getVerify
2019-04-15 20:53:02 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@63b58eb2, org.apache.shiro.web.servlet.ShiroHttpServletResponse@41573c95]
2019-04-15 20:53:03 -9027
2019-04-15 20:53:03 -耗时 : 720
2019-04-15 20:53:03 -请求地址 : http://localhost:8080/login
2019-04-15 20:53:03 -HTTP METHOD : GET
2019-04-15 20:53:03 -CLASS_METHOD : com.bootdo_jpa.system.controller.LoginController.login
2019-04-15 20:53:03 -参数 : [{}]
2019-04-15 20:53:03 -耗时 : 0
2019-04-15 20:53:07 -请求地址 : http://localhost:8080/login
2019-04-15 20:53:07 -HTTP METHOD : POST
2019-04-15 20:53:07 -CLASS_METHOD : com.bootdo_jpa.system.controller.LoginController.ajaxLogin
2019-04-15 20:53:07 -参数 : [admin, 111111, , org.apache.shiro.web.servlet.ShiroHttpServletRequest@f7b381b]
2019-04-15 20:53:07 -耗时 : 4
2019-04-15 20:53:07 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-15 20:53:07 -1. Connection.isClosed() returned false
2019-04-15 20:53:07 -1. Connection.getAutoCommit() returned true
2019-04-15 20:53:07 -1. Connection.setAutoCommit(false) returned 
2019-04-15 20:53:07 -2. Connection opened
2019-04-15 20:53:07 -2. Connection.new Connection returned 
2019-04-15 20:53:07 -2. Connection.getAutoCommit() returned true
2019-04-15 20:53:07 -2. Connection.isClosed() returned false
2019-04-15 20:53:07 -2. Statement.new Statement returned 
2019-04-15 20:53:07 -2. Connection.createStatement() returned net.sf.log4jdbc.StatementSpy@74f610af
2019-04-15 20:53:07 -2. Connection.getAutoCommit() returned true
2019-04-15 20:53:07 -select 'x' 

2019-04-15 20:53:07 -select 'x' 
 {executed in 0 msec}
2019-04-15 20:53:07 -2. ResultSet.new ResultSet returned 
2019-04-15 20:53:07 -2. Statement.executeQuery(select 'x') returned net.sf.log4jdbc.ResultSetSpy@28bad57f
2019-04-15 20:53:07 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@45486546 - Field level information: 
	com.mysql.jdbc.Field@50eefe3a[catalog=,tableName=,originalTableName=,columnName=x,originalColumnName=,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
2019-04-15 20:53:07 -2. ResultSet.next() returned true
2019-04-15 20:53:07 -2. ResultSet.close() returned 
2019-04-15 20:53:07 -2. Statement.close() returned 
2019-04-15 20:53:07 -2. Connection.getAutoCommit() returned true
2019-04-15 20:53:07 -2. Connection.getHoldability() returned 2
2019-04-15 20:53:07 -2. Connection.isReadOnly() returned false
2019-04-15 20:53:07 -2. Connection.getTransactionIsolation() returned 4
2019-04-15 20:53:07 -2. Connection.isClosed() returned false
2019-04-15 20:53:07 -2. Connection.getAutoCommit() returned true
2019-04-15 20:53:07 -2. Connection.setAutoCommit(false) returned 
2019-04-15 20:53:07 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:53:07 -2. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:53:07 -2. Connection.prepareStatement(select next_val as id_val from hibernate_sequence for update) returned net.sf.log4jdbc.PreparedStatementSpy@58438108
2019-04-15 20:53:07 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:53:07 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:07 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:07 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:53:07 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:53:07 -2. Connection.getAutoCommit() returned false
2019-04-15 20:53:07 -2. Connection.getAutoCommit() returned false
2019-04-15 20:53:07 -select next_val as id_val from hibernate_sequence for update 

2019-04-15 20:53:07 -select next_val as id_val from hibernate_sequence for update 
 {executed in 1 msec}
2019-04-15 20:53:07 -2. ResultSet.new ResultSet returned 
2019-04-15 20:53:07 -2. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@1395c6e7
2019-04-15 20:53:07 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@7ba290b - Field level information: 
	com.mysql.jdbc.Field@4a3737c9[catalog=bootdo_jpa,tableName=hibernate_sequence,originalTableName=hibernate_sequence,columnName=id_val,originalColumnName=next_val,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
2019-04-15 20:53:07 -2. ResultSet.next() returned true
2019-04-15 20:53:07 -2. ResultSet.getLong(1) returned 1
2019-04-15 20:53:07 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:07 -2. ResultSet.close() returned 
2019-04-15 20:53:07 -2. Connection.isClosed() returned false
2019-04-15 20:53:07 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:53:07 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:53:07 -2. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:53:07 -2. Connection.prepareStatement(update hibernate_sequence set next_val= ? where next_val=?) returned net.sf.log4jdbc.PreparedStatementSpy@23dca01e
2019-04-15 20:53:07 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:53:07 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:07 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:07 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:53:07 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:53:07 -2. PreparedStatement.setLong(1, 2) returned 
2019-04-15 20:53:07 -2. PreparedStatement.setLong(2, 1) returned 
2019-04-15 20:53:07 -2. Connection.getAutoCommit() returned false
2019-04-15 20:53:07 -update hibernate_sequence set next_val= 2 where next_val=1 

2019-04-15 20:53:07 -update hibernate_sequence set next_val= 2 where next_val=1 
 {executed in 26 msec}
2019-04-15 20:53:07 -2. PreparedStatement.executeUpdate() returned 14
2019-04-15 20:53:07 -2. Connection.isClosed() returned false
2019-04-15 20:53:07 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:53:07 -2. Connection.commit() returned 
2019-04-15 20:53:07 -2. Connection.setAutoCommit(true) returned 
2019-04-15 20:53:07 -2. Connection.clearWarnings() returned 
2019-04-15 20:53:07 -1. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:53:07 -1. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:53:07 -1. Connection.prepareStatement(insert into sys_log (gmt_create, ip, method, operation, params, time, user_id, username, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)) returned net.sf.log4jdbc.PreparedStatementSpy@3bfeaa3c
2019-04-15 20:53:07 -1. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:53:07 -1. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:07 -1. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:07 -1. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:53:07 -1. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:53:07 -1. PreparedStatement.setTimestamp(1, 2019-04-15 20:53:07.817) returned 
2019-04-15 20:53:07 -1. PreparedStatement.setString(2, "127.0.0.1") returned 
2019-04-15 20:53:07 -1. PreparedStatement.setString(3, "com.bootdo_jpa.system.controller.LoginController.ajaxLogin()") returned 
2019-04-15 20:53:07 -1. PreparedStatement.setString(4, "登录") returned 
2019-04-15 20:53:07 -1. PreparedStatement.setNull(5, 12) returned 
2019-04-15 20:53:07 -1. PreparedStatement.setInt(6, 4) returned 
2019-04-15 20:53:07 -1. PreparedStatement.setLong(7, -1) returned 
2019-04-15 20:53:07 -1. PreparedStatement.setString(8, "获取用户信息为空") returned 
2019-04-15 20:53:07 -1. PreparedStatement.setLong(9, 1) returned 
2019-04-15 20:53:07 -1. Connection.getAutoCommit() returned false
2019-04-15 20:53:07 -1. Connection.getAutoCommit() returned false
2019-04-15 20:53:07 -insert into sys_log (gmt_create, ip, method, operation, params, time, user_id, username, id) 
values ('2019-04-15 20:53:07', '127.0.0.1', 'com.bootdo_jpa.system.controller.LoginController.ajaxLogin()', 
'登录', NULL, 4, -1, '获取用户信息为空', 1) 

2019-04-15 20:53:07 -insert into sys_log (gmt_create, ip, method, operation, params, time, user_id, username, id) 
values ('2019-04-15 20:53:07', '127.0.0.1', 'com.bootdo_jpa.system.controller.LoginController.ajaxLogin()', 
'登录', NULL, 4, -1, '获取用户信息为空', 1) 
 {executed in 8 msec}
2019-04-15 20:53:07 -1. PreparedStatement.executeUpdate() returned 1
2019-04-15 20:53:07 -1. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:07 -1. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:07 -1. Connection.isClosed() returned false
2019-04-15 20:53:07 -1. PreparedStatement.clearParameters() returned 
2019-04-15 20:53:07 -1. Connection.commit() returned 
2019-04-15 20:53:07 -1. Connection.setAutoCommit(true) returned 
2019-04-15 20:53:07 -1. Connection.isClosed() returned false
2019-04-15 20:53:07 -1. Connection.clearWarnings() returned 
2019-04-15 20:53:07 -1. Connection.clearWarnings() returned 
2019-04-15 20:53:12 -请求地址 : http://localhost:8080/login
2019-04-15 20:53:12 -HTTP METHOD : POST
2019-04-15 20:53:12 -CLASS_METHOD : com.bootdo_jpa.system.controller.LoginController.ajaxLogin
2019-04-15 20:53:12 -参数 : [admin, 111111, 9027, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6b55f2cf]
2019-04-15 20:53:12 -1. Connection.isClosed() returned false
2019-04-15 20:53:12 -1. Connection.setReadOnly(true) returned 
2019-04-15 20:53:12 -1. Connection.getAutoCommit() returned true
2019-04-15 20:53:12 -1. Connection.setAutoCommit(false) returned 
2019-04-15 20:53:12 -1. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:53:12 -1. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:53:12 -1. Connection.prepareStatement(select userdo0_.user_id as user_id1_14_, userdo0_.birth as birth2_14_, userdo0_.city as city3_14_, userdo0_.dept_id as dept_id4_14_, userdo0_.district as district5_14_, userdo0_.email as email6_14_, userdo0_.gmt_create as gmt_crea7_14_, userdo0_.gmt_modified as gmt_modi8_14_, userdo0_.hobby as hobby9_14_, userdo0_.live_address as live_ad10_14_, userdo0_.mobile as mobile11_14_, userdo0_.name as name12_14_, userdo0_.password as passwor13_14_, userdo0_.pic_id as pic_id14_14_, userdo0_.province as provinc15_14_, userdo0_.sex as sex16_14_, userdo0_.status as status17_14_, userdo0_.user_id_create as user_id18_14_, userdo0_.username as usernam19_14_ from sys_user userdo0_ where userdo0_.username=?) returned net.sf.log4jdbc.PreparedStatementSpy@6f68f0dc
2019-04-15 20:53:12 -1. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:53:12 -1. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:12 -1. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:12 -1. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:53:12 -1. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:53:12 -1. PreparedStatement.setString(1, "admin") returned 
2019-04-15 20:53:12 -1. Connection.getAutoCommit() returned false
2019-04-15 20:53:12 -1. Connection.getAutoCommit() returned false
2019-04-15 20:53:12 -select userdo0_.user_id as user_id1_14_, userdo0_.birth as birth2_14_, userdo0_.city as city3_14_, 
userdo0_.dept_id as dept_id4_14_, userdo0_.district as district5_14_, userdo0_.email as email6_14_, 
userdo0_.gmt_create as gmt_crea7_14_, userdo0_.gmt_modified as gmt_modi8_14_, userdo0_.hobby 
as hobby9_14_, userdo0_.live_address as live_ad10_14_, userdo0_.mobile as mobile11_14_, userdo0_.name 
as name12_14_, userdo0_.password as passwor13_14_, userdo0_.pic_id as pic_id14_14_, userdo0_.province 
as provinc15_14_, userdo0_.sex as sex16_14_, userdo0_.status as status17_14_, userdo0_.user_id_create 
as user_id18_14_, userdo0_.username as usernam19_14_ from sys_user userdo0_ where userdo0_.username='admin' 

2019-04-15 20:53:12 -select userdo0_.user_id as user_id1_14_, userdo0_.birth as birth2_14_, userdo0_.city as city3_14_, 
userdo0_.dept_id as dept_id4_14_, userdo0_.district as district5_14_, userdo0_.email as email6_14_, 
userdo0_.gmt_create as gmt_crea7_14_, userdo0_.gmt_modified as gmt_modi8_14_, userdo0_.hobby 
as hobby9_14_, userdo0_.live_address as live_ad10_14_, userdo0_.mobile as mobile11_14_, userdo0_.name 
as name12_14_, userdo0_.password as passwor13_14_, userdo0_.pic_id as pic_id14_14_, userdo0_.province 
as provinc15_14_, userdo0_.sex as sex16_14_, userdo0_.status as status17_14_, userdo0_.user_id_create 
as user_id18_14_, userdo0_.username as usernam19_14_ from sys_user userdo0_ where userdo0_.username='admin' 
 {executed in 1 msec}
2019-04-15 20:53:12 -1. ResultSet.new ResultSet returned 
2019-04-15 20:53:12 -1. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@1ad51385
2019-04-15 20:53:12 -1. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@30097eaa - Field level information: 
	com.mysql.jdbc.Field@18cf8667[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=user_id1_14_,originalColumnName=user_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags= AUTO_INCREMENT PRIMARY_KEY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@580d6b81[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=birth2_14_,originalColumnName=birth,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@6af6123e[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=city3_14_,originalColumnName=city,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@1171dde4[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=dept_id4_14_,originalColumnName=dept_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@75e98d13[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=district5_14_,originalColumnName=district,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@468ba14c[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=email6_14_,originalColumnName=email,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@1cb63c41[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=gmt_crea7_14_,originalColumnName=gmt_create,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@3374cce[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=gmt_modi8_14_,originalColumnName=gmt_modified,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@3a0fc8ae[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=hobby9_14_,originalColumnName=hobby,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@21158f62[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=live_ad10_14_,originalColumnName=live_address,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@c6cfb35[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=mobile11_14_,originalColumnName=mobile,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@3504874a[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=name12_14_,originalColumnName=name,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@710a63fc[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=passwor13_14_,originalColumnName=password,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@7c698c20[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=pic_id14_14_,originalColumnName=pic_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@173775cb[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=provinc15_14_,originalColumnName=province,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@6989eb0[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=sex16_14_,originalColumnName=sex,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@242f181c[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=status17_14_,originalColumnName=status,mysqlType=1(FIELD_TYPE_TINY),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@14979835[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=user_id18_14_,originalColumnName=user_id_create,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@38a23e41[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=usernam19_14_,originalColumnName=username,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
2019-04-15 20:53:12 -1. ResultSet.next() returned true
2019-04-15 20:53:12 -1. ResultSet.getLong(user_id1_14_) returned 1
2019-04-15 20:53:12 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -1. ResultSet.getTimestamp(birth2_14_) returned 2017-12-14 00:00:00.0
2019-04-15 20:53:12 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -1. ResultSet.getString(city3_14_) returned 北京市市辖区
2019-04-15 20:53:12 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -1. ResultSet.getLong(dept_id4_14_) returned 6
2019-04-15 20:53:12 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -1. ResultSet.getString(district5_14_) returned 东城区
2019-04-15 20:53:12 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -1. ResultSet.getString(email6_14_) returned admin@example.com
2019-04-15 20:53:12 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -1. ResultSet.getTimestamp(gmt_crea7_14_) returned 2017-08-15 21:40:39.0
2019-04-15 20:53:12 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -1. ResultSet.getTimestamp(gmt_modi8_14_) returned 2017-08-15 21:41:00.0
2019-04-15 20:53:12 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -1. ResultSet.getString(hobby9_14_) returned 122;121;
2019-04-15 20:53:12 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -1. ResultSet.getString(live_ad10_14_) returned ccc
2019-04-15 20:53:12 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -1. ResultSet.getString(mobile11_14_) returned 17699999999
2019-04-15 20:53:12 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -1. ResultSet.getString(name12_14_) returned 超级管理员
2019-04-15 20:53:12 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -1. ResultSet.getString(passwor13_14_) returned 27bd386e70f280e24c2f4f2a549b82cf
2019-04-15 20:53:12 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -1. ResultSet.getLong(pic_id14_14_) returned 138
2019-04-15 20:53:12 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -1. ResultSet.getString(provinc15_14_) returned 北京市
2019-04-15 20:53:12 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -1. ResultSet.getLong(sex16_14_) returned 96
2019-04-15 20:53:12 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -1. ResultSet.getInt(status17_14_) returned 1
2019-04-15 20:53:12 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -1. ResultSet.getLong(user_id18_14_) returned 1
2019-04-15 20:53:12 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -1. ResultSet.getString(usernam19_14_) returned admin
2019-04-15 20:53:12 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -1. ResultSet.next() returned false
2019-04-15 20:53:12 -1. ResultSet.close() returned 
2019-04-15 20:53:12 -1. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:12 -1. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:12 -1. Connection.isClosed() returned false
2019-04-15 20:53:12 -1. PreparedStatement.clearParameters() returned 
2019-04-15 20:53:12 -1. Connection.commit() returned 
2019-04-15 20:53:12 -1. Connection.setAutoCommit(true) returned 
2019-04-15 20:53:12 -1. Connection.isReadOnly() returned true
2019-04-15 20:53:12 -1. Connection.setReadOnly(false) returned 
2019-04-15 20:53:12 -耗时 : 27
2019-04-15 20:53:12 -2. Connection.isClosed() returned false
2019-04-15 20:53:12 -2. Connection.getAutoCommit() returned true
2019-04-15 20:53:12 -1. Connection.isClosed() returned false
2019-04-15 20:53:12 -1. Connection.clearWarnings() returned 
2019-04-15 20:53:12 -2. Connection.setAutoCommit(false) returned 
2019-04-15 20:53:12 -1. Connection.clearWarnings() returned 
2019-04-15 20:53:12 -1. Connection.isClosed() returned false
2019-04-15 20:53:12 -1. Connection.getAutoCommit() returned true
2019-04-15 20:53:12 -1. Connection.setAutoCommit(false) returned 
2019-04-15 20:53:12 -1. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:53:12 -1. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:53:12 -1. Connection.prepareStatement(select next_val as id_val from hibernate_sequence for update) returned net.sf.log4jdbc.PreparedStatementSpy@14a26dbc
2019-04-15 20:53:12 -1. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:53:12 -1. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:12 -1. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:12 -1. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:53:12 -1. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:53:12 -1. Connection.getAutoCommit() returned false
2019-04-15 20:53:12 -1. Connection.getAutoCommit() returned false
2019-04-15 20:53:12 -select next_val as id_val from hibernate_sequence for update 

2019-04-15 20:53:12 -select next_val as id_val from hibernate_sequence for update 
 {executed in 3 msec}
2019-04-15 20:53:12 -1. ResultSet.new ResultSet returned 
2019-04-15 20:53:12 -1. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@109debf0
2019-04-15 20:53:12 -1. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@559f6787 - Field level information: 
	com.mysql.jdbc.Field@63488c34[catalog=bootdo_jpa,tableName=hibernate_sequence,originalTableName=hibernate_sequence,columnName=id_val,originalColumnName=next_val,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
2019-04-15 20:53:12 -1. ResultSet.next() returned true
2019-04-15 20:53:12 -1. ResultSet.getLong(1) returned 2
2019-04-15 20:53:12 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -1. ResultSet.close() returned 
2019-04-15 20:53:12 -1. Connection.isClosed() returned false
2019-04-15 20:53:12 -1. PreparedStatement.clearParameters() returned 
2019-04-15 20:53:12 -1. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:53:12 -1. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:53:12 -1. Connection.prepareStatement(update hibernate_sequence set next_val= ? where next_val=?) returned net.sf.log4jdbc.PreparedStatementSpy@1bbd6767
2019-04-15 20:53:12 -1. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:53:12 -1. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:12 -1. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:12 -1. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:53:12 -1. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:53:12 -1. PreparedStatement.setLong(1, 3) returned 
2019-04-15 20:53:12 -1. PreparedStatement.setLong(2, 2) returned 
2019-04-15 20:53:12 -1. Connection.getAutoCommit() returned false
2019-04-15 20:53:12 -update hibernate_sequence set next_val= 3 where next_val=2 

2019-04-15 20:53:12 -请求地址 : http://localhost:8080/index
2019-04-15 20:53:12 -HTTP METHOD : GET
2019-04-15 20:53:12 -CLASS_METHOD : com.bootdo_jpa.system.controller.LoginController.index
2019-04-15 20:53:12 -参数 : [{}]
2019-04-15 20:53:12 -3. Connection opened
2019-04-15 20:53:12 -3. Connection.new Connection returned 
2019-04-15 20:53:12 -3. Connection.getAutoCommit() returned true
2019-04-15 20:53:12 -3. Connection.isClosed() returned false
2019-04-15 20:53:12 -3. Statement.new Statement returned 
2019-04-15 20:53:12 -3. Connection.createStatement() returned net.sf.log4jdbc.StatementSpy@3706285b
2019-04-15 20:53:12 -3. Connection.getAutoCommit() returned true
2019-04-15 20:53:12 -select 'x' 

2019-04-15 20:53:12 -select 'x' 
 {executed in 0 msec}
2019-04-15 20:53:12 -3. ResultSet.new ResultSet returned 
2019-04-15 20:53:12 -3. Statement.executeQuery(select 'x') returned net.sf.log4jdbc.ResultSetSpy@2a4eac9e
2019-04-15 20:53:12 -3. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@6498550 - Field level information: 
	com.mysql.jdbc.Field@6bc94b18[catalog=,tableName=,originalTableName=,columnName=x,originalColumnName=,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
2019-04-15 20:53:12 -3. ResultSet.next() returned true
2019-04-15 20:53:12 -3. ResultSet.close() returned 
2019-04-15 20:53:12 -3. Statement.close() returned 
2019-04-15 20:53:12 -3. Connection.getAutoCommit() returned true
2019-04-15 20:53:12 -3. Connection.getHoldability() returned 2
2019-04-15 20:53:12 -3. Connection.isReadOnly() returned false
2019-04-15 20:53:12 -3. Connection.getTransactionIsolation() returned 4
2019-04-15 20:53:12 -3. Connection.isClosed() returned false
2019-04-15 20:53:12 -3. Connection.setReadOnly(true) returned 
2019-04-15 20:53:12 -3. Connection.getAutoCommit() returned true
2019-04-15 20:53:12 -3. Connection.setAutoCommit(false) returned 
2019-04-15 20:53:12 -update hibernate_sequence set next_val= 3 where next_val=2 
 {executed in 26 msec}
2019-04-15 20:53:12 -1. PreparedStatement.executeUpdate() returned 14
2019-04-15 20:53:12 -1. Connection.isClosed() returned false
2019-04-15 20:53:12 -1. PreparedStatement.clearParameters() returned 
2019-04-15 20:53:12 -1. Connection.commit() returned 
2019-04-15 20:53:12 -1. Connection.setAutoCommit(true) returned 
2019-04-15 20:53:12 -1. Connection.clearWarnings() returned 
2019-04-15 20:53:12 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:53:12 -2. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:53:12 -2. Connection.prepareStatement(insert into sys_log (gmt_create, ip, method, operation, params, time, user_id, username, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)) returned net.sf.log4jdbc.PreparedStatementSpy@577d993b
2019-04-15 20:53:12 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:53:12 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:12 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:12 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:53:12 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:53:12 -2. PreparedStatement.setTimestamp(1, 2019-04-15 20:53:12.379) returned 
2019-04-15 20:53:12 -2. PreparedStatement.setString(2, "127.0.0.1") returned 
2019-04-15 20:53:12 -2. PreparedStatement.setString(3, "com.bootdo_jpa.system.controller.LoginController.ajaxLogin()") returned 
2019-04-15 20:53:12 -2. PreparedStatement.setString(4, "登录") returned 
2019-04-15 20:53:12 -2. PreparedStatement.setNull(5, 12) returned 
2019-04-15 20:53:12 -2. PreparedStatement.setInt(6, 27) returned 
2019-04-15 20:53:12 -2. PreparedStatement.setLong(7, 1) returned 
2019-04-15 20:53:12 -2. PreparedStatement.setString(8, "admin") returned 
2019-04-15 20:53:12 -2. PreparedStatement.setLong(9, 2) returned 
2019-04-15 20:53:12 -2. Connection.getAutoCommit() returned false
2019-04-15 20:53:12 -2. Connection.getAutoCommit() returned false
2019-04-15 20:53:12 -insert into sys_log (gmt_create, ip, method, operation, params, time, user_id, username, id) 
values ('2019-04-15 20:53:12', '127.0.0.1', 'com.bootdo_jpa.system.controller.LoginController.ajaxLogin()', 
'登录', NULL, 27, 1, 'admin', 2) 

2019-04-15 20:53:12 -insert into sys_log (gmt_create, ip, method, operation, params, time, user_id, username, id) 
values ('2019-04-15 20:53:12', '127.0.0.1', 'com.bootdo_jpa.system.controller.LoginController.ajaxLogin()', 
'登录', NULL, 27, 1, 'admin', 2) 
 {executed in 1 msec}
2019-04-15 20:53:12 -2. PreparedStatement.executeUpdate() returned 1
2019-04-15 20:53:12 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:12 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:12 -2. Connection.isClosed() returned false
2019-04-15 20:53:12 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:53:12 -3. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:53:12 -3. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:53:12 -3. Connection.prepareStatement(select distinct m.menu_id , m.parent_id, m.name, m.url, m.perms, m.`type`, m.icon, m.order_num, m.gmt_create, m.gmt_modified 		from sys_menu m 		left join sys_role_menu rm on m.menu_id = rm.menu_id  		left join sys_user_role ur on rm.role_id =ur.role_id  		where ur.user_id = ? and m.type in (0,1)  		order by m.order_num) returned net.sf.log4jdbc.PreparedStatementSpy@7ec3b8fa
2019-04-15 20:53:12 -3. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:53:12 -3. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:12 -3. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:12 -3. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:53:12 -3. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:53:12 -3. PreparedStatement.setLong(1, 1) returned 
2019-04-15 20:53:12 -3. Connection.getAutoCommit() returned false
2019-04-15 20:53:12 -3. Connection.getAutoCommit() returned false
2019-04-15 20:53:12 -select distinct m.menu_id , m.parent_id, m.name, m.url, m.perms, m.`type`, m.icon, m.order_num, 
m.gmt_create, m.gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id 
left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = 1 and m.type in (0,1) 
order by m.order_num 

2019-04-15 20:53:12 -select distinct m.menu_id , m.parent_id, m.name, m.url, m.perms, m.`type`, m.icon, m.order_num, 
m.gmt_create, m.gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id 
left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = 1 and m.type in (0,1) 
order by m.order_num 
 {executed in 3 msec}
2019-04-15 20:53:12 -3. ResultSet.new ResultSet returned 
2019-04-15 20:53:12 -3. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@43be6b52
2019-04-15 20:53:12 -3. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@69752ff5 - Field level information: 
	com.mysql.jdbc.Field@a925e49[catalog=bootdo_jpa,tableName=m,originalTableName=sys_menu,columnName=menu_id,originalColumnName=menu_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@1a9474dc[catalog=bootdo_jpa,tableName=m,originalTableName=sys_menu,columnName=parent_id,originalColumnName=parent_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@2ac07827[catalog=bootdo_jpa,tableName=m,originalTableName=sys_menu,columnName=name,originalColumnName=name,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@6a8af00d[catalog=bootdo_jpa,tableName=m,originalTableName=sys_menu,columnName=url,originalColumnName=url,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@72728b03[catalog=bootdo_jpa,tableName=m,originalTableName=sys_menu,columnName=perms,originalColumnName=perms,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@4b793305[catalog=bootdo_jpa,tableName=m,originalTableName=sys_menu,columnName=type,originalColumnName=type,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@62516b0d[catalog=bootdo_jpa,tableName=m,originalTableName=sys_menu,columnName=icon,originalColumnName=icon,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@5f66e5d2[catalog=bootdo_jpa,tableName=m,originalTableName=sys_menu,columnName=order_num,originalColumnName=order_num,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@392a47ae[catalog=bootdo_jpa,tableName=m,originalTableName=sys_menu,columnName=gmt_create,originalColumnName=gmt_create,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@3bc9aa95[catalog=bootdo_jpa,tableName=m,originalTableName=sys_menu,columnName=gmt_modified,originalColumnName=gmt_modified,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
2019-04-15 20:53:12 -3. ResultSet.next() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(menu_id) returned 85
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:53:12 -3. ResultSet.getString(icon) returned fa fa-pencil-square
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(name) returned 通知公告
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(order_num) returned 0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(parent_id) returned 84
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(perms) returned oa:notify:notify
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(type) returned 1
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(url) returned oa/notify
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.next() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(menu_id) returned 98
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:53:12 -3. ResultSet.getString(icon) returned fa fa-area-chart
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(name) returned 百度chart
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(order_num) returned 0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(parent_id) returned 97
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(perms) returned 
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(type) returned 1
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(url) returned /chart/graph_echarts.html
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.next() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(menu_id) returned 101
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:53:12 -3. ResultSet.getString(icon) returned 
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(name) returned 待办任务
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(order_num) returned 0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(parent_id) returned 93
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(perms) returned 
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(type) returned 1
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(url) returned activiti/task/todo
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.next() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(menu_id) returned 92
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:53:12 -3. ResultSet.getString(icon) returned fa fa-user
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(name) returned 在线用户
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(order_num) returned 0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(parent_id) returned 91
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(perms) returned 
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(type) returned 1
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(url) returned sys/online
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.next() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(menu_id) returned 96
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:53:12 -3. ResultSet.getString(icon) returned fa fa-flag
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(name) returned 流程管理
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(order_num) returned 0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(parent_id) returned 93
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(perms) returned 
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(type) returned 1
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(url) returned activiti/process
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.next() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(menu_id) returned 104
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:53:12 -3. ResultSet.getString(icon) returned 
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(name) returned swagger
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(order_num) returned 0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(parent_id) returned 77
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(perms) returned 
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(type) returned 1
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(url) returned /swagger-ui.html
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.next() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(menu_id) returned 94
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:53:12 -3. ResultSet.getString(icon) returned fa fa-sort-amount-asc
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(name) returned 模型管理
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(order_num) returned 0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(parent_id) returned 93
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(perms) returned 
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(type) returned 1
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(url) returned activiti/model
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.next() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(menu_id) returned 90
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:53:12 -3. ResultSet.getString(icon) returned fa fa-envelope-square
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(name) returned 我的通知
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(order_num) returned 0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(parent_id) returned 84
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(perms) returned 
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(type) returned 1
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(url) returned oa/notify/selfNotify
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.next() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(menu_id) returned 27
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_create) returned 2017-08-14 22:11:53.0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:53:12 -3. ResultSet.getString(icon) returned fa fa-warning
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(name) returned 系统日志
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(order_num) returned 0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getLong(parent_id) returned 91
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(perms) returned common:log
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(type) returned 1
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(url) returned common/log
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.next() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(menu_id) returned 6
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_create) returned 2017-08-10 14:12:11.0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:53:12 -3. ResultSet.getString(icon) returned fa fa-user
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(name) returned 用户管理
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(order_num) returned 0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getLong(parent_id) returned 3
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(perms) returned sys:user:user
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(type) returned 1
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(url) returned sys/user/
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.next() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(menu_id) returned 68
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:53:12 -3. ResultSet.getString(icon) returned fa fa-edit
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(name) returned 发布文章
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(order_num) returned 0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getLong(parent_id) returned 49
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(perms) returned blog:bContent:add
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(type) returned 1
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(url) returned /blog/bContent/add
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.next() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(menu_id) returned 1
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_create) returned 2017-08-09 22:49:47.0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:53:12 -3. ResultSet.getString(icon) returned fa fa-bars
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(name) returned 基础管理
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(order_num) returned 0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getLong(parent_id) returned 0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(perms) returned 
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(type) returned 0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(url) returned 
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.next() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(menu_id) returned 3
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_create) returned 2017-08-09 23:06:55.0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_modified) returned 2017-08-14 14:13:43.0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(icon) returned fa fa-desktop
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(name) returned 系统管理
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(order_num) returned 1
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getLong(parent_id) returned 0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(perms) returned null
2019-04-15 20:53:12 -3. ResultSet.getInt(type) returned 0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(url) returned null
2019-04-15 20:53:12 -3. ResultSet.next() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(menu_id) returned 78
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:53:12 -3. ResultSet.getString(icon) returned fa fa-book
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(name) returned 数据字典
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(order_num) returned 1
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getLong(parent_id) returned 1
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(perms) returned common:dict:dict
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(type) returned 1
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(url) returned /common/dict
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.next() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(menu_id) returned 50
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:53:12 -3. ResultSet.getString(icon) returned fa fa-file-image-o
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(name) returned 文章列表
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(order_num) returned 1
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getLong(parent_id) returned 49
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(perms) returned blog:bContent:bContent
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(type) returned 1
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(url) returned blog/bContent
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.next() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(menu_id) returned 57
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:53:12 -3. ResultSet.getString(icon) returned fa fa-caret-square-o-right
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(name) returned 运行监控
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(order_num) returned 1
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getLong(parent_id) returned 91
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(perms) returned 
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(type) returned 1
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(url) returned /druid/index.html
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.next() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(menu_id) returned 7
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_create) returned 2017-08-10 14:13:19.0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:53:12 -3. ResultSet.getString(icon) returned fa fa-paw
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(name) returned 角色管理
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(order_num) returned 1
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getLong(parent_id) returned 3
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(perms) returned sys:role:role
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(type) returned 1
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(url) returned sys/role
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.next() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(menu_id) returned 2
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_create) returned 2017-08-09 22:55:15.0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:53:12 -3. ResultSet.getString(icon) returned fa fa-th-list
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(name) returned 系统菜单
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(order_num) returned 2
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getLong(parent_id) returned 3
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(perms) returned sys:menu:menu
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(type) returned 1
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(url) returned sys/menu/
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.next() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(menu_id) returned 71
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:53:12 -3. ResultSet.getString(icon) returned fa fa-folder-open
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(name) returned 文件管理
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(order_num) returned 2
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getLong(parent_id) returned 1
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(perms) returned common:sysFile:sysFile
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(type) returned 1
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(url) returned /common/sysFile
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.next() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(menu_id) returned 48
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:53:12 -3. ResultSet.getString(icon) returned fa fa-code
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(name) returned 代码生成
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(order_num) returned 3
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getLong(parent_id) returned 77
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(perms) returned common:generator
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(type) returned 1
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(url) returned common/generator
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.next() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(menu_id) returned 73
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:53:12 -3. ResultSet.getString(icon) returned fa fa-users
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(name) returned 部门管理
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(order_num) returned 3
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getLong(parent_id) returned 3
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(perms) returned system:sysDept:sysDept
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(type) returned 1
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(url) returned /system/sysDept
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.next() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(menu_id) returned 72
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:53:12 -3. ResultSet.getString(icon) returned fa fa-hourglass-1
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(name) returned 计划任务
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(order_num) returned 4
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getLong(parent_id) returned 77
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(perms) returned common:taskScheduleJob
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(type) returned 1
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(url) returned common/job
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.next() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(menu_id) returned 77
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:53:12 -3. ResultSet.getString(icon) returned fa fa-gear
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(name) returned 系统工具
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(order_num) returned 4
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getLong(parent_id) returned 0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(perms) returned 
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(type) returned 0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(url) returned 
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.next() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(menu_id) returned 91
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:53:12 -3. ResultSet.getString(icon) returned fa fa-video-camera
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(name) returned 系统监控
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(order_num) returned 5
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getLong(parent_id) returned 0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(perms) returned 
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(type) returned 0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(url) returned 
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.next() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(menu_id) returned 84
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:53:12 -3. ResultSet.getString(icon) returned fa fa-laptop
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(name) returned 办公管理
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(order_num) returned 5
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getLong(parent_id) returned 0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(perms) returned 
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(type) returned 0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(url) returned 
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.next() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(menu_id) returned 49
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:53:12 -3. ResultSet.getString(icon) returned fa fa-rss
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(name) returned 博客管理
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(order_num) returned 6
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getLong(parent_id) returned 0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(perms) returned 
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(type) returned 0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(url) returned 
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.next() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(menu_id) returned 93
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:53:12 -3. ResultSet.getString(icon) returned fa fa-print
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(name) returned 工作流程
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(order_num) returned 6
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getLong(parent_id) returned 0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(perms) returned 
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(type) returned 0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(url) returned 
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.next() returned true
2019-04-15 20:53:12 -3. ResultSet.getLong(menu_id) returned 97
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:53:12 -3. ResultSet.getString(icon) returned fa fa-bar-chart
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(name) returned 图表管理
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(order_num) returned 7
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getLong(parent_id) returned 0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(perms) returned 
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(type) returned 0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(url) returned 
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.next() returned false
2019-04-15 20:53:12 -3. ResultSet.close() returned 
2019-04-15 20:53:12 -3. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:12 -3. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:12 -3. Connection.isClosed() returned false
2019-04-15 20:53:12 -3. PreparedStatement.clearParameters() returned 
2019-04-15 20:53:12 -3. Connection.commit() returned 
2019-04-15 20:53:12 -3. Connection.setAutoCommit(true) returned 
2019-04-15 20:53:12 -3. Connection.isReadOnly() returned true
2019-04-15 20:53:12 -3. Connection.setReadOnly(false) returned 
2019-04-15 20:53:12 -3. Connection.setReadOnly(true) returned 
2019-04-15 20:53:12 -3. Connection.getAutoCommit() returned true
2019-04-15 20:53:12 -3. Connection.setAutoCommit(false) returned 
2019-04-15 20:53:12 -3. Connection.commit() returned 
2019-04-15 20:53:12 -3. Connection.setAutoCommit(true) returned 
2019-04-15 20:53:12 -3. Connection.isReadOnly() returned true
2019-04-15 20:53:12 -3. Connection.setReadOnly(false) returned 
2019-04-15 20:53:12 -3. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:53:12 -3. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:53:12 -3. Connection.prepareStatement(select filedo0_.id as id1_8_0_, filedo0_.create_date as create_d2_8_0_, filedo0_.type as type3_8_0_, filedo0_.url as url4_8_0_ from sys_file filedo0_ where filedo0_.id=?) returned net.sf.log4jdbc.PreparedStatementSpy@538d7b60
2019-04-15 20:53:12 -3. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:53:12 -3. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:12 -3. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:12 -3. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:53:12 -3. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:53:12 -3. PreparedStatement.setLong(1, 138) returned 
2019-04-15 20:53:12 -3. Connection.getAutoCommit() returned true
2019-04-15 20:53:12 -3. Connection.getAutoCommit() returned true
2019-04-15 20:53:12 -select filedo0_.id as id1_8_0_, filedo0_.create_date as create_d2_8_0_, filedo0_.type as type3_8_0_, 
filedo0_.url as url4_8_0_ from sys_file filedo0_ where filedo0_.id=138 

2019-04-15 20:53:12 -select filedo0_.id as id1_8_0_, filedo0_.create_date as create_d2_8_0_, filedo0_.type as type3_8_0_, 
filedo0_.url as url4_8_0_ from sys_file filedo0_ where filedo0_.id=138 
 {executed in 1 msec}
2019-04-15 20:53:12 -3. ResultSet.new ResultSet returned 
2019-04-15 20:53:12 -3. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@2138201f
2019-04-15 20:53:12 -3. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@4cff0b2b - Field level information: 
	com.mysql.jdbc.Field@2b3801b3[catalog=bootdo_jpa,tableName=filedo0_,originalTableName=sys_file,columnName=id1_8_0_,originalColumnName=id,mysqlType=8(FIELD_TYPE_LONGLONG),flags= AUTO_INCREMENT PRIMARY_KEY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@2b65d84[catalog=bootdo_jpa,tableName=filedo0_,originalTableName=sys_file,columnName=create_d2_8_0_,originalColumnName=create_date,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@626ead15[catalog=bootdo_jpa,tableName=filedo0_,originalTableName=sys_file,columnName=type3_8_0_,originalColumnName=type,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@56fc5420[catalog=bootdo_jpa,tableName=filedo0_,originalTableName=sys_file,columnName=url4_8_0_,originalColumnName=url,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
2019-04-15 20:53:12 -3. ResultSet.next() returned true
2019-04-15 20:53:12 -3. ResultSet.getTimestamp(create_d2_8_0_) returned 2017-12-19 19:55:27.0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getInt(type3_8_0_) returned 0
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.getString(url4_8_0_) returned /files/9ec12ee7-65b5-4cc5-9900-d2ec6185b336.jpg
2019-04-15 20:53:12 -3. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -3. ResultSet.next() returned false
2019-04-15 20:53:12 -3. ResultSet.close() returned 
2019-04-15 20:53:12 -3. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:12 -3. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:12 -3. Connection.isClosed() returned false
2019-04-15 20:53:12 -3. PreparedStatement.clearParameters() returned 
2019-04-15 20:53:12 -3. Connection.setReadOnly(true) returned 
2019-04-15 20:53:12 -3. Connection.getAutoCommit() returned true
2019-04-15 20:53:12 -3. Connection.setAutoCommit(false) returned 
2019-04-15 20:53:12 -3. Connection.commit() returned 
2019-04-15 20:53:12 -3. Connection.setAutoCommit(true) returned 
2019-04-15 20:53:12 -3. Connection.isReadOnly() returned true
2019-04-15 20:53:12 -3. Connection.setReadOnly(false) returned 
2019-04-15 20:53:12 -耗时 : 85
2019-04-15 20:53:12 -1. Connection.isClosed() returned false
2019-04-15 20:53:12 -1. Connection.getAutoCommit() returned true
2019-04-15 20:53:12 -1. Connection.setAutoCommit(false) returned 
2019-04-15 20:53:12 -2. Connection.commit() returned 
2019-04-15 20:53:12 -2. Connection.setAutoCommit(true) returned 
2019-04-15 20:53:12 -2. Connection.isClosed() returned false
2019-04-15 20:53:12 -2. Connection.clearWarnings() returned 
2019-04-15 20:53:12 -2. Connection.clearWarnings() returned 
2019-04-15 20:53:12 -2. Connection.isClosed() returned false
2019-04-15 20:53:12 -2. Connection.getAutoCommit() returned true
2019-04-15 20:53:12 -2. Connection.setAutoCommit(false) returned 
2019-04-15 20:53:12 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:53:12 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:53:12 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:12 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:12 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:53:12 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:53:12 -2. Connection.getAutoCommit() returned false
2019-04-15 20:53:12 -2. Connection.getAutoCommit() returned false
2019-04-15 20:53:12 -select next_val as id_val from hibernate_sequence for update 

2019-04-15 20:53:12 -select next_val as id_val from hibernate_sequence for update 
 {executed in 0 msec}
2019-04-15 20:53:12 -2. ResultSet.new ResultSet returned 
2019-04-15 20:53:12 -2. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@188c08b3
2019-04-15 20:53:12 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@1cb39f7a - Field level information: 
	com.mysql.jdbc.Field@59b10288[catalog=bootdo_jpa,tableName=hibernate_sequence,originalTableName=hibernate_sequence,columnName=id_val,originalColumnName=next_val,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
2019-04-15 20:53:12 -2. ResultSet.next() returned true
2019-04-15 20:53:12 -2. ResultSet.getLong(1) returned 3
2019-04-15 20:53:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -2. ResultSet.close() returned 
2019-04-15 20:53:12 -2. Connection.isClosed() returned false
2019-04-15 20:53:12 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:53:12 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:53:12 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:53:12 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:12 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:12 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:53:12 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:53:12 -2. PreparedStatement.setLong(1, 4) returned 
2019-04-15 20:53:12 -2. PreparedStatement.setLong(2, 3) returned 
2019-04-15 20:53:12 -2. Connection.getAutoCommit() returned false
2019-04-15 20:53:12 -update hibernate_sequence set next_val= 4 where next_val=3 

2019-04-15 20:53:12 -4. Connection opened
2019-04-15 20:53:12 -4. Connection.new Connection returned 
2019-04-15 20:53:12 -4. Connection.getAutoCommit() returned true
2019-04-15 20:53:12 -4. Connection.isClosed() returned false
2019-04-15 20:53:12 -4. Statement.new Statement returned 
2019-04-15 20:53:12 -4. Connection.createStatement() returned net.sf.log4jdbc.StatementSpy@6ae0598a
2019-04-15 20:53:12 -4. Connection.getAutoCommit() returned true
2019-04-15 20:53:12 -select 'x' 

2019-04-15 20:53:12 -select 'x' 
 {executed in 0 msec}
2019-04-15 20:53:12 -4. ResultSet.new ResultSet returned 
2019-04-15 20:53:12 -4. Statement.executeQuery(select 'x') returned net.sf.log4jdbc.ResultSetSpy@c006ec0
2019-04-15 20:53:12 -4. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@2126cc86 - Field level information: 
	com.mysql.jdbc.Field@65e40182[catalog=,tableName=,originalTableName=,columnName=x,originalColumnName=,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
2019-04-15 20:53:12 -4. ResultSet.next() returned true
2019-04-15 20:53:12 -4. ResultSet.close() returned 
2019-04-15 20:53:12 -4. Statement.close() returned 
2019-04-15 20:53:12 -4. Connection.getAutoCommit() returned true
2019-04-15 20:53:12 -4. Connection.getHoldability() returned 2
2019-04-15 20:53:12 -4. Connection.isReadOnly() returned false
2019-04-15 20:53:12 -4. Connection.getTransactionIsolation() returned 4
2019-04-15 20:53:12 -3. Connection.isClosed() returned false
2019-04-15 20:53:12 -3. Connection.clearWarnings() returned 
2019-04-15 20:53:12 -3. Connection.clearWarnings() returned 
2019-04-15 20:53:12 -请求地址 : http://localhost:8080/main
2019-04-15 20:53:12 -HTTP METHOD : GET
2019-04-15 20:53:12 -CLASS_METHOD : com.bootdo_jpa.system.controller.LoginController.main
2019-04-15 20:53:12 -参数 : []
2019-04-15 20:53:12 -耗时 : 1
2019-04-15 20:53:12 -update hibernate_sequence set next_val= 4 where next_val=3 
 {executed in 56 msec}
2019-04-15 20:53:12 -2. PreparedStatement.executeUpdate() returned 14
2019-04-15 20:53:12 -2. Connection.isClosed() returned false
2019-04-15 20:53:12 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:53:12 -2. Connection.commit() returned 
2019-04-15 20:53:12 -2. Connection.setAutoCommit(true) returned 
2019-04-15 20:53:12 -2. Connection.clearWarnings() returned 
2019-04-15 20:53:12 -1. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:53:12 -1. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:53:12 -1. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:12 -1. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:12 -1. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:53:12 -1. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:53:12 -1. PreparedStatement.setTimestamp(1, 2019-04-15 20:53:12.493) returned 
2019-04-15 20:53:12 -1. PreparedStatement.setString(2, "127.0.0.1") returned 
2019-04-15 20:53:12 -1. PreparedStatement.setString(3, "com.bootdo_jpa.system.controller.LoginController.index()") returned 
2019-04-15 20:53:12 -1. PreparedStatement.setString(4, "请求访问主页") returned 
2019-04-15 20:53:12 -1. PreparedStatement.setNull(5, 12) returned 
2019-04-15 20:53:12 -1. PreparedStatement.setInt(6, 86) returned 
2019-04-15 20:53:12 -1. PreparedStatement.setLong(7, 1) returned 
2019-04-15 20:53:12 -1. PreparedStatement.setString(8, "admin") returned 
2019-04-15 20:53:12 -1. PreparedStatement.setLong(9, 3) returned 
2019-04-15 20:53:12 -1. Connection.getAutoCommit() returned false
2019-04-15 20:53:12 -1. Connection.getAutoCommit() returned false
2019-04-15 20:53:12 -insert into sys_log (gmt_create, ip, method, operation, params, time, user_id, username, id) 
values ('2019-04-15 20:53:12', '127.0.0.1', 'com.bootdo_jpa.system.controller.LoginController.index()', 
'请求访问主页', NULL, 86, 1, 'admin', 3) 

2019-04-15 20:53:12 -insert into sys_log (gmt_create, ip, method, operation, params, time, user_id, username, id) 
values ('2019-04-15 20:53:12', '127.0.0.1', 'com.bootdo_jpa.system.controller.LoginController.index()', 
'请求访问主页', NULL, 86, 1, 'admin', 3) 
 {executed in 0 msec}
2019-04-15 20:53:12 -1. PreparedStatement.executeUpdate() returned 1
2019-04-15 20:53:12 -1. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:12 -1. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:12 -1. Connection.isClosed() returned false
2019-04-15 20:53:12 -1. PreparedStatement.clearParameters() returned 
2019-04-15 20:53:12 -1. Connection.commit() returned 
2019-04-15 20:53:12 -1. Connection.setAutoCommit(true) returned 
2019-04-15 20:53:12 -1. Connection.isClosed() returned false
2019-04-15 20:53:12 -1. Connection.clearWarnings() returned 
2019-04-15 20:53:12 -1. Connection.clearWarnings() returned 
2019-04-15 20:53:12 -请求地址 : http://localhost:8080/oa/notify/message
2019-04-15 20:53:12 -HTTP METHOD : GET
2019-04-15 20:53:12 -CLASS_METHOD : com.bootdo_jpa.oa.controller.NotifyController.message
2019-04-15 20:53:12 -参数 : []
2019-04-15 20:53:12 -1. Connection.isClosed() returned false
2019-04-15 20:53:12 -1. Connection.setReadOnly(true) returned 
2019-04-15 20:53:12 -1. Connection.getAutoCommit() returned true
2019-04-15 20:53:12 -1. Connection.setAutoCommit(false) returned 
2019-04-15 20:53:12 -1. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:53:12 -1. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:53:12 -1. Connection.prepareStatement(select notifyreco0_.id as id1_4_, notifyreco0_.is_read as is_read2_4_, notifyreco0_.notify_id as notify_i3_4_, notifyreco0_.read_date as read_dat4_4_, notifyreco0_.user_id as user_id5_4_ from oa_notify_record notifyreco0_ where notifyreco0_.is_read=0 and notifyreco0_.user_id=1) returned net.sf.log4jdbc.PreparedStatementSpy@3ac3ef2f
2019-04-15 20:53:12 -1. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:53:12 -1. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:12 -1. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:12 -1. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:53:12 -1. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:53:12 -1. Connection.getAutoCommit() returned false
2019-04-15 20:53:12 -1. Connection.getAutoCommit() returned false
2019-04-15 20:53:12 -select notifyreco0_.id as id1_4_, notifyreco0_.is_read as is_read2_4_, notifyreco0_.notify_id 
as notify_i3_4_, notifyreco0_.read_date as read_dat4_4_, notifyreco0_.user_id as user_id5_4_ 
from oa_notify_record notifyreco0_ where notifyreco0_.is_read=0 and notifyreco0_.user_id=1 

2019-04-15 20:53:12 -select notifyreco0_.id as id1_4_, notifyreco0_.is_read as is_read2_4_, notifyreco0_.notify_id 
as notify_i3_4_, notifyreco0_.read_date as read_dat4_4_, notifyreco0_.user_id as user_id5_4_ 
from oa_notify_record notifyreco0_ where notifyreco0_.is_read=0 and notifyreco0_.user_id=1 
 {executed in 1 msec}
2019-04-15 20:53:12 -1. ResultSet.new ResultSet returned 
2019-04-15 20:53:12 -1. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@ffdc28f
2019-04-15 20:53:12 -1. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@29ea7f1c - Field level information: 
	com.mysql.jdbc.Field@cf55799[catalog=bootdo_jpa,tableName=notifyreco0_,originalTableName=oa_notify_record,columnName=id1_4_,originalColumnName=id,mysqlType=8(FIELD_TYPE_LONGLONG),flags= AUTO_INCREMENT PRIMARY_KEY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@3ff12957[catalog=bootdo_jpa,tableName=notifyreco0_,originalTableName=oa_notify_record,columnName=is_read2_4_,originalColumnName=is_read,mysqlType=1(FIELD_TYPE_TINY),flags= MULTI_KEY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@5e797d9c[catalog=bootdo_jpa,tableName=notifyreco0_,originalTableName=oa_notify_record,columnName=notify_i3_4_,originalColumnName=notify_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags= MULTI_KEY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@2411fbd0[catalog=bootdo_jpa,tableName=notifyreco0_,originalTableName=oa_notify_record,columnName=read_dat4_4_,originalColumnName=read_date,mysqlType=10(FIELD_TYPE_DATE),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@27e2954[catalog=bootdo_jpa,tableName=notifyreco0_,originalTableName=oa_notify_record,columnName=user_id5_4_,originalColumnName=user_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags= MULTI_KEY, charsetIndex=63, charsetName=US-ASCII]
2019-04-15 20:53:12 -1. ResultSet.next() returned false
2019-04-15 20:53:12 -1. ResultSet.close() returned 
2019-04-15 20:53:12 -1. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:12 -1. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:12 -1. Connection.isClosed() returned false
2019-04-15 20:53:12 -1. PreparedStatement.clearParameters() returned 
2019-04-15 20:53:12 -1. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:53:12 -1. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:53:12 -1. Connection.prepareStatement(select count(notifyreco0_.id) as col_0_0_ from oa_notify_record notifyreco0_ where notifyreco0_.user_id=1 and notifyreco0_.is_read=0) returned net.sf.log4jdbc.PreparedStatementSpy@7bd618bc
2019-04-15 20:53:12 -1. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:53:12 -1. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:12 -1. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:12 -1. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:53:12 -1. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:53:12 -1. Connection.getAutoCommit() returned false
2019-04-15 20:53:12 -select count(notifyreco0_.id) as col_0_0_ from oa_notify_record notifyreco0_ where notifyreco0_.user_id=1 
and notifyreco0_.is_read=0 

2019-04-15 20:53:12 -请求地址 : http://localhost:8080/main
2019-04-15 20:53:12 -HTTP METHOD : GET
2019-04-15 20:53:12 -CLASS_METHOD : com.bootdo_jpa.system.controller.LoginController.main
2019-04-15 20:53:12 -参数 : []
2019-04-15 20:53:12 -耗时 : 0
2019-04-15 20:53:12 -select count(notifyreco0_.id) as col_0_0_ from oa_notify_record notifyreco0_ where notifyreco0_.user_id=1 
and notifyreco0_.is_read=0 
 {executed in 10 msec}
2019-04-15 20:53:12 -1. ResultSet.new ResultSet returned 
2019-04-15 20:53:12 -1. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@3f560135
2019-04-15 20:53:12 -1. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@7e73cdeb - Field level information: 
	com.mysql.jdbc.Field@352b2961[catalog=,tableName=,originalTableName=,columnName=col_0_0_,originalColumnName=,mysqlType=8(FIELD_TYPE_LONGLONG),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
2019-04-15 20:53:12 -1. ResultSet.next() returned true
2019-04-15 20:53:12 -1. ResultSet.getLong(col_0_0_) returned 0
2019-04-15 20:53:12 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:12 -1. ResultSet.next() returned false
2019-04-15 20:53:12 -1. ResultSet.close() returned 
2019-04-15 20:53:12 -1. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:12 -1. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:12 -1. Connection.isClosed() returned false
2019-04-15 20:53:12 -1. PreparedStatement.clearParameters() returned 
2019-04-15 20:53:12 -1. Connection.commit() returned 
2019-04-15 20:53:12 -1. Connection.setAutoCommit(true) returned 
2019-04-15 20:53:12 -1. Connection.isReadOnly() returned true
2019-04-15 20:53:12 -1. Connection.setReadOnly(false) returned 
2019-04-15 20:53:12 -耗时 : 40
2019-04-15 20:53:12 -1. Connection.isClosed() returned false
2019-04-15 20:53:12 -1. Connection.clearWarnings() returned 
2019-04-15 20:53:12 -1. Connection.clearWarnings() returned 
2019-04-15 20:53:15 -请求地址 : http://localhost:8080/main
2019-04-15 20:53:15 -HTTP METHOD : GET
2019-04-15 20:53:15 -CLASS_METHOD : com.bootdo_jpa.system.controller.LoginController.main
2019-04-15 20:53:15 -参数 : []
2019-04-15 20:53:15 -耗时 : 0
2019-04-15 20:53:17 -1. Connection.isClosed() returned false
2019-04-15 20:53:17 -1. Connection.setReadOnly(true) returned 
2019-04-15 20:53:17 -1. Connection.getAutoCommit() returned true
2019-04-15 20:53:17 -1. Connection.setAutoCommit(false) returned 
2019-04-15 20:53:17 -1. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:53:17 -1. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:53:17 -1. Connection.prepareStatement(select distinct m.perms 		from sys_menu m  		left join sys_role_menu rm on m.menu_id = rm.menu_id 		left join sys_user_role ur on rm.role_id = ur.role_id  		where ur.user_id = ?) returned net.sf.log4jdbc.PreparedStatementSpy@3c231f35
2019-04-15 20:53:17 -1. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:53:17 -1. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:17 -1. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:17 -1. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:53:17 -1. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:53:17 -1. PreparedStatement.setLong(1, 1) returned 
2019-04-15 20:53:17 -1. Connection.getAutoCommit() returned false
2019-04-15 20:53:17 -1. Connection.getAutoCommit() returned false
2019-04-15 20:53:17 -select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id 
left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = 1 

2019-04-15 20:53:17 -select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id 
left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = 1 
 {executed in 1 msec}
2019-04-15 20:53:17 -1. ResultSet.new ResultSet returned 
2019-04-15 20:53:17 -1. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@46727528
2019-04-15 20:53:17 -1. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@28df913b - Field level information: 
	com.mysql.jdbc.Field@ca1f9a2[catalog=bootdo_jpa,tableName=m,originalTableName=sys_menu,columnName=perms,originalColumnName=perms,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
2019-04-15 20:53:17 -1. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@38b9cca3 - Field level information: 
	com.mysql.jdbc.Field@ca1f9a2[catalog=bootdo_jpa,tableName=m,originalTableName=sys_menu,columnName=perms,originalColumnName=perms,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned 
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned act:process
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned activiti:model
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned sys:log:clear
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned sys:log:remove
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned sys:log:list
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned oa:notify:batchRemove
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned oa:notify:remove
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned oa:notify:edit
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned oa:notify:add
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned common:taskScheduleJob
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned common:generator
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned blog:bContent:add
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned blog:bContent:batchRemove
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned blog:bContent:remove
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned blog:bContent:edit
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned system:sysDept:edit
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned system:sysDept:remove
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned system:sysDept:add
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned sys:role:batchRemove
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned sys:role:remove
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned sys:role:edit
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned sys:role:add
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned sys:user:resetPwd
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned sys:user:disable
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned sys:user:batchRemove
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned sys:user:remove
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned sys:user:edit
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned sys:user:add
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned sys:menu:batchRemove
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned sys:menu:remove
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned sys:menu:edit
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned sys:menu:add
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned common:dict:batchRemove
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned common:dict:remove
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned common:dict:edit
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned common:dict:add
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned common:sysFile:sysFile
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned common:log
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned oa:notify:notify
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned blog:bContent:bContent
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned system:sysDept:sysDept
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned sys:role:role
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned sys:user:user
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned sys:menu:menu
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned null
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(perms) returned common:dict:dict
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned false
2019-04-15 20:53:17 -1. ResultSet.close() returned 
2019-04-15 20:53:17 -1. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:17 -1. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:17 -1. Connection.isClosed() returned false
2019-04-15 20:53:17 -1. PreparedStatement.clearParameters() returned 
2019-04-15 20:53:17 -1. Connection.commit() returned 
2019-04-15 20:53:17 -1. Connection.setAutoCommit(true) returned 
2019-04-15 20:53:17 -1. Connection.isReadOnly() returned true
2019-04-15 20:53:17 -1. Connection.setReadOnly(false) returned 
2019-04-15 20:53:17 -请求地址 : http://localhost:8080/common/dict
2019-04-15 20:53:17 -HTTP METHOD : GET
2019-04-15 20:53:17 -CLASS_METHOD : com.bootdo_jpa.common.controller.DictController.dict
2019-04-15 20:53:17 -参数 : []
2019-04-15 20:53:17 -耗时 : 0
2019-04-15 20:53:17 -1. Connection.isClosed() returned false
2019-04-15 20:53:17 -1. Connection.clearWarnings() returned 
2019-04-15 20:53:17 -1. Connection.clearWarnings() returned 
2019-04-15 20:53:17 -请求地址 : http://localhost:8080/common/dict/type
2019-04-15 20:53:17 -HTTP METHOD : GET
2019-04-15 20:53:17 -CLASS_METHOD : com.bootdo_jpa.common.controller.DictController.listType
2019-04-15 20:53:17 -参数 : []
2019-04-15 20:53:17 -1. Connection.isClosed() returned false
2019-04-15 20:53:17 -1. Connection.setReadOnly(true) returned 
2019-04-15 20:53:17 -1. Connection.getAutoCommit() returned true
2019-04-15 20:53:17 -1. Connection.setAutoCommit(false) returned 
2019-04-15 20:53:17 -1. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:53:17 -1. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:53:17 -1. Connection.prepareStatement(select distinct dictdo0_.type as col_0_0_, dictdo0_.description as col_1_0_ from sys_dict dictdo0_) returned net.sf.log4jdbc.PreparedStatementSpy@7fffd46
2019-04-15 20:53:17 -1. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:53:17 -1. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:17 -1. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:17 -1. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:53:17 -1. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:53:17 -1. Connection.getAutoCommit() returned false
2019-04-15 20:53:17 -1. Connection.getAutoCommit() returned false
2019-04-15 20:53:17 -select distinct dictdo0_.type as col_0_0_, dictdo0_.description as col_1_0_ from sys_dict dictdo0_ 

2019-04-15 20:53:17 -select distinct dictdo0_.type as col_0_0_, dictdo0_.description as col_1_0_ from sys_dict dictdo0_ 
 {executed in 2 msec}
2019-04-15 20:53:17 -1. ResultSet.new ResultSet returned 
2019-04-15 20:53:17 -1. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@402ec0b6
2019-04-15 20:53:17 -1. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@77a35fa6 - Field level information: 
	com.mysql.jdbc.Field@f4e99d9[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=col_0_0_,originalColumnName=type,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@1b993c42[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=col_1_0_,originalColumnName=description,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(col_0_0_) returned del_flag
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.getString(col_1_0_) returned 删除标记
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(col_0_0_) returned show_hide
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.getString(col_1_0_) returned 显示/隐藏
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(col_0_0_) returned yes_no
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.getString(col_1_0_) returned 是/否
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(col_0_0_) returned color
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.getString(col_1_0_) returned 颜色值
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(col_0_0_) returned theme
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.getString(col_1_0_) returned 主题方案
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(col_0_0_) returned sys_area_type
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.getString(col_1_0_) returned 区域类型
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(col_0_0_) returned sys_office_type
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.getString(col_1_0_) returned 机构类型
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(col_0_0_) returned sys_office_common
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.getString(col_1_0_) returned 快捷通用部门
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(col_0_0_) returned sys_office_grade
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.getString(col_1_0_) returned 机构等级
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(col_0_0_) returned sys_data_scope
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.getString(col_1_0_) returned 数据范围
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(col_0_0_) returned sys_user_type
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.getString(col_1_0_) returned 用户类型
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(col_0_0_) returned cms_theme
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.getString(col_1_0_) returned 站点主题
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(col_0_0_) returned cms_module
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.getString(col_1_0_) returned 栏目模型
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(col_0_0_) returned cms_show_modes
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.getString(col_1_0_) returned 展现方式
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(col_0_0_) returned cms_del_flag
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.getString(col_1_0_) returned 内容状态
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(col_0_0_) returned cms_posid
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.getString(col_1_0_) returned 推荐位
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(col_0_0_) returned cms_guestbook
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.getString(col_1_0_) returned 留言板分类
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(col_0_0_) returned oa_leave_type
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.getString(col_1_0_) returned 请假类型
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(col_0_0_) returned sys_log_type
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.getString(col_1_0_) returned 日志类型
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(col_0_0_) returned act_type
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.getString(col_1_0_) returned 流程类型
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(col_0_0_) returned act_category
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.getString(col_1_0_) returned 流程分类
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(col_0_0_) returned gen_category
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.getString(col_1_0_) returned 代码生成分类
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(col_0_0_) returned gen_query_type
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.getString(col_1_0_) returned 查询方式
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(col_0_0_) returned gen_show_type
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.getString(col_1_0_) returned 字段生成方案
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(col_0_0_) returned gen_java_type
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.getString(col_1_0_) returned Java类型
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(col_0_0_) returned sex
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.getString(col_1_0_) returned 性别
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(col_0_0_) returned oa_notify_type
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.getString(col_1_0_) returned 通知通告类型
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(col_0_0_) returned oa_notify_status
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.getString(col_1_0_) returned 通知通告状态
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(col_0_0_) returned oa_notify_read
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.getString(col_1_0_) returned 通知通告状态
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(col_0_0_) returned blog_type
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.getString(col_1_0_) returned 博客类型
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned true
2019-04-15 20:53:17 -1. ResultSet.getString(col_0_0_) returned hobby
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.getString(col_1_0_) returned 爱好
2019-04-15 20:53:17 -1. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -1. ResultSet.next() returned false
2019-04-15 20:53:17 -1. ResultSet.close() returned 
2019-04-15 20:53:17 -1. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:17 -1. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:17 -1. Connection.isClosed() returned false
2019-04-15 20:53:17 -1. PreparedStatement.clearParameters() returned 
2019-04-15 20:53:17 -1. Connection.commit() returned 
2019-04-15 20:53:17 -1. Connection.setAutoCommit(true) returned 
2019-04-15 20:53:17 -1. Connection.isReadOnly() returned true
2019-04-15 20:53:17 -1. Connection.setReadOnly(false) returned 
2019-04-15 20:53:17 -耗时 : 16
2019-04-15 20:53:17 -请求地址 : http://localhost:8080/common/dict/list
2019-04-15 20:53:17 -HTTP METHOD : GET
2019-04-15 20:53:17 -CLASS_METHOD : com.bootdo_jpa.common.controller.DictController.list
2019-04-15 20:53:17 -参数 : [{limit=10, offset=0}]
2019-04-15 20:53:17 -2. Connection.isClosed() returned false
2019-04-15 20:53:17 -2. Connection.setReadOnly(true) returned 
2019-04-15 20:53:17 -2. Connection.getAutoCommit() returned true
2019-04-15 20:53:17 -2. Connection.setAutoCommit(false) returned 
2019-04-15 20:53:17 -1. Connection.isClosed() returned false
2019-04-15 20:53:17 -1. Connection.clearWarnings() returned 
2019-04-15 20:53:17 -1. Connection.clearWarnings() returned 
2019-04-15 20:53:17 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:53:17 -2. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:53:17 -2. Connection.prepareStatement(select dictdo0_.id as id1_7_, dictdo0_.create_by as create_b2_7_, dictdo0_.create_date as create_d3_7_, dictdo0_.del_flag as del_flag4_7_, dictdo0_.description as descript5_7_, dictdo0_.name as name6_7_, dictdo0_.parent_id as parent_i7_7_, dictdo0_.remarks as remarks8_7_, dictdo0_.sort as sort9_7_, dictdo0_.type as type10_7_, dictdo0_.update_by as update_11_7_, dictdo0_.update_date as update_12_7_, dictdo0_.value as value13_7_ from sys_dict dictdo0_ where ?=1 order by dictdo0_.id desc limit ?) returned net.sf.log4jdbc.PreparedStatementSpy@13c5c45b
2019-04-15 20:53:17 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:53:17 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:17 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:17 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:53:17 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:53:17 -2. PreparedStatement.setBoolean(1, true) returned 
2019-04-15 20:53:17 -2. PreparedStatement.setInt(2, 10) returned 
2019-04-15 20:53:17 -2. Connection.getAutoCommit() returned false
2019-04-15 20:53:17 -2. Connection.getAutoCommit() returned false
2019-04-15 20:53:17 -select dictdo0_.id as id1_7_, dictdo0_.create_by as create_b2_7_, dictdo0_.create_date as create_d3_7_, 
dictdo0_.del_flag as del_flag4_7_, dictdo0_.description as descript5_7_, dictdo0_.name as name6_7_, 
dictdo0_.parent_id as parent_i7_7_, dictdo0_.remarks as remarks8_7_, dictdo0_.sort as sort9_7_, 
dictdo0_.type as type10_7_, dictdo0_.update_by as update_11_7_, dictdo0_.update_date as update_12_7_, 
dictdo0_.value as value13_7_ from sys_dict dictdo0_ where 1=1 order by dictdo0_.id desc limit 
10 

2019-04-15 20:53:17 -select dictdo0_.id as id1_7_, dictdo0_.create_by as create_b2_7_, dictdo0_.create_date as create_d3_7_, 
dictdo0_.del_flag as del_flag4_7_, dictdo0_.description as descript5_7_, dictdo0_.name as name6_7_, 
dictdo0_.parent_id as parent_i7_7_, dictdo0_.remarks as remarks8_7_, dictdo0_.sort as sort9_7_, 
dictdo0_.type as type10_7_, dictdo0_.update_by as update_11_7_, dictdo0_.update_date as update_12_7_, 
dictdo0_.value as value13_7_ from sys_dict dictdo0_ where 1=1 order by dictdo0_.id desc limit 
10 
 {executed in 1 msec}
2019-04-15 20:53:17 -2. ResultSet.new ResultSet returned 
2019-04-15 20:53:17 -2. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@645010dd
2019-04-15 20:53:17 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@5722d619 - Field level information: 
	com.mysql.jdbc.Field@ed4fea9[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=id1_7_,originalColumnName=id,mysqlType=8(FIELD_TYPE_LONGLONG),flags= AUTO_INCREMENT PRIMARY_KEY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@e650835[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=create_b2_7_,originalColumnName=create_by,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@6ad727dc[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=create_d3_7_,originalColumnName=create_date,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@2b04a681[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=del_flag4_7_,originalColumnName=del_flag,mysqlType=254(FIELD_TYPE_STRING),flags= BINARY MULTI_KEY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@28c34fe[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=descript5_7_,originalColumnName=description,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@248ea03a[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=name6_7_,originalColumnName=name,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY MULTI_KEY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@77b49ab0[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=parent_i7_7_,originalColumnName=parent_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@798a0a69[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=remarks8_7_,originalColumnName=remarks,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@1a42ea62[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=sort9_7_,originalColumnName=sort,mysqlType=246( Unknown MySQL Type # 246),flags=, charsetIndex=63, charsetName=ISO-8859-1]
	com.mysql.jdbc.Field@4b1c0660[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=type10_7_,originalColumnName=type,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@18ae74a9[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=update_11_7_,originalColumnName=update_by,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@315efc97[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=update_12_7_,originalColumnName=update_date,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@3cc20124[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=value13_7_,originalColumnName=value,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY MULTI_KEY, charsetIndex=83, charsetName=utf8]
2019-04-15 20:53:17 -2. ResultSet.next() returned true
2019-04-15 20:53:17 -2. ResultSet.getLong(id1_7_) returned 122
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getInt(create_b2_7_) returned 0
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:17 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:53:17 -2. ResultSet.getString(del_flag4_7_) returned 
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getString(descript5_7_) returned 爱好
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getString(name6_7_) returned 绘画
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:17 -2. ResultSet.getString(remarks8_7_) returned 
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getBigDecimal(sort9_7_) returned null
2019-04-15 20:53:17 -2. ResultSet.getString(type10_7_) returned hobby
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getLong(update_11_7_) returned 0
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:17 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:53:17 -2. ResultSet.getString(value13_7_) returned painting
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.next() returned true
2019-04-15 20:53:17 -2. ResultSet.getLong(id1_7_) returned 121
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getInt(create_b2_7_) returned 0
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:17 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:53:17 -2. ResultSet.getString(del_flag4_7_) returned 
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getString(descript5_7_) returned 爱好
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getString(name6_7_) returned 编码
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:17 -2. ResultSet.getString(remarks8_7_) returned 
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getBigDecimal(sort9_7_) returned null
2019-04-15 20:53:17 -2. ResultSet.getString(type10_7_) returned hobby
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getLong(update_11_7_) returned 0
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:17 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:53:17 -2. ResultSet.getString(value13_7_) returned code
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.next() returned true
2019-04-15 20:53:17 -2. ResultSet.getLong(id1_7_) returned 120
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getInt(create_b2_7_) returned 0
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:17 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:53:17 -2. ResultSet.getString(del_flag4_7_) returned 
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getString(descript5_7_) returned 博客类型
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getString(name6_7_) returned 文章
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:17 -2. ResultSet.getString(remarks8_7_) returned 
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getBigDecimal(sort9_7_) returned null
2019-04-15 20:53:17 -2. ResultSet.getString(type10_7_) returned blog_type
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getLong(update_11_7_) returned 0
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:17 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:53:17 -2. ResultSet.getString(value13_7_) returned article
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.next() returned true
2019-04-15 20:53:17 -2. ResultSet.getLong(id1_7_) returned 119
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getInt(create_b2_7_) returned 0
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:17 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:53:17 -2. ResultSet.getString(del_flag4_7_) returned 
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getString(descript5_7_) returned 博客类型
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getString(name6_7_) returned 交流
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:17 -2. ResultSet.getString(remarks8_7_) returned 
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getBigDecimal(sort9_7_) returned null
2019-04-15 20:53:17 -2. ResultSet.getString(type10_7_) returned blog_type
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getLong(update_11_7_) returned 0
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:17 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:53:17 -2. ResultSet.getString(value13_7_) returned communication
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.next() returned true
2019-04-15 20:53:17 -2. ResultSet.getLong(id1_7_) returned 118
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getInt(create_b2_7_) returned 0
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:17 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:53:17 -2. ResultSet.getString(del_flag4_7_) returned 
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getString(descript5_7_) returned 博客类型
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getString(name6_7_) returned 关于
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:17 -2. ResultSet.getString(remarks8_7_) returned 全url是:/blog/open/page/about
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getBigDecimal(sort9_7_) returned null
2019-04-15 20:53:17 -2. ResultSet.getString(type10_7_) returned blog_type
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getLong(update_11_7_) returned 0
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:17 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:53:17 -2. ResultSet.getString(value13_7_) returned about
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.next() returned true
2019-04-15 20:53:17 -2. ResultSet.getLong(id1_7_) returned 113
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getInt(create_b2_7_) returned 0
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:17 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:53:17 -2. ResultSet.getString(del_flag4_7_) returned 
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getString(descript5_7_) returned 删除标记
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getString(name6_7_) returned 删除
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:17 -2. ResultSet.getString(remarks8_7_) returned 
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getBigDecimal(sort9_7_) returned null
2019-04-15 20:53:17 -2. ResultSet.getString(type10_7_) returned del_flag
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getLong(update_11_7_) returned 0
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:17 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:53:17 -2. ResultSet.getString(value13_7_) returned 0
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.next() returned true
2019-04-15 20:53:17 -2. ResultSet.getLong(id1_7_) returned 112
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getInt(create_b2_7_) returned 1
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:53:17 -2. ResultSet.getString(del_flag4_7_) returned 0
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getString(descript5_7_) returned 通知通告状态
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getString(name6_7_) returned 草稿
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getString(remarks8_7_) returned 
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getBigDecimal(sort9_7_) returned 10
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getString(type10_7_) returned oa_notify_status
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getLong(update_11_7_) returned 1
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:53:17 -2. ResultSet.getString(value13_7_) returned 0
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.next() returned true
2019-04-15 20:53:17 -2. ResultSet.getLong(id1_7_) returned 111
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getInt(create_b2_7_) returned 1
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:53:17 -2. ResultSet.getString(del_flag4_7_) returned 0
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getString(descript5_7_) returned 通知通告状态
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getString(name6_7_) returned 已读
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getString(remarks8_7_) returned null
2019-04-15 20:53:17 -2. ResultSet.getBigDecimal(sort9_7_) returned 20
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getString(type10_7_) returned oa_notify_read
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getLong(update_11_7_) returned 1
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:53:17 -2. ResultSet.getString(value13_7_) returned 1
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.next() returned true
2019-04-15 20:53:17 -2. ResultSet.getLong(id1_7_) returned 110
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getInt(create_b2_7_) returned 1
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:53:17 -2. ResultSet.getString(del_flag4_7_) returned 0
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getString(descript5_7_) returned 通知通告状态
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getString(name6_7_) returned 未读
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getString(remarks8_7_) returned null
2019-04-15 20:53:17 -2. ResultSet.getBigDecimal(sort9_7_) returned 10
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getString(type10_7_) returned oa_notify_read
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getLong(update_11_7_) returned 1
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:53:17 -2. ResultSet.getString(value13_7_) returned 0
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.next() returned true
2019-04-15 20:53:17 -2. ResultSet.getLong(id1_7_) returned 109
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getInt(create_b2_7_) returned 1
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:53:17 -2. ResultSet.getString(del_flag4_7_) returned 0
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getString(descript5_7_) returned 通知通告状态
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getString(name6_7_) returned 发布
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getString(remarks8_7_) returned null
2019-04-15 20:53:17 -2. ResultSet.getBigDecimal(sort9_7_) returned 20
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getString(type10_7_) returned oa_notify_status
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getLong(update_11_7_) returned 1
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:53:17 -2. ResultSet.getString(value13_7_) returned 1
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.close() returned 
2019-04-15 20:53:17 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:17 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:17 -2. Connection.isClosed() returned false
2019-04-15 20:53:17 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:53:17 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:53:17 -2. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:53:17 -2. Connection.prepareStatement(select count(dictdo0_.id) as col_0_0_ from sys_dict dictdo0_ where ?=1) returned net.sf.log4jdbc.PreparedStatementSpy@42ada29f
2019-04-15 20:53:17 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:53:17 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:17 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:17 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:53:17 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:53:17 -2. PreparedStatement.setBoolean(1, true) returned 
2019-04-15 20:53:17 -2. Connection.getAutoCommit() returned false
2019-04-15 20:53:17 -select count(dictdo0_.id) as col_0_0_ from sys_dict dictdo0_ where 1=1 

2019-04-15 20:53:17 -select count(dictdo0_.id) as col_0_0_ from sys_dict dictdo0_ where 1=1 
 {executed in 0 msec}
2019-04-15 20:53:17 -2. ResultSet.new ResultSet returned 
2019-04-15 20:53:17 -2. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@8465bec
2019-04-15 20:53:17 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@672c7090 - Field level information: 
	com.mysql.jdbc.Field@483a9fb0[catalog=,tableName=,originalTableName=,columnName=col_0_0_,originalColumnName=,mysqlType=8(FIELD_TYPE_LONGLONG),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
2019-04-15 20:53:17 -2. ResultSet.next() returned true
2019-04-15 20:53:17 -2. ResultSet.getLong(col_0_0_) returned 114
2019-04-15 20:53:17 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:17 -2. ResultSet.next() returned false
2019-04-15 20:53:17 -2. ResultSet.close() returned 
2019-04-15 20:53:17 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:17 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:17 -2. Connection.isClosed() returned false
2019-04-15 20:53:17 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:53:17 -2. Connection.commit() returned 
2019-04-15 20:53:17 -2. Connection.setAutoCommit(true) returned 
2019-04-15 20:53:17 -2. Connection.isReadOnly() returned true
2019-04-15 20:53:17 -2. Connection.setReadOnly(false) returned 
2019-04-15 20:53:17 -耗时 : 67
2019-04-15 20:53:17 -2. Connection.isClosed() returned false
2019-04-15 20:53:17 -2. Connection.clearWarnings() returned 
2019-04-15 20:53:17 -2. Connection.clearWarnings() returned 
2019-04-15 20:53:18 -请求地址 : http://localhost:8080/common/sysFile
2019-04-15 20:53:18 -HTTP METHOD : GET
2019-04-15 20:53:18 -CLASS_METHOD : com.bootdo_jpa.common.controller.FileController.sysFile
2019-04-15 20:53:18 -参数 : [{}]
2019-04-15 20:53:18 -耗时 : 1
2019-04-15 20:53:18 -请求地址 : http://localhost:8080/common/sysFile/list
2019-04-15 20:53:18 -HTTP METHOD : GET
2019-04-15 20:53:18 -CLASS_METHOD : com.bootdo_jpa.common.controller.FileController.list
2019-04-15 20:53:18 -参数 : [{limit=12, offset=0, type=}]
2019-04-15 20:53:18 -2. Connection.isClosed() returned false
2019-04-15 20:53:18 -2. Connection.setReadOnly(true) returned 
2019-04-15 20:53:18 -2. Connection.getAutoCommit() returned true
2019-04-15 20:53:18 -2. Connection.setAutoCommit(false) returned 
2019-04-15 20:53:18 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:53:18 -2. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:53:18 -2. Connection.prepareStatement(select filedo0_.id as id1_8_, filedo0_.create_date as create_d2_8_, filedo0_.type as type3_8_, filedo0_.url as url4_8_ from sys_file filedo0_ where ?=1 order by filedo0_.id desc limit ?) returned net.sf.log4jdbc.PreparedStatementSpy@41c323fc
2019-04-15 20:53:18 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:53:18 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:18 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:18 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:53:18 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:53:18 -2. PreparedStatement.setBoolean(1, true) returned 
2019-04-15 20:53:18 -2. PreparedStatement.setInt(2, 12) returned 
2019-04-15 20:53:18 -2. Connection.getAutoCommit() returned false
2019-04-15 20:53:18 -2. Connection.getAutoCommit() returned false
2019-04-15 20:53:18 -select filedo0_.id as id1_8_, filedo0_.create_date as create_d2_8_, filedo0_.type as type3_8_, 
filedo0_.url as url4_8_ from sys_file filedo0_ where 1=1 order by filedo0_.id desc limit 12 

2019-04-15 20:53:18 -select filedo0_.id as id1_8_, filedo0_.create_date as create_d2_8_, filedo0_.type as type3_8_, 
filedo0_.url as url4_8_ from sys_file filedo0_ where 1=1 order by filedo0_.id desc limit 12 
 {executed in 1 msec}
2019-04-15 20:53:18 -2. ResultSet.new ResultSet returned 
2019-04-15 20:53:18 -2. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@7951d80
2019-04-15 20:53:18 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@5276f7fa - Field level information: 
	com.mysql.jdbc.Field@a72e28b[catalog=bootdo_jpa,tableName=filedo0_,originalTableName=sys_file,columnName=id1_8_,originalColumnName=id,mysqlType=8(FIELD_TYPE_LONGLONG),flags= AUTO_INCREMENT PRIMARY_KEY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@295cf02c[catalog=bootdo_jpa,tableName=filedo0_,originalTableName=sys_file,columnName=create_d2_8_,originalColumnName=create_date,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@68a919a[catalog=bootdo_jpa,tableName=filedo0_,originalTableName=sys_file,columnName=type3_8_,originalColumnName=type,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@63a66f96[catalog=bootdo_jpa,tableName=filedo0_,originalTableName=sys_file,columnName=url4_8_,originalColumnName=url,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
2019-04-15 20:53:18 -2. ResultSet.next() returned true
2019-04-15 20:53:18 -2. ResultSet.getLong(id1_8_) returned 141
2019-04-15 20:53:18 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:18 -2. ResultSet.getTimestamp(create_d2_8_) returned 2018-01-09 19:28:53.0
2019-04-15 20:53:18 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:18 -2. ResultSet.getInt(type3_8_) returned 0
2019-04-15 20:53:18 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:18 -2. ResultSet.getString(url4_8_) returned /files/445c5d98-b3b6-4226-a5af-249d1b2a6a34.jpg
2019-04-15 20:53:18 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:18 -2. ResultSet.next() returned true
2019-04-15 20:53:18 -2. ResultSet.getLong(id1_8_) returned 139
2019-04-15 20:53:18 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:18 -2. ResultSet.getTimestamp(create_d2_8_) returned 2018-01-02 19:53:24.0
2019-04-15 20:53:18 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:18 -2. ResultSet.getInt(type3_8_) returned 0
2019-04-15 20:53:18 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:18 -2. ResultSet.getString(url4_8_) returned /files/f6aab9d4-00a1-4bc8-a695-40fc472d4ea9.jpg
2019-04-15 20:53:18 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:18 -2. ResultSet.next() returned true
2019-04-15 20:53:18 -2. ResultSet.getLong(id1_8_) returned 138
2019-04-15 20:53:18 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:18 -2. ResultSet.getTimestamp(create_d2_8_) returned 2017-12-19 19:55:27.0
2019-04-15 20:53:18 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:18 -2. ResultSet.getInt(type3_8_) returned 0
2019-04-15 20:53:18 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:18 -2. ResultSet.getString(url4_8_) returned /files/9ec12ee7-65b5-4cc5-9900-d2ec6185b336.jpg
2019-04-15 20:53:18 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:18 -2. ResultSet.next() returned true
2019-04-15 20:53:18 -2. ResultSet.getLong(id1_8_) returned 134
2019-04-15 20:53:18 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:18 -2. ResultSet.getTimestamp(create_d2_8_) returned 2017-12-18 22:44:07.0
2019-04-15 20:53:18 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:18 -2. ResultSet.getInt(type3_8_) returned 0
2019-04-15 20:53:18 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:18 -2. ResultSet.getString(url4_8_) returned /files/cd016e72-77f7-4425-afe2-b79dfbdc3ae9.jpeg
2019-04-15 20:53:18 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:18 -2. ResultSet.next() returned true
2019-04-15 20:53:18 -2. ResultSet.getLong(id1_8_) returned 132
2019-04-15 20:53:18 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:18 -2. ResultSet.getTimestamp(create_d2_8_) returned 2017-12-18 20:19:51.0
2019-04-15 20:53:18 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:18 -2. ResultSet.getInt(type3_8_) returned 0
2019-04-15 20:53:18 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:18 -2. ResultSet.getString(url4_8_) returned /files/e6f13526-e31c-4ebe-a3cf-5fd88dd10be6.jpg
2019-04-15 20:53:18 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:18 -2. ResultSet.next() returned true
2019-04-15 20:53:18 -2. ResultSet.getLong(id1_8_) returned 118
2019-04-15 20:53:18 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:18 -2. ResultSet.getTimestamp(create_d2_8_) returned 2017-10-20 11:53:52.0
2019-04-15 20:53:18 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:18 -2. ResultSet.getInt(type3_8_) returned 0
2019-04-15 20:53:18 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:18 -2. ResultSet.getString(url4_8_) returned /files/a973499e-3ec7-4d43-8a52-b6f6517c77e3.jpg
2019-04-15 20:53:18 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:18 -2. ResultSet.next() returned true
2019-04-15 20:53:18 -2. ResultSet.getLong(id1_8_) returned 111
2019-04-15 20:53:18 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:18 -2. ResultSet.getTimestamp(create_d2_8_) returned 2017-10-14 16:20:21.0
2019-04-15 20:53:18 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:18 -2. ResultSet.getInt(type3_8_) returned 0
2019-04-15 20:53:18 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:18 -2. ResultSet.getString(url4_8_) returned /files/aa2c3dc6-495f-48cc-8e12-446eceb2535e.jpg
2019-04-15 20:53:18 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:18 -2. ResultSet.next() returned true
2019-04-15 20:53:18 -2. ResultSet.getLong(id1_8_) returned 110
2019-04-15 20:53:18 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:18 -2. ResultSet.getTimestamp(create_d2_8_) returned 2017-10-14 16:20:17.0
2019-04-15 20:53:18 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:18 -2. ResultSet.getInt(type3_8_) returned 0
2019-04-15 20:53:18 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:18 -2. ResultSet.getString(url4_8_) returned /files/d64a62e3-6821-48f1-bac6-a1b9945f4afb.jpg
2019-04-15 20:53:18 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:18 -2. ResultSet.next() returned false
2019-04-15 20:53:18 -2. ResultSet.close() returned 
2019-04-15 20:53:18 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:18 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:18 -2. Connection.isClosed() returned false
2019-04-15 20:53:18 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:53:18 -2. Connection.commit() returned 
2019-04-15 20:53:18 -2. Connection.setAutoCommit(true) returned 
2019-04-15 20:53:18 -2. Connection.isReadOnly() returned true
2019-04-15 20:53:18 -2. Connection.setReadOnly(false) returned 
2019-04-15 20:53:18 -耗时 : 20
2019-04-15 20:53:18 -2. Connection.isClosed() returned false
2019-04-15 20:53:18 -2. Connection.clearWarnings() returned 
2019-04-15 20:53:18 -2. Connection.clearWarnings() returned 
2019-04-15 20:53:23 -请求地址 : http://localhost:8080/common/sysFile/remove
2019-04-15 20:53:23 -HTTP METHOD : POST
2019-04-15 20:53:23 -CLASS_METHOD : com.bootdo_jpa.common.controller.FileController.remove
2019-04-15 20:53:23 -参数 : [118, org.apache.shiro.web.servlet.ShiroHttpServletRequest@479fa73f]
2019-04-15 20:53:23 -2. Connection.isClosed() returned false
2019-04-15 20:53:23 -2. Connection.setReadOnly(true) returned 
2019-04-15 20:53:23 -2. Connection.getAutoCommit() returned true
2019-04-15 20:53:23 -2. Connection.setAutoCommit(false) returned 
2019-04-15 20:53:23 -2. Connection.commit() returned 
2019-04-15 20:53:23 -2. Connection.setAutoCommit(true) returned 
2019-04-15 20:53:23 -2. Connection.isReadOnly() returned true
2019-04-15 20:53:23 -2. Connection.setReadOnly(false) returned 
2019-04-15 20:53:23 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:53:23 -2. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:53:23 -2. Connection.prepareStatement(select filedo0_.id as id1_8_0_, filedo0_.create_date as create_d2_8_0_, filedo0_.type as type3_8_0_, filedo0_.url as url4_8_0_ from sys_file filedo0_ where filedo0_.id=?) returned net.sf.log4jdbc.PreparedStatementSpy@51ead840
2019-04-15 20:53:23 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:53:23 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:23 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:23 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:53:23 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:53:23 -2. PreparedStatement.setLong(1, 118) returned 
2019-04-15 20:53:23 -2. Connection.getAutoCommit() returned true
2019-04-15 20:53:23 -2. Connection.getAutoCommit() returned true
2019-04-15 20:53:23 -select filedo0_.id as id1_8_0_, filedo0_.create_date as create_d2_8_0_, filedo0_.type as type3_8_0_, 
filedo0_.url as url4_8_0_ from sys_file filedo0_ where filedo0_.id=118 

2019-04-15 20:53:23 -select filedo0_.id as id1_8_0_, filedo0_.create_date as create_d2_8_0_, filedo0_.type as type3_8_0_, 
filedo0_.url as url4_8_0_ from sys_file filedo0_ where filedo0_.id=118 
 {executed in 1 msec}
2019-04-15 20:53:23 -2. ResultSet.new ResultSet returned 
2019-04-15 20:53:23 -2. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@70b7f3f4
2019-04-15 20:53:23 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@63f3ada7 - Field level information: 
	com.mysql.jdbc.Field@64dc5141[catalog=bootdo_jpa,tableName=filedo0_,originalTableName=sys_file,columnName=id1_8_0_,originalColumnName=id,mysqlType=8(FIELD_TYPE_LONGLONG),flags= AUTO_INCREMENT PRIMARY_KEY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@767be310[catalog=bootdo_jpa,tableName=filedo0_,originalTableName=sys_file,columnName=create_d2_8_0_,originalColumnName=create_date,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@391c9678[catalog=bootdo_jpa,tableName=filedo0_,originalTableName=sys_file,columnName=type3_8_0_,originalColumnName=type,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@477c9a69[catalog=bootdo_jpa,tableName=filedo0_,originalTableName=sys_file,columnName=url4_8_0_,originalColumnName=url,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
2019-04-15 20:53:23 -2. ResultSet.next() returned true
2019-04-15 20:53:23 -2. ResultSet.getTimestamp(create_d2_8_0_) returned 2017-10-20 11:53:52.0
2019-04-15 20:53:23 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:23 -2. ResultSet.getInt(type3_8_0_) returned 0
2019-04-15 20:53:23 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:23 -2. ResultSet.getString(url4_8_0_) returned /files/a973499e-3ec7-4d43-8a52-b6f6517c77e3.jpg
2019-04-15 20:53:23 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:23 -2. ResultSet.next() returned false
2019-04-15 20:53:23 -2. ResultSet.close() returned 
2019-04-15 20:53:23 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:23 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:23 -2. Connection.isClosed() returned false
2019-04-15 20:53:23 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:53:23 -2. Connection.getAutoCommit() returned true
2019-04-15 20:53:23 -2. Connection.setAutoCommit(false) returned 
2019-04-15 20:53:23 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:53:23 -2. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:53:23 -2. Connection.prepareStatement(delete from sys_file where id=?) returned net.sf.log4jdbc.PreparedStatementSpy@7f968352
2019-04-15 20:53:23 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:53:23 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:23 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:23 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:53:23 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:53:23 -2. PreparedStatement.setLong(1, 118) returned 
2019-04-15 20:53:23 -2. Connection.getAutoCommit() returned false
2019-04-15 20:53:23 -2. Connection.getAutoCommit() returned false
2019-04-15 20:53:23 -delete from sys_file where id=118 

2019-04-15 20:53:23 -delete from sys_file where id=118 
 {executed in 24 msec}
2019-04-15 20:53:23 -2. PreparedStatement.executeUpdate() returned 1
2019-04-15 20:53:23 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:23 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:23 -2. Connection.isClosed() returned false
2019-04-15 20:53:23 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:53:23 -2. Connection.commit() returned 
2019-04-15 20:53:23 -2. Connection.setAutoCommit(true) returned 
2019-04-15 20:53:23 -耗时 : 115
2019-04-15 20:53:23 -2. Connection.isClosed() returned false
2019-04-15 20:53:23 -2. Connection.clearWarnings() returned 
2019-04-15 20:53:23 -2. Connection.clearWarnings() returned 
2019-04-15 20:53:23 -请求地址 : http://localhost:8080/common/sysFile/list
2019-04-15 20:53:23 -HTTP METHOD : GET
2019-04-15 20:53:23 -CLASS_METHOD : com.bootdo_jpa.common.controller.FileController.list
2019-04-15 20:53:23 -参数 : [{limit=12, offset=0, type=}]
2019-04-15 20:53:23 -2. Connection.isClosed() returned false
2019-04-15 20:53:23 -2. Connection.setReadOnly(true) returned 
2019-04-15 20:53:23 -2. Connection.getAutoCommit() returned true
2019-04-15 20:53:23 -2. Connection.setAutoCommit(false) returned 
2019-04-15 20:53:23 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:53:23 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:53:23 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:23 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:23 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:53:23 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:53:23 -2. PreparedStatement.setBoolean(1, true) returned 
2019-04-15 20:53:23 -2. PreparedStatement.setInt(2, 12) returned 
2019-04-15 20:53:23 -2. Connection.getAutoCommit() returned false
2019-04-15 20:53:23 -2. Connection.getAutoCommit() returned false
2019-04-15 20:53:23 -select filedo0_.id as id1_8_, filedo0_.create_date as create_d2_8_, filedo0_.type as type3_8_, 
filedo0_.url as url4_8_ from sys_file filedo0_ where 1=1 order by filedo0_.id desc limit 12 

2019-04-15 20:53:23 -select filedo0_.id as id1_8_, filedo0_.create_date as create_d2_8_, filedo0_.type as type3_8_, 
filedo0_.url as url4_8_ from sys_file filedo0_ where 1=1 order by filedo0_.id desc limit 12 
 {executed in 0 msec}
2019-04-15 20:53:23 -2. ResultSet.new ResultSet returned 
2019-04-15 20:53:23 -2. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@53f076bc
2019-04-15 20:53:23 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@409cbdbd - Field level information: 
	com.mysql.jdbc.Field@442a67ed[catalog=bootdo_jpa,tableName=filedo0_,originalTableName=sys_file,columnName=id1_8_,originalColumnName=id,mysqlType=8(FIELD_TYPE_LONGLONG),flags= AUTO_INCREMENT PRIMARY_KEY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@59702e0[catalog=bootdo_jpa,tableName=filedo0_,originalTableName=sys_file,columnName=create_d2_8_,originalColumnName=create_date,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@5502d178[catalog=bootdo_jpa,tableName=filedo0_,originalTableName=sys_file,columnName=type3_8_,originalColumnName=type,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@7056ef30[catalog=bootdo_jpa,tableName=filedo0_,originalTableName=sys_file,columnName=url4_8_,originalColumnName=url,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
2019-04-15 20:53:23 -2. ResultSet.next() returned true
2019-04-15 20:53:23 -2. ResultSet.getLong(id1_8_) returned 141
2019-04-15 20:53:23 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:23 -2. ResultSet.getTimestamp(create_d2_8_) returned 2018-01-09 19:28:53.0
2019-04-15 20:53:23 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:23 -2. ResultSet.getInt(type3_8_) returned 0
2019-04-15 20:53:23 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:23 -2. ResultSet.getString(url4_8_) returned /files/445c5d98-b3b6-4226-a5af-249d1b2a6a34.jpg
2019-04-15 20:53:23 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:23 -2. ResultSet.next() returned true
2019-04-15 20:53:23 -2. ResultSet.getLong(id1_8_) returned 139
2019-04-15 20:53:23 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:23 -2. ResultSet.getTimestamp(create_d2_8_) returned 2018-01-02 19:53:24.0
2019-04-15 20:53:23 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:23 -2. ResultSet.getInt(type3_8_) returned 0
2019-04-15 20:53:23 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:23 -2. ResultSet.getString(url4_8_) returned /files/f6aab9d4-00a1-4bc8-a695-40fc472d4ea9.jpg
2019-04-15 20:53:23 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:23 -2. ResultSet.next() returned true
2019-04-15 20:53:23 -2. ResultSet.getLong(id1_8_) returned 138
2019-04-15 20:53:23 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:23 -2. ResultSet.getTimestamp(create_d2_8_) returned 2017-12-19 19:55:27.0
2019-04-15 20:53:23 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:23 -2. ResultSet.getInt(type3_8_) returned 0
2019-04-15 20:53:23 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:23 -2. ResultSet.getString(url4_8_) returned /files/9ec12ee7-65b5-4cc5-9900-d2ec6185b336.jpg
2019-04-15 20:53:23 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:23 -2. ResultSet.next() returned true
2019-04-15 20:53:23 -2. ResultSet.getLong(id1_8_) returned 134
2019-04-15 20:53:23 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:23 -2. ResultSet.getTimestamp(create_d2_8_) returned 2017-12-18 22:44:07.0
2019-04-15 20:53:23 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:23 -2. ResultSet.getInt(type3_8_) returned 0
2019-04-15 20:53:23 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:23 -2. ResultSet.getString(url4_8_) returned /files/cd016e72-77f7-4425-afe2-b79dfbdc3ae9.jpeg
2019-04-15 20:53:23 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:23 -2. ResultSet.next() returned true
2019-04-15 20:53:23 -2. ResultSet.getLong(id1_8_) returned 132
2019-04-15 20:53:23 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:23 -2. ResultSet.getTimestamp(create_d2_8_) returned 2017-12-18 20:19:51.0
2019-04-15 20:53:23 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:23 -2. ResultSet.getInt(type3_8_) returned 0
2019-04-15 20:53:23 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:23 -2. ResultSet.getString(url4_8_) returned /files/e6f13526-e31c-4ebe-a3cf-5fd88dd10be6.jpg
2019-04-15 20:53:23 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:23 -2. ResultSet.next() returned true
2019-04-15 20:53:23 -2. ResultSet.getLong(id1_8_) returned 111
2019-04-15 20:53:23 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:23 -2. ResultSet.getTimestamp(create_d2_8_) returned 2017-10-14 16:20:21.0
2019-04-15 20:53:23 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:23 -2. ResultSet.getInt(type3_8_) returned 0
2019-04-15 20:53:23 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:23 -2. ResultSet.getString(url4_8_) returned /files/aa2c3dc6-495f-48cc-8e12-446eceb2535e.jpg
2019-04-15 20:53:23 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:23 -2. ResultSet.next() returned true
2019-04-15 20:53:23 -2. ResultSet.getLong(id1_8_) returned 110
2019-04-15 20:53:23 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:23 -2. ResultSet.getTimestamp(create_d2_8_) returned 2017-10-14 16:20:17.0
2019-04-15 20:53:23 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:23 -2. ResultSet.getInt(type3_8_) returned 0
2019-04-15 20:53:23 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:23 -2. ResultSet.getString(url4_8_) returned /files/d64a62e3-6821-48f1-bac6-a1b9945f4afb.jpg
2019-04-15 20:53:23 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:23 -2. ResultSet.next() returned false
2019-04-15 20:53:23 -2. ResultSet.close() returned 
2019-04-15 20:53:23 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:23 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:23 -2. Connection.isClosed() returned false
2019-04-15 20:53:23 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:53:23 -2. Connection.commit() returned 
2019-04-15 20:53:23 -2. Connection.setAutoCommit(true) returned 
2019-04-15 20:53:23 -2. Connection.isReadOnly() returned true
2019-04-15 20:53:23 -2. Connection.setReadOnly(false) returned 
2019-04-15 20:53:23 -耗时 : 8
2019-04-15 20:53:23 -2. Connection.isClosed() returned false
2019-04-15 20:53:23 -2. Connection.clearWarnings() returned 
2019-04-15 20:53:23 -2. Connection.clearWarnings() returned 
2019-04-15 20:53:25 -请求地址 : http://localhost:8080/common/sysFile/remove
2019-04-15 20:53:25 -HTTP METHOD : POST
2019-04-15 20:53:25 -CLASS_METHOD : com.bootdo_jpa.common.controller.FileController.remove
2019-04-15 20:53:25 -参数 : [111, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7a89d3c0]
2019-04-15 20:53:25 -2. Connection.isClosed() returned false
2019-04-15 20:53:25 -2. Connection.setReadOnly(true) returned 
2019-04-15 20:53:25 -2. Connection.getAutoCommit() returned true
2019-04-15 20:53:25 -2. Connection.setAutoCommit(false) returned 
2019-04-15 20:53:25 -2. Connection.commit() returned 
2019-04-15 20:53:25 -2. Connection.setAutoCommit(true) returned 
2019-04-15 20:53:25 -2. Connection.isReadOnly() returned true
2019-04-15 20:53:25 -2. Connection.setReadOnly(false) returned 
2019-04-15 20:53:25 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:53:25 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:53:25 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:25 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:25 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:53:25 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:53:25 -2. PreparedStatement.setLong(1, 111) returned 
2019-04-15 20:53:25 -2. Connection.getAutoCommit() returned true
2019-04-15 20:53:25 -2. Connection.getAutoCommit() returned true
2019-04-15 20:53:25 -select filedo0_.id as id1_8_0_, filedo0_.create_date as create_d2_8_0_, filedo0_.type as type3_8_0_, 
filedo0_.url as url4_8_0_ from sys_file filedo0_ where filedo0_.id=111 

2019-04-15 20:53:25 -select filedo0_.id as id1_8_0_, filedo0_.create_date as create_d2_8_0_, filedo0_.type as type3_8_0_, 
filedo0_.url as url4_8_0_ from sys_file filedo0_ where filedo0_.id=111 
 {executed in 0 msec}
2019-04-15 20:53:25 -2. ResultSet.new ResultSet returned 
2019-04-15 20:53:25 -2. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@236fc13d
2019-04-15 20:53:25 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@17cc0143 - Field level information: 
	com.mysql.jdbc.Field@63b6ddc9[catalog=bootdo_jpa,tableName=filedo0_,originalTableName=sys_file,columnName=id1_8_0_,originalColumnName=id,mysqlType=8(FIELD_TYPE_LONGLONG),flags= AUTO_INCREMENT PRIMARY_KEY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@197042ce[catalog=bootdo_jpa,tableName=filedo0_,originalTableName=sys_file,columnName=create_d2_8_0_,originalColumnName=create_date,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@444b0ef4[catalog=bootdo_jpa,tableName=filedo0_,originalTableName=sys_file,columnName=type3_8_0_,originalColumnName=type,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@337ad927[catalog=bootdo_jpa,tableName=filedo0_,originalTableName=sys_file,columnName=url4_8_0_,originalColumnName=url,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
2019-04-15 20:53:25 -2. ResultSet.next() returned true
2019-04-15 20:53:25 -2. ResultSet.getTimestamp(create_d2_8_0_) returned 2017-10-14 16:20:21.0
2019-04-15 20:53:25 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:25 -2. ResultSet.getInt(type3_8_0_) returned 0
2019-04-15 20:53:25 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:25 -2. ResultSet.getString(url4_8_0_) returned /files/aa2c3dc6-495f-48cc-8e12-446eceb2535e.jpg
2019-04-15 20:53:25 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:25 -2. ResultSet.next() returned false
2019-04-15 20:53:25 -2. ResultSet.close() returned 
2019-04-15 20:53:25 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:25 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:25 -2. Connection.isClosed() returned false
2019-04-15 20:53:25 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:53:25 -2. Connection.getAutoCommit() returned true
2019-04-15 20:53:25 -2. Connection.setAutoCommit(false) returned 
2019-04-15 20:53:25 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:53:25 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:53:25 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:25 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:25 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:53:25 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:53:25 -2. PreparedStatement.setLong(1, 111) returned 
2019-04-15 20:53:25 -2. Connection.getAutoCommit() returned false
2019-04-15 20:53:25 -2. Connection.getAutoCommit() returned false
2019-04-15 20:53:25 -delete from sys_file where id=111 

2019-04-15 20:53:25 -delete from sys_file where id=111 
 {executed in 0 msec}
2019-04-15 20:53:25 -2. PreparedStatement.executeUpdate() returned 1
2019-04-15 20:53:25 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:25 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:25 -2. Connection.isClosed() returned false
2019-04-15 20:53:25 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:53:25 -2. Connection.commit() returned 
2019-04-15 20:53:25 -2. Connection.setAutoCommit(true) returned 
2019-04-15 20:53:25 -耗时 : 87
2019-04-15 20:53:25 -2. Connection.isClosed() returned false
2019-04-15 20:53:25 -2. Connection.clearWarnings() returned 
2019-04-15 20:53:25 -2. Connection.clearWarnings() returned 
2019-04-15 20:53:25 -请求地址 : http://localhost:8080/common/sysFile/list
2019-04-15 20:53:25 -HTTP METHOD : GET
2019-04-15 20:53:25 -CLASS_METHOD : com.bootdo_jpa.common.controller.FileController.list
2019-04-15 20:53:25 -参数 : [{limit=12, offset=0, type=}]
2019-04-15 20:53:25 -2. Connection.isClosed() returned false
2019-04-15 20:53:25 -2. Connection.setReadOnly(true) returned 
2019-04-15 20:53:25 -2. Connection.getAutoCommit() returned true
2019-04-15 20:53:25 -2. Connection.setAutoCommit(false) returned 
2019-04-15 20:53:25 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:53:25 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:53:25 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:25 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:25 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:53:25 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:53:25 -2. PreparedStatement.setBoolean(1, true) returned 
2019-04-15 20:53:25 -2. PreparedStatement.setInt(2, 12) returned 
2019-04-15 20:53:25 -2. Connection.getAutoCommit() returned false
2019-04-15 20:53:25 -2. Connection.getAutoCommit() returned false
2019-04-15 20:53:25 -select filedo0_.id as id1_8_, filedo0_.create_date as create_d2_8_, filedo0_.type as type3_8_, 
filedo0_.url as url4_8_ from sys_file filedo0_ where 1=1 order by filedo0_.id desc limit 12 

2019-04-15 20:53:25 -select filedo0_.id as id1_8_, filedo0_.create_date as create_d2_8_, filedo0_.type as type3_8_, 
filedo0_.url as url4_8_ from sys_file filedo0_ where 1=1 order by filedo0_.id desc limit 12 
 {executed in 0 msec}
2019-04-15 20:53:25 -2. ResultSet.new ResultSet returned 
2019-04-15 20:53:25 -2. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@161e38ac
2019-04-15 20:53:25 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@2edd98f0 - Field level information: 
	com.mysql.jdbc.Field@2019e0cd[catalog=bootdo_jpa,tableName=filedo0_,originalTableName=sys_file,columnName=id1_8_,originalColumnName=id,mysqlType=8(FIELD_TYPE_LONGLONG),flags= AUTO_INCREMENT PRIMARY_KEY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@ebe9d76[catalog=bootdo_jpa,tableName=filedo0_,originalTableName=sys_file,columnName=create_d2_8_,originalColumnName=create_date,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@69021f55[catalog=bootdo_jpa,tableName=filedo0_,originalTableName=sys_file,columnName=type3_8_,originalColumnName=type,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@2b5a109d[catalog=bootdo_jpa,tableName=filedo0_,originalTableName=sys_file,columnName=url4_8_,originalColumnName=url,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
2019-04-15 20:53:25 -2. ResultSet.next() returned true
2019-04-15 20:53:25 -2. ResultSet.getLong(id1_8_) returned 141
2019-04-15 20:53:25 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:25 -2. ResultSet.getTimestamp(create_d2_8_) returned 2018-01-09 19:28:53.0
2019-04-15 20:53:25 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:25 -2. ResultSet.getInt(type3_8_) returned 0
2019-04-15 20:53:25 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:25 -2. ResultSet.getString(url4_8_) returned /files/445c5d98-b3b6-4226-a5af-249d1b2a6a34.jpg
2019-04-15 20:53:25 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:25 -2. ResultSet.next() returned true
2019-04-15 20:53:25 -2. ResultSet.getLong(id1_8_) returned 139
2019-04-15 20:53:25 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:25 -2. ResultSet.getTimestamp(create_d2_8_) returned 2018-01-02 19:53:24.0
2019-04-15 20:53:25 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:25 -2. ResultSet.getInt(type3_8_) returned 0
2019-04-15 20:53:25 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:25 -2. ResultSet.getString(url4_8_) returned /files/f6aab9d4-00a1-4bc8-a695-40fc472d4ea9.jpg
2019-04-15 20:53:25 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:25 -2. ResultSet.next() returned true
2019-04-15 20:53:25 -2. ResultSet.getLong(id1_8_) returned 138
2019-04-15 20:53:25 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:25 -2. ResultSet.getTimestamp(create_d2_8_) returned 2017-12-19 19:55:27.0
2019-04-15 20:53:25 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:25 -2. ResultSet.getInt(type3_8_) returned 0
2019-04-15 20:53:25 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:25 -2. ResultSet.getString(url4_8_) returned /files/9ec12ee7-65b5-4cc5-9900-d2ec6185b336.jpg
2019-04-15 20:53:25 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:25 -2. ResultSet.next() returned true
2019-04-15 20:53:25 -2. ResultSet.getLong(id1_8_) returned 134
2019-04-15 20:53:25 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:25 -2. ResultSet.getTimestamp(create_d2_8_) returned 2017-12-18 22:44:07.0
2019-04-15 20:53:25 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:25 -2. ResultSet.getInt(type3_8_) returned 0
2019-04-15 20:53:25 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:25 -2. ResultSet.getString(url4_8_) returned /files/cd016e72-77f7-4425-afe2-b79dfbdc3ae9.jpeg
2019-04-15 20:53:25 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:25 -2. ResultSet.next() returned true
2019-04-15 20:53:25 -2. ResultSet.getLong(id1_8_) returned 132
2019-04-15 20:53:25 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:25 -2. ResultSet.getTimestamp(create_d2_8_) returned 2017-12-18 20:19:51.0
2019-04-15 20:53:25 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:25 -2. ResultSet.getInt(type3_8_) returned 0
2019-04-15 20:53:25 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:25 -2. ResultSet.getString(url4_8_) returned /files/e6f13526-e31c-4ebe-a3cf-5fd88dd10be6.jpg
2019-04-15 20:53:25 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:25 -2. ResultSet.next() returned true
2019-04-15 20:53:25 -2. ResultSet.getLong(id1_8_) returned 110
2019-04-15 20:53:25 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:25 -2. ResultSet.getTimestamp(create_d2_8_) returned 2017-10-14 16:20:17.0
2019-04-15 20:53:25 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:25 -2. ResultSet.getInt(type3_8_) returned 0
2019-04-15 20:53:25 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:25 -2. ResultSet.getString(url4_8_) returned /files/d64a62e3-6821-48f1-bac6-a1b9945f4afb.jpg
2019-04-15 20:53:25 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:25 -2. ResultSet.next() returned false
2019-04-15 20:53:25 -2. ResultSet.close() returned 
2019-04-15 20:53:25 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:25 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:25 -2. Connection.isClosed() returned false
2019-04-15 20:53:25 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:53:25 -2. Connection.commit() returned 
2019-04-15 20:53:25 -2. Connection.setAutoCommit(true) returned 
2019-04-15 20:53:25 -2. Connection.isReadOnly() returned true
2019-04-15 20:53:25 -2. Connection.setReadOnly(false) returned 
2019-04-15 20:53:25 -耗时 : 8
2019-04-15 20:53:25 -2. Connection.isClosed() returned false
2019-04-15 20:53:25 -2. Connection.clearWarnings() returned 
2019-04-15 20:53:25 -2. Connection.clearWarnings() returned 
2019-04-15 20:53:29 -请求地址 : http://localhost:8080/sys/online
2019-04-15 20:53:29 -HTTP METHOD : GET
2019-04-15 20:53:29 -CLASS_METHOD : com.bootdo_jpa.system.controller.SessionController.online
2019-04-15 20:53:29 -参数 : []
2019-04-15 20:53:29 -耗时 : 3
2019-04-15 20:53:29 -请求地址 : http://localhost:8080/sys/online/list
2019-04-15 20:53:29 -HTTP METHOD : GET
2019-04-15 20:53:29 -CLASS_METHOD : com.bootdo_jpa.system.controller.SessionController.list
2019-04-15 20:53:29 -参数 : []
2019-04-15 20:53:29 -耗时 : 0
2019-04-15 20:53:31 -请求地址 : http://localhost:8080/common/log
2019-04-15 20:53:31 -HTTP METHOD : GET
2019-04-15 20:53:31 -CLASS_METHOD : com.bootdo_jpa.common.controller.LogController.log
2019-04-15 20:53:31 -参数 : []
2019-04-15 20:53:31 -耗时 : 0
2019-04-15 20:53:31 -请求地址 : http://localhost:8080/common/log/list
2019-04-15 20:53:31 -HTTP METHOD : GET
2019-04-15 20:53:31 -CLASS_METHOD : com.bootdo_jpa.common.controller.LogController.list
2019-04-15 20:53:31 -参数 : [{limit=10, offset=0, name=, sort=gmtCreate, order=desc, operation=, username=}]
2019-04-15 20:53:31 -2. Connection.isClosed() returned false
2019-04-15 20:53:31 -2. Connection.setReadOnly(true) returned 
2019-04-15 20:53:31 -2. Connection.getAutoCommit() returned true
2019-04-15 20:53:31 -2. Connection.setAutoCommit(false) returned 
2019-04-15 20:53:31 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:53:31 -2. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:53:31 -2. Connection.prepareStatement(select logdo0_.id as id1_9_, logdo0_.gmt_create as gmt_crea2_9_, logdo0_.ip as ip3_9_, logdo0_.method as method4_9_, logdo0_.operation as operatio5_9_, logdo0_.params as params6_9_, logdo0_.time as time7_9_, logdo0_.user_id as user_id8_9_, logdo0_.username as username9_9_ from sys_log logdo0_ where ?=1 order by logdo0_.gmt_create desc limit ?) returned net.sf.log4jdbc.PreparedStatementSpy@3ecbe27
2019-04-15 20:53:31 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:53:31 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:31 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:31 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:53:31 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:53:31 -2. PreparedStatement.setBoolean(1, true) returned 
2019-04-15 20:53:31 -2. PreparedStatement.setInt(2, 10) returned 
2019-04-15 20:53:31 -2. Connection.getAutoCommit() returned false
2019-04-15 20:53:31 -2. Connection.getAutoCommit() returned false
2019-04-15 20:53:31 -select logdo0_.id as id1_9_, logdo0_.gmt_create as gmt_crea2_9_, logdo0_.ip as ip3_9_, logdo0_.method 
as method4_9_, logdo0_.operation as operatio5_9_, logdo0_.params as params6_9_, logdo0_.time 
as time7_9_, logdo0_.user_id as user_id8_9_, logdo0_.username as username9_9_ from sys_log 
logdo0_ where 1=1 order by logdo0_.gmt_create desc limit 10 

2019-04-15 20:53:31 -select logdo0_.id as id1_9_, logdo0_.gmt_create as gmt_crea2_9_, logdo0_.ip as ip3_9_, logdo0_.method 
as method4_9_, logdo0_.operation as operatio5_9_, logdo0_.params as params6_9_, logdo0_.time 
as time7_9_, logdo0_.user_id as user_id8_9_, logdo0_.username as username9_9_ from sys_log 
logdo0_ where 1=1 order by logdo0_.gmt_create desc limit 10 
 {executed in 1 msec}
2019-04-15 20:53:31 -2. ResultSet.new ResultSet returned 
2019-04-15 20:53:31 -2. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@5c101357
2019-04-15 20:53:31 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@3f7fd007 - Field level information: 
	com.mysql.jdbc.Field@59045c49[catalog=bootdo_jpa,tableName=logdo0_,originalTableName=sys_log,columnName=id1_9_,originalColumnName=id,mysqlType=8(FIELD_TYPE_LONGLONG),flags= AUTO_INCREMENT PRIMARY_KEY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@13a6e866[catalog=bootdo_jpa,tableName=logdo0_,originalTableName=sys_log,columnName=gmt_crea2_9_,originalColumnName=gmt_create,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@4ff0cbee[catalog=bootdo_jpa,tableName=logdo0_,originalTableName=sys_log,columnName=ip3_9_,originalColumnName=ip,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@e4ec5ff[catalog=bootdo_jpa,tableName=logdo0_,originalTableName=sys_log,columnName=method4_9_,originalColumnName=method,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@7553266b[catalog=bootdo_jpa,tableName=logdo0_,originalTableName=sys_log,columnName=operatio5_9_,originalColumnName=operation,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@5192157f[catalog=bootdo_jpa,tableName=logdo0_,originalTableName=sys_log,columnName=params6_9_,originalColumnName=params,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@18740b18[catalog=bootdo_jpa,tableName=logdo0_,originalTableName=sys_log,columnName=time7_9_,originalColumnName=time,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@60ed54d4[catalog=bootdo_jpa,tableName=logdo0_,originalTableName=sys_log,columnName=user_id8_9_,originalColumnName=user_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@c6156dc[catalog=bootdo_jpa,tableName=logdo0_,originalTableName=sys_log,columnName=username9_9_,originalColumnName=username,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
2019-04-15 20:53:31 -2. ResultSet.next() returned true
2019-04-15 20:53:31 -2. ResultSet.getLong(id1_9_) returned 2
2019-04-15 20:53:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:31 -2. ResultSet.getTimestamp(gmt_crea2_9_) returned 2019-04-15 20:53:12.0
2019-04-15 20:53:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:31 -2. ResultSet.getString(ip3_9_) returned 127.0.0.1
2019-04-15 20:53:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:31 -2. ResultSet.getString(method4_9_) returned com.bootdo_jpa.system.controller.LoginController.ajaxLogin()
2019-04-15 20:53:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:31 -2. ResultSet.getString(operatio5_9_) returned 登录
2019-04-15 20:53:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:31 -2. ResultSet.getString(params6_9_) returned null
2019-04-15 20:53:31 -2. ResultSet.getInt(time7_9_) returned 27
2019-04-15 20:53:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:31 -2. ResultSet.getLong(user_id8_9_) returned 1
2019-04-15 20:53:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:31 -2. ResultSet.getString(username9_9_) returned admin
2019-04-15 20:53:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:31 -2. ResultSet.next() returned true
2019-04-15 20:53:31 -2. ResultSet.getLong(id1_9_) returned 3
2019-04-15 20:53:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:31 -2. ResultSet.getTimestamp(gmt_crea2_9_) returned 2019-04-15 20:53:12.0
2019-04-15 20:53:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:31 -2. ResultSet.getString(ip3_9_) returned 127.0.0.1
2019-04-15 20:53:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:31 -2. ResultSet.getString(method4_9_) returned com.bootdo_jpa.system.controller.LoginController.index()
2019-04-15 20:53:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:31 -2. ResultSet.getString(operatio5_9_) returned 请求访问主页
2019-04-15 20:53:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:31 -2. ResultSet.getString(params6_9_) returned null
2019-04-15 20:53:31 -2. ResultSet.getInt(time7_9_) returned 86
2019-04-15 20:53:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:31 -2. ResultSet.getLong(user_id8_9_) returned 1
2019-04-15 20:53:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:31 -2. ResultSet.getString(username9_9_) returned admin
2019-04-15 20:53:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:31 -2. ResultSet.next() returned true
2019-04-15 20:53:31 -2. ResultSet.getLong(id1_9_) returned 1
2019-04-15 20:53:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:31 -2. ResultSet.getTimestamp(gmt_crea2_9_) returned 2019-04-15 20:53:08.0
2019-04-15 20:53:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:31 -2. ResultSet.getString(ip3_9_) returned 127.0.0.1
2019-04-15 20:53:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:31 -2. ResultSet.getString(method4_9_) returned com.bootdo_jpa.system.controller.LoginController.ajaxLogin()
2019-04-15 20:53:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:31 -2. ResultSet.getString(operatio5_9_) returned 登录
2019-04-15 20:53:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:31 -2. ResultSet.getString(params6_9_) returned null
2019-04-15 20:53:31 -2. ResultSet.getInt(time7_9_) returned 4
2019-04-15 20:53:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:31 -2. ResultSet.getLong(user_id8_9_) returned -1
2019-04-15 20:53:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:31 -2. ResultSet.getString(username9_9_) returned 获取用户信息为空
2019-04-15 20:53:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:31 -2. ResultSet.next() returned false
2019-04-15 20:53:31 -2. ResultSet.close() returned 
2019-04-15 20:53:31 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:31 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:31 -2. Connection.isClosed() returned false
2019-04-15 20:53:31 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:53:31 -2. Connection.commit() returned 
2019-04-15 20:53:31 -2. Connection.setAutoCommit(true) returned 
2019-04-15 20:53:31 -2. Connection.isReadOnly() returned true
2019-04-15 20:53:31 -2. Connection.setReadOnly(false) returned 
2019-04-15 20:53:31 -耗时 : 13
2019-04-15 20:53:31 -2. Connection.isClosed() returned false
2019-04-15 20:53:31 -2. Connection.clearWarnings() returned 
2019-04-15 20:53:31 -2. Connection.clearWarnings() returned 
2019-04-15 20:53:36 -请求地址 : http://localhost:8080/blog/bContent
2019-04-15 20:53:36 -HTTP METHOD : GET
2019-04-15 20:53:36 -CLASS_METHOD : com.bootdo_jpa.blog.controller.ContentController.bContent
2019-04-15 20:53:36 -参数 : []
2019-04-15 20:53:36 -耗时 : 0
2019-04-15 20:53:36 -请求地址 : http://localhost:8080/blog/bContent/list
2019-04-15 20:53:36 -HTTP METHOD : GET
2019-04-15 20:53:36 -CLASS_METHOD : com.bootdo_jpa.blog.controller.ContentController.list
2019-04-15 20:53:36 -参数 : [{limit=10, offset=0}]
2019-04-15 20:53:36 -2. Connection.isClosed() returned false
2019-04-15 20:53:36 -2. Connection.setReadOnly(true) returned 
2019-04-15 20:53:36 -2. Connection.getAutoCommit() returned true
2019-04-15 20:53:36 -2. Connection.setAutoCommit(false) returned 
2019-04-15 20:53:36 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:53:36 -2. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:53:36 -2. Connection.prepareStatement(select contentdo0_.cid as cid1_0_, contentdo0_.allow_comment as allow_co2_0_, contentdo0_.allow_feed as allow_fe3_0_, contentdo0_.allow_ping as allow_pi4_0_, contentdo0_.author as author5_0_, contentdo0_.categories as categori6_0_, contentdo0_.comments_num as comments7_0_, contentdo0_.content as content8_0_, contentdo0_.created as created9_0_, contentdo0_.gtm_create as gtm_cre10_0_, contentdo0_.gtm_modified as gtm_mod11_0_, contentdo0_.hits as hits12_0_, contentdo0_.modified as modifie13_0_, contentdo0_.slug as slug14_0_, contentdo0_.status as status15_0_, contentdo0_.tags as tags16_0_, contentdo0_.title as title17_0_, contentdo0_.type as type18_0_ from blog_content contentdo0_ where ?=1 order by contentdo0_.cid desc limit ?) returned net.sf.log4jdbc.PreparedStatementSpy@2d76130c
2019-04-15 20:53:36 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:53:36 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:36 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:36 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:53:36 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:53:36 -2. PreparedStatement.setBoolean(1, true) returned 
2019-04-15 20:53:36 -2. PreparedStatement.setInt(2, 10) returned 
2019-04-15 20:53:36 -2. Connection.getAutoCommit() returned false
2019-04-15 20:53:36 -2. Connection.getAutoCommit() returned false
2019-04-15 20:53:36 -select contentdo0_.cid as cid1_0_, contentdo0_.allow_comment as allow_co2_0_, contentdo0_.allow_feed 
as allow_fe3_0_, contentdo0_.allow_ping as allow_pi4_0_, contentdo0_.author as author5_0_, 
contentdo0_.categories as categori6_0_, contentdo0_.comments_num as comments7_0_, contentdo0_.content 
as content8_0_, contentdo0_.created as created9_0_, contentdo0_.gtm_create as gtm_cre10_0_, 
contentdo0_.gtm_modified as gtm_mod11_0_, contentdo0_.hits as hits12_0_, contentdo0_.modified 
as modifie13_0_, contentdo0_.slug as slug14_0_, contentdo0_.status as status15_0_, contentdo0_.tags 
as tags16_0_, contentdo0_.title as title17_0_, contentdo0_.type as type18_0_ from blog_content 
contentdo0_ where 1=1 order by contentdo0_.cid desc limit 10 

2019-04-15 20:53:36 -select contentdo0_.cid as cid1_0_, contentdo0_.allow_comment as allow_co2_0_, contentdo0_.allow_feed 
as allow_fe3_0_, contentdo0_.allow_ping as allow_pi4_0_, contentdo0_.author as author5_0_, 
contentdo0_.categories as categori6_0_, contentdo0_.comments_num as comments7_0_, contentdo0_.content 
as content8_0_, contentdo0_.created as created9_0_, contentdo0_.gtm_create as gtm_cre10_0_, 
contentdo0_.gtm_modified as gtm_mod11_0_, contentdo0_.hits as hits12_0_, contentdo0_.modified 
as modifie13_0_, contentdo0_.slug as slug14_0_, contentdo0_.status as status15_0_, contentdo0_.tags 
as tags16_0_, contentdo0_.title as title17_0_, contentdo0_.type as type18_0_ from blog_content 
contentdo0_ where 1=1 order by contentdo0_.cid desc limit 10 
 {executed in 9 msec}
2019-04-15 20:53:36 -2. ResultSet.new ResultSet returned 
2019-04-15 20:53:36 -2. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@16a10a3f
2019-04-15 20:53:36 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@7d53a66f - Field level information: 
	com.mysql.jdbc.Field@60a024ba[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=cid1_0_,originalColumnName=cid,mysqlType=8(FIELD_TYPE_LONGLONG),flags= AUTO_INCREMENT PRIMARY_KEY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@3a60697b[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=allow_co2_0_,originalColumnName=allow_comment,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@248e6cfa[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=allow_fe3_0_,originalColumnName=allow_feed,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@448ed6da[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=allow_pi4_0_,originalColumnName=allow_ping,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@25eaaf05[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=author5_0_,originalColumnName=author,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@1cf82172[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=categori6_0_,originalColumnName=categories,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@4b4667ab[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=comments7_0_,originalColumnName=comments_num,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@794c401f[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=content8_0_,originalColumnName=content,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BLOB, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@92e4ab4[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=created9_0_,originalColumnName=created,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@54800952[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=gtm_cre10_0_,originalColumnName=gtm_create,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@2c034756[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=gtm_mod11_0_,originalColumnName=gtm_modified,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@37d4a671[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=hits12_0_,originalColumnName=hits,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@4cd431d5[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=modifie13_0_,originalColumnName=modified,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@184a6b84[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=slug14_0_,originalColumnName=slug,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@2ec5a62c[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=status15_0_,originalColumnName=status,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@3cb07aab[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=tags16_0_,originalColumnName=tags,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@5107be71[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=title17_0_,originalColumnName=title,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@1a5af99e[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=type18_0_,originalColumnName=type,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
2019-04-15 20:53:36 -2. ResultSet.next() returned true
2019-04-15 20:53:36 -2. ResultSet.getLong(cid1_0_) returned 121
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(allow_co2_0_) returned 1
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(allow_fe3_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(allow_pi4_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getString(author5_0_) returned bootdo-jpa
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getString(categori6_0_) returned 
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(comments7_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getString(content8_0_) returned <p><br></p><div class="Layout-navbarHolder" style="box-sizing: inherit; display: flex; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0; height: 59px; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: medium;"><header class="Navbar ScrollBackFixed" style="box-sizing: inherit; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; flex-direction: row; -webkit-box-align: center; align-items: center; flex-shrink: 0; contain: layout; -webkit-box-pack: justify; justify-content: space-between; height: 59px; width: 1519.2px; border-bottom: 1px solid rgba(0, 0, 0, 0.08); color: rgb(128, 128, 128); background: rgba(255, 255, 255, 0.97); z-index: 2; position: fixed; border-top-color: rgba(0, 0, 0, 0.08); border-right-color: rgba(0, 0, 0, 0.08); border-left-color: rgba(0, 0, 0, 0.08); transform: translateY(-100%); will-change: transform;"><div class="Navbar-functionality" style="box-sizing: inherit; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; flex-direction: row; -webkit-box-align: center; align-items: center; flex-shrink: 0; position: absolute; right: 0px; top: 0px; height: 58px; align-self: stretch;"><a class="Navbar-write" style="box-sizing: inherit; color: inherit; display: flex; -webkit-box-align: center; align-items: center; padding: 0px 10px; white-space: nowrap; transition: color 0.2s;"><span class="icon icon-ic_nav_new" style="box-sizing: inherit; font-size: 24px; speak: none; font-feature-settings: normal; line-height: 1; -webkit-font-smoothing: antialiased; margin-right: 3px; font-family: icomoon !important;"></span>写文章</a><button class="Button Navbar-loginButon Button--blue" type="button" style="box-sizing: inherit; padding: 0px 16px; color: rgb(0, 128, 255); font-size: 14px; line-height: 30px; background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-width: 1px; border-style: solid; border-color: rgb(0, 128, 255); -webkit-appearance: none; border-radius: 4px; height: 32px; margin-right: 16px; margin-left: 6px; width: 72px;">登录</button></div></header></div><div style="box-sizing: inherit; display: flex; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: medium;"></div><div class="Layout-main av-card av-paddingBottom av-bodyFont Layout-titleImage--normal" style="box-sizing: inherit; display: flex; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0; margin: 22px auto 0px; padding: 0px; width: 660px; z-index: 1; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: medium;"><div class="PostIndex-header av-paddingTop av-card" data-zop="{&quot;authorName&quot;:&quot;老A&quot;,&quot;itemId&quot;:&quot;29345083&quot;,&quot;title&quot;:&quot;Spring Cloud下微服务权限方案&quot;,&quot;type&quot;:&quot;article&quot;}" data-za-module="PostItem" data-za-module-info="{&quot;card&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;Post&quot;,&quot;token&quot;:&quot;29345083&quot;}}}" style="box-sizing: inherit; display: flex; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0; position: relative;"><div class="TitleImage" style="box-sizing: inherit; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0; margin-bottom: 22px;"><img alt="Spring Cloud下微服务权限方案" src="https://pic4.zhimg.com/v2-32e374b99a4332ca8bd52fca9d090617_r.png" class="TitleImage-imagePure TitleImage-imagePure--fixed" height="396px" style="box-sizing: inherit; overflow: hidden; width: 660px; display: block;"></div><h1 class="PostIndex-title av-paddingSide av-titleFont" style="box-sizing: inherit; margin-top: 0px; margin-bottom: 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; font-size: 32px; line-height: 1.3;">Spring Cloud下微服务权限方案</h1><div class="PostIndex-author" style="box-sizing: inherit; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; flex-direction: row; -webkit-box-align: center; align-items: center; flex-shrink: 0; position: relative; font-size: 14px; color: rgb(128, 128, 128); margin-top: 22px;"><a href="https://www.zhihu.com/people/lao-a-68-38" target="_blank" style="box-sizing: inherit; color: inherit;"><img class="Avatar-hemingway PostIndex-authorAvatar Avatar--xs" alt="老A" src="https://pic1.zhimg.com/v2-3b6c82a0652b73ee56207a2f45955ca8_xs.jpg" srcset="https://pic1.zhimg.com/v2-3b6c82a0652b73ee56207a2f45955ca8_l.jpg 2x" style="box-sizing: inherit; overflow: hidden; width: 36px; height: 36px; border-radius: 50%; margin-right: 12px;"></a><a href="https://www.zhihu.com/people/lao-a-68-38" target="_blank" class="PostIndex-authorName" style="box-sizing: inherit; color: rgb(128, 128, 128); min-width: 0px; text-overflow: ellipsis; white-space: nowrap; overflow: hidden;">老A</a><span class="Bull" style="box-sizing: inherit; margin: 0px 6px;"></span><div class="HoverTitle" data-hover-title="2017 年 9月 14 日星期四晚上 7 点 12 分" style="box-sizing: inherit; display: flex; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0; position: relative;"><time datetime="Thu Sep 14 2017 19:12:26 GMT+0800 (中国标准时间)" style="box-sizing: inherit;">1 个月前</time></div></div></div><div class="RichText PostIndex-content av-paddingSide av-card" style="box-sizing: inherit; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0; word-break: break-word; margin: 30px 0px; line-height: 1.7;"><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">背景</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">从传统的单体应用转型Spring Cloud的朋友都在问我，Spring Cloud下的微服务权限怎么管？怎么设计比较合理？从大层面讲叫服务权限，往小处拆分，分别为三块：用户认证、用户权限、服务校验。</p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">用户认证</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">传统的单体应用可能习惯了session的存在，而到了Spring cloud的微服务化后，session虽然可以采取分布式会话来解决，但终究不是上上策。开始有人推行Spring Cloud Security结合很好的OAuth2，后面为了优化OAuth 2中Access Token的存储问题，提高后端服务的可用性和扩展性，有了更好Token验证方式JWT（JSON Web Token）。这里要强调一点的是，OAuth2和JWT这两个根本没有可比性，是两个完全不同的东西。 OAuth2是一种授权框架，而JWT是一种认证协议</p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">OAuth2认证框架</h2><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">OAuth2中包含四个角色：</h2><ul style="box-sizing: inherit; margin: 20px 0px; padding: 0px 0px 0px 40px;"><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">资源拥有者(Resource Owner)</li><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">资源服务器(Resource Server)</li><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">授权服务器(Authorization Server)</li><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">客户端(Client)</li></ul><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">OAuth2包含4种授权模式</h2><ul style="box-sizing: inherit; margin: 20px 0px; padding: 0px 0px 0px 40px;"><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">授权码（认证码）模式 （Authorization code)</li><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">简化（隐形）模式 (Impilict</li><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">用户名密码模式 (Resource Owner Password Credential)</li><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">客户端模式 (Client Credential)</li></ul><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">其中，OAuth2的运行流程如下图，摘自RFC 6749：</p><div class="highlight" style="box-sizing: inherit; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0;"><pre style="box-sizing: inherit; margin-top: 1em; margin-bottom: 1em; padding: 10px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 14px; word-wrap: normal; background: rgb(235, 238, 245);"><code class="language-text" style="box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace;"><span style="box-sizing: inherit;"></span>+--------+                               +---------------+
|        |--(A)- Authorization Request -&gt;|   Resource    |
|        |                               |     Owner     |
|        |&lt;-(B)-- Authorization Grant ---|               |
|        |                               +---------------+
|        |
|        |                               +---------------+
|        |--(C)-- Authorization Grant --&gt;| Authorization |
| Client |                               |     Server    |
|        |&lt;-(D)----- Access Token -------|               |
|        |                               +---------------+
|        |
|        |                               +---------------+
|        |--(E)----- Access Token ------&gt;|    Resource   |
|        |                               |     Server    |
|        |&lt;-(F)--- Protected Resource ---|               |
+--------+                               +---------------+
</code></pre></div><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">我们在Spring Cloud OAuth2中，所有访问微服务资源的请求都在Http Header中携带Token，被访问的服务接下来再去请求授权服务器验证Token的有效性，目前这种方式，我们需要两次或者更多次的请求，所有的Token有效性校验都落在的授权服务器上，对于我们系统的水平扩展成为一个非常大的瓶颈。</p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">JWT认证协议</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">授权服务器将用户信息和授权范围序列化后放入一个JSON字符串，然后使用Base64进行编码，最终在授权服务器用私钥对这个字符串进行签名，得到一个JSON Web Token。</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">假设其他所有的资源服务器都将持有一个RSA公钥，当资源服务器接收到这个在Http Header中存有Token的请求，资源服务器就可以拿到这个Token，并验证它是否使用正确的私钥签名（是否经过授权服务器签名，也就是验签）。验签通过，反序列化后就拿到Toekn中包含的有效验证信息。</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">其中，主体运作流程图如下：</p><div class="highlight" style="box-sizing: inherit; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0;"><pre style="box-sizing: inherit; margin-top: 1em; margin-bottom: 1em; padding: 10px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 14px; word-wrap: normal; background: rgb(235, 238, 245);"><code class="language-text" style="box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace;"><span style="box-sizing: inherit;"></span>+-----------+                                     +-------------+
|           |       1-Request Authorization       |             |
|           |------------------------------------&gt;|             |
|           |     grant_type&amp;username&amp;password    |             |--+
|           |                                     |Authorization|  | 2-Gen
|           |                                     |Service      |  |   JWT
|           |       3-Response Authorization      |             |&lt;-+
|           |&lt;------------------------------------| Private Key |
|           |    access_token / refresh_token     |             |
|           |    token_type / expire_in           |             |
|  Client   |                                     +-------------+
|           |                                 
|           |                                     +-------------+
|           |       4-Request Resource            |             |
|           |-----------------------------------&gt; |             |
|           | Authorization: bearer Access Token  |             |--+
|           |                                     | Resource    |  | 5-Verify
|           |                                     | Service     |  |  Token
|           |       6-Response Resource           |             |&lt;-+
|           |&lt;----------------------------------- | Public Key  |
+-----------+                                     +-------------+
</code></pre></div><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">通过上述的方式，我们可以很好地完成服务化后的用户认证。</p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">用户权限</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">传统的单体应用的权限拦截，大家都喜欢shiro，而且用的颇为顺手。可是一旦拆分后，这权限开始分散在各个API了，shiro还好使吗？笔者在项目中，并没有用shiro。前后端分离后，交互都是token，后端的服务无状态化，前端按钮资源化，权限放哪儿管好使？</p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">抽象与设计</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">在介绍灵活的核心设计前，先给大家普及一个入门的概念：RBAC（Role-Based Access Control，基于角色的访问控制），就是用户通过角色与权限进行关联。简单地说，一个用户拥有若干角色，每一个角色拥有若干权限。</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">RBAC其实是一种分析模型，主要分为：基本模型RBAC0（Core RBAC）、角色分层模型RBAC1（Hierarchal RBAC）、角色限制模型RBAC2（Constraint RBAC）和统一模型RBAC3（Combines RBAC）。</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">更多详情大家可以了解：<a href="http://link.zhihu.com/?target=http%3A//blog.csdn.net/zwk626542417/article/details/46726491" class=" wrap external" target="_blank" rel="nofollow noreferrer" style="box-sizing: inherit; color: rgb(34, 85, 153); border-bottom: 1px solid rgba(64, 64, 64, 0.72); word-break: break-all;">RBAC权限模型<span class="icon-external" style="box-sizing: inherit; font-size: 24px; speak: none; font-feature-settings: normal; line-height: 1; -webkit-font-smoothing: antialiased; font-family: icomoon !important;"></span></a></p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">核心UML</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;"><br style="box-sizing: inherit;"></p><img src="https://pic2.zhimg.com/v2-3e3eed438a7df522714407c5436c9bc9_b.png" data-rawwidth="1168" data-rawheight="532" class="origin_image zh-lightbox-thumb lazy" width="1168" data-original="https://pic2.zhimg.com/v2-3e3eed438a7df522714407c5436c9bc9_r.png" data-actualsrc="https://pic2.zhimg.com/v2-3e3eed438a7df522714407c5436c9bc9_b.png" style="box-sizing: inherit; overflow: hidden; display: block; max-width: 100%; margin: 24px auto; cursor: -webkit-zoom-in;"><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">这是笔者通过多种业务场景后抽象的RBAC关系图</p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">类说明</h2><ul style="box-sizing: inherit; margin: 20px 0px; padding: 0px 0px 0px 40px;"><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">Group</li></ul><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">群或组，拥有一定数量权限的集合，亦可以是权限的载体。</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">子类：User（用户）、Role（角色）、Position（岗位）、Unit（部门），通过用户的特定构成，形成不同业务场景的群或组，而通过对群或组的父类授权，完成了用户的权限获取。</p><ul style="box-sizing: inherit; margin: 20px 0px; padding: 0px 0px 0px 40px;"><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">Permission</li></ul><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">权限，拥有一定数量资源的集成，亦可以是资源的载体。</p><ul style="box-sizing: inherit; margin: 20px 0px; padding: 0px 0px 0px 40px;"><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">Resources</li></ul><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">权限下有资源，资源的来源有：Menu（菜单）、Button（动作权限）、页面元素（按钮、tab等）、数据权限等</p><ul style="box-sizing: inherit; margin: 20px 0px; padding: 0px 0px 0px 40px;"><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">Program</li></ul><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">程序，相关权限控制的呈现载体，可以在多个菜单中挂载。</p><ul style="box-sizing: inherit; margin: 20px 0px; padding: 0px 0px 0px 40px;"><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">常见web程序基本构成</li></ul><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;"><br style="box-sizing: inherit;"></p><img src="https://pic1.zhimg.com/v2-9f156709621fdd7685db9781829e2948_b.png" data-rawwidth="873" data-rawheight="492" class="origin_image zh-lightbox-thumb lazy" width="873" data-original="https://pic1.zhimg.com/v2-9f156709621fdd7685db9781829e2948_r.png" data-actualsrc="https://pic1.zhimg.com/v2-9f156709621fdd7685db9781829e2948_b.png" style="box-sizing: inherit; overflow: hidden; display: block; max-width: 100%; margin: 24px auto; cursor: -webkit-zoom-in;"><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;"><br style="box-sizing: inherit;"></p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">模型与微服务的关系</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">如果把Spring Cloud服务化后的所有api接口都定义为上文的Resources，那么我们可以看到这么一个情况。</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">比如一个用户的增删改查，我们的页面会这么做</p><img src="https://pic1.zhimg.com/v2-ac1fa4fc0005af11c0a7aa59fe62cbbc_b.png" data-rawwidth="2880" data-rawheight="1460" class="origin_image zh-lightbox-thumb lazy" width="2880" data-original="https://pic1.zhimg.com/v2-ac1fa4fc0005af11c0a7aa59fe62cbbc_r.png" data-actualsrc="https://pic1.zhimg.com/v2-ac1fa4fc0005af11c0a7aa59fe62cbbc_b.png" style="box-sizing: inherit; overflow: hidden; display: block; max-width: 100%; margin: 24px auto; cursor: -webkit-zoom-in;"><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;"><br style="box-sizing: inherit;"></p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">页面元素资源编码资源URI资源请求方式查询user_btn_get/api/user/{id}GET增加user_btn_add/api/userPOST编辑user_btn_edit/api/user/{id}PUT删除user_btn_del/api/user/{id}DELETE</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">在抽象成上述的映射关系后，我们的前后端的资源有了参照，我们对于用户组的权限授权就容易了。比如我授予一个用户增加、删除权限。在前端我们只需要检验该资源编码的有无就可以控制按钮的显示和隐藏，而在后端我们只需要统一拦截判断该用户是否具有URI和对应请求方式即可。</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">至于权限的统一拦截是放置在Zuul这个网关上，还是落在具体的后端服务的拦截器上（Filter、Inteceptor），都可以轻而易举地实现。不在局限于代码的侵入性。放置Zuul流程图如下：</p><img src="https://pic3.zhimg.com/v2-efbe4a2af48e48c86867a49f04759b7a_b.png" data-rawwidth="1426" data-rawheight="710" class="origin_image zh-lightbox-thumb lazy" width="1426" data-original="https://pic3.zhimg.com/v2-efbe4a2af48e48c86867a49f04759b7a_r.png" data-actualsrc="https://pic3.zhimg.com/v2-efbe4a2af48e48c86867a49f04759b7a_b.png" style="box-sizing: inherit; overflow: hidden; display: block; max-width: 100%; margin: 24px auto; cursor: -webkit-zoom-in;"><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;"><br style="box-sizing: inherit;"></p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">要是权限的统一拦截放置在Zuul上，会有一个问题，那就是后端服务安不安全，服务只需要通过注册中心，即可对其他服务进行调用。这里就涉及到后面的第三个模块，服务之间的鉴权。</p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">服务之间的鉴权</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">因为我们都知道服务之间开源通过注册中心寻到客户端后，直接远程过程调用的。对于生产上的各个服务，一个个敏感性的接口，我们更是需要加以保护。主题的流程如下图：</p><img src="https://pic4.zhimg.com/v2-2c574cb730d4e02834e238d0f7fc40eb_b.png" data-rawwidth="1700" data-rawheight="926" class="origin_image zh-lightbox-thumb lazy" width="1700" data-original="https://pic4.zhimg.com/v2-2c574cb730d4e02834e238d0f7fc40eb_r.png" data-actualsrc="https://pic4.zhimg.com/v2-2c574cb730d4e02834e238d0f7fc40eb_b.png" style="box-sizing: inherit; overflow: hidden; display: block; max-width: 100%; margin: 24px auto; cursor: -webkit-zoom-in;"><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;"><br style="box-sizing: inherit;"></p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">笔者的实现方式是基于Spring Cloud的FeignClient Inteceprot（自动申请服务token、传递当前上下文）和Mvc Inteceptor（服务token校验、更新当前上下文）来实现，从而对服务的安全性做进一步保护。</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">结合Spring Cloud的特性后，整体流程图如下：</p><img src="https://pic1.zhimg.com/v2-467d442498d0ed41372a7567fc36a714_b.png" data-rawwidth="2182" data-rawheight="1638" class="origin_image zh-lightbox-thumb lazy" width="2182" data-original="https://pic1.zhimg.com/v2-467d442498d0ed41372a7567fc36a714_r.png" data-actualsrc="https://pic1.zhimg.com/v2-467d442498d0ed41372a7567fc36a714_b.png" style="box-sizing: inherit; overflow: hidden; display: block; max-width: 100%; margin: 24px auto; cursor: -webkit-zoom-in;"><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;"><br style="box-sizing: inherit;"></p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">优化点</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">虽然通过上述的用户合法性检验、用户权限拦截以及服务之间的鉴权，保证了Api接口的安全性，但是其间的Http访问频率是比较高的，请求数量上来的时候，慢的问题是就会特别明显。可以考虑一定的优化策略，比如用户权限缓存、服务授权信息的派发与混存、定时刷新服务鉴权Token等。</p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">结语</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">上述是笔者在项目里的大体思路，有兴趣的朋友可以借鉴我的开源项目，欢迎star：</p><ul style="box-sizing: inherit; margin: 20px 0px; padding: 0px 0px 0px 40px;"><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">gitchina：<a href="http://link.zhihu.com/?target=http%3A//git.oschina.net/geek_qi/ace-security%25EF%25BC%2588Jwt%25E3%2580%2581%25E7%2594%25A8%25E6%2588%25B7%25E6%259D%2583%25E9%2599%2590%25EF%25BC%2589" class=" wrap external" target="_blank" rel="nofollow noreferrer" style="box-sizing: inherit; color: rgb(34, 85, 153); border-bottom: 1px solid rgba(64, 64, 64, 0.72); word-break: break-all;">http://git.oschina.net/geek_qi/ace-security（Jwt、用户权限）<span class="icon-external" style="box-sizing: inherit; font-size: 24px; speak: none; font-feature-settings: normal; line-height: 1; -webkit-font-smoothing: antialiased; font-family: icomoon !important;"></span></a></li><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">github：<a href="http://link.zhihu.com/?target=https%3A//github.com/wxiaoqi/ace-security" class=" external" target="_blank" rel="nofollow noreferrer" style="box-sizing: inherit; color: rgb(34, 85, 153); border-bottom: 1px solid rgba(64, 64, 64, 0.72); word-break: break-all;"><span class="invisible" style="box-sizing: inherit; font-stretch: normal; font-size: 0px; line-height: 0; font-family: a; color: transparent; text-shadow: none; background-color: transparent;">https://</span><span class="visible" style="box-sizing: inherit;">github.com/wxiaoqi/ace-</span><span class="invisible" style="box-sizing: inherit; font-stretch: normal; font-size: 0px; line-height: 0; font-family: a; color: transparent; text-shadow: none; background-color: transparent;">security</span><span class="ellipsis" style="box-sizing: inherit;"></span><span class="icon-external" style="box-sizing: inherit; font-size: 24px; speak: none; font-feature-settings: normal; line-height: 1; -webkit-font-smoothing: antialiased; font-family: icomoon !important;"></span></a></li><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">gitchina：<a href="http://link.zhihu.com/?target=http%3A//git.oschina.net/geek_qi/ace-gate%25EF%25BC%2588%25E6%259C%258D%25E5%258A%25A1%25E9%2589%25B4%25E6%259D%2583%25EF%25BC%2589" class=" wrap external" target="_blank" rel="nofollow noreferrer" style="box-sizing: inherit; color: rgb(34, 85, 153); border-bottom: 1px solid rgba(64, 64, 64, 0.72); word-break: break-all;">http://git.oschina.net/geek_qi/ace-gate（服务鉴权）</a></li></ul></div></div>
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getLong(created9_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getTimestamp(gtm_cre10_0_) returned 2017-10-25 12:28:19.0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getTimestamp(gtm_mod11_0_) returned 2017-10-25 12:28:19.0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(hits12_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getLong(modifie13_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getString(slug14_0_) returned null
2019-04-15 20:53:36 -2. ResultSet.getInt(status15_0_) returned 1
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getString(tags16_0_) returned null
2019-04-15 20:53:36 -2. ResultSet.getString(title17_0_) returned Spring Cloud下微服务权限方案
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getString(type18_0_) returned article
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.next() returned true
2019-04-15 20:53:36 -2. ResultSet.getLong(cid1_0_) returned 119
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(allow_co2_0_) returned 1
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(allow_fe3_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(allow_pi4_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getString(author5_0_) returned bootdo-jpa
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getString(categori6_0_) returned 
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(comments7_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getString(content8_0_) returned <h1 class="title" style="font-size: 34px; margin-top: 20px; margin-bottom: 0px; font-family: -apple-system, &quot;SF UI Display&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-weight: 700; line-height: 1.3; color: rgb(51, 51, 51); word-break: break-word !important;">Java程序员秋招面经大合集（BAT美团网易小米华为中兴等）</h1><div data-note-content="" class="show-content" style="color: rgb(47, 47, 47); font-size: 16px; line-height: 1.7; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; word-break: break-word !important;"><blockquote style="padding-top: 20px; padding-bottom: 20px; margin-bottom: 25px; font-size: 16px; border-left-width: 6px; border-left-color: rgb(180, 180, 180); background-color: rgb(247, 247, 247); line-height: 30px; word-break: break-word !important;"><ul style="padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">Cvte提前批</li><li style="line-height: 30px; margin-bottom: 10px;">阿里内推</li><li style="line-height: 30px; margin-bottom: 10px;">便利蜂内推</li><li style="line-height: 30px; margin-bottom: 10px;">小米内推</li><li style="line-height: 30px; margin-bottom: 10px;">金山wps内推</li><li style="line-height: 30px; margin-bottom: 10px;">多益网络</li><li style="line-height: 30px; margin-bottom: 10px;">拼多多学霸批</li><li style="line-height: 30px; margin-bottom: 10px;">搜狗校招</li><li style="line-height: 30px; margin-bottom: 10px;">涂鸦移动</li><li style="line-height: 30px; margin-bottom: 10px;">中国电信it研发中心</li><li style="line-height: 30px; margin-bottom: 10px;">中兴</li><li style="line-height: 30px; margin-bottom: 10px;">华为</li><li style="line-height: 30px; margin-bottom: 10px;">苏宁内推</li><li style="line-height: 30px; margin-bottom: 10px;">美团内推</li><li style="line-height: 30px; margin-bottom: 10px;">百度</li><li style="line-height: 30px; margin-bottom: 10px;">腾讯</li><li style="line-height: 30px; margin-bottom: 10px;">招商银行信用卡</li><li style="line-height: 30px; margin-bottom: 10px;">招银网络科技</li><li style="line-height: 30px; margin-bottom: 10px;">网易</li><li style="line-height: 30px; margin-bottom: 0px;">Vivo</li></ul></blockquote><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">Cvte提前批</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（电话）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">介绍你的项目</li><li style="line-height: 30px; margin-bottom: 10px;">加密解密了解么？几种算法，讲一下你了解的</li><li style="line-height: 30px; margin-bottom: 10px;">多线程了解么？什么是线程安全？</li><li style="line-height: 30px; margin-bottom: 10px;">说一个你最熟悉的设计模式</li><li style="line-height: 30px; margin-bottom: 10px;">讲一下你项目中用到了哪些设计模式</li><li style="line-height: 30px; margin-bottom: 10px;">Java的hashmap的原理</li><li style="line-height: 30px; margin-bottom: 10px;">Hashmap的线程安全性，什么是线程安全的？如何实现线程安全</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（视频）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">介绍项目</li><li style="line-height: 30px; margin-bottom: 10px;">Mysql的数据库引擎，区别特点</li><li style="line-height: 30px; margin-bottom: 10px;">设计模式了解？讲一下最熟悉的</li><li style="line-height: 30px; margin-bottom: 10px;">写一个单例模式，答主写的是双检查锁单例，问了为什么用Volatile，synchronize移到方法最外面会怎么样？</li><li style="line-height: 30px; margin-bottom: 10px;">单例模式在你项目里哪些应用？</li><li style="line-height: 30px; margin-bottom: 10px;">数据连接池</li><li style="line-height: 30px; margin-bottom: 10px;">对高负载有了解么</li><li style="line-height: 30px; margin-bottom: 10px;">你意向的技术方向是哪块？（答主回答的高并发，然后面试官说他是做高负载的）</li><li style="line-height: 30px; margin-bottom: 10px;">对高并发有了解么？</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">阿里内推</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（电话）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">听说你有博客，博客里大概有什么内容？</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍，最复杂的表</li><li style="line-height: 30px; margin-bottom: 10px;">Hashmap的原理</li><li style="line-height: 30px; margin-bottom: 10px;">Hashmap为什么大小是2的幂次</li><li style="line-height: 30px; margin-bottom: 10px;">介绍一下红黑树</li><li style="line-height: 30px; margin-bottom: 10px;">Arraylist的原理</li><li style="line-height: 30px; margin-bottom: 10px;">场景题：设计判断论文抄袭的系统</li><li style="line-height: 30px; margin-bottom: 10px;">堆排序的原理</li><li style="line-height: 30px; margin-bottom: 10px;">抽象工厂和工厂方法模式的区别</li><li style="line-height: 30px; margin-bottom: 10px;">工厂模式的思想</li><li style="line-height: 30px; margin-bottom: 10px;">object类你知道的方法</li><li style="line-height: 30px; margin-bottom: 10px;">哪里用到了工厂模式</li><li style="line-height: 30px; margin-bottom: 10px;">Forward和redirect的区别</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（视频）</h2><p style="margin-bottom: 25px; word-break: break-word !important;">1， 自我介绍<br>2， 项目介绍<br>3， 项目架构<br>4， 项目难点<br>5， Synchronize关键字为什么jdk1.5后效率提高了<br>6， 线程池的使用时的注意事项<br>7， Spring中autowire和resourse关键字的区别<br>8， Hashmap的原理<br>9， Hashmap的大小为什么指定为2的幂次<br>10， 讲一下线程状态转移图<br>11， 消息队列了解么<br>12， 分布式了解么</p><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">便利蜂内推</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（电话）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">volatile和synchronized</li><li style="line-height: 30px; margin-bottom: 10px;">来个算法题：一个无序数组，其中一个数字出现的次数大于其他数字之和，求这个数字 （主元素）</li><li style="line-height: 30px; margin-bottom: 10px;">答完再来一个：一个数组，有正有负，不改变顺序的情况下，求和最大的最长子序列</li><li style="line-height: 30px; margin-bottom: 10px;">项目用到什么数据库？隔离级别？每个隔离级别各做了什么</li><li style="line-height: 30px; margin-bottom: 10px;">数据库的索引？mysql不同引擎索引的区别</li><li style="line-height: 30px; margin-bottom: 10px;">垃圾回收算法的过程</li><li style="line-height: 30px; margin-bottom: 10px;">你了解的垃圾收集器？ Cms收集器的过程</li><li style="line-height: 30px; margin-bottom: 10px;">怎样进入老年代？</li><li style="line-height: 30px; margin-bottom: 10px;">平时用到了什么设计模式？</li><li style="line-height: 30px; margin-bottom: 10px;">讲一下你最熟的两个设计模式</li><li style="line-height: 30px; margin-bottom: 10px;">用过什么系统？shell写过脚本吗？</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">小米内推</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（电话）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">看你最近博客写的是redis，介绍redis和mysql的区别</li><li style="line-height: 30px; margin-bottom: 10px;">Redis的应用场景</li><li style="line-height: 30px; margin-bottom: 10px;">Hashmap的原理</li><li style="line-height: 30px; margin-bottom: 10px;">Hashmap中jdk1.8之后做了哪些优化</li><li style="line-height: 30px; margin-bottom: 10px;">垃圾回收的过程</li><li style="line-height: 30px; margin-bottom: 10px;">Jvm的参数设置</li><li style="line-height: 30px; margin-bottom: 10px;">项目中的优化</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">金山wps内推</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（电话）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">对Java的面向对象的理解</li><li style="line-height: 30px; margin-bottom: 10px;">对java多线程的理解</li><li style="line-height: 30px; margin-bottom: 10px;">数据库的索引</li><li style="line-height: 30px; margin-bottom: 10px;">数据库的隔离级别</li><li style="line-height: 30px; margin-bottom: 10px;">设计模式的理解</li><li style="line-height: 30px; margin-bottom: 10px;">讲几个设计模式</li><li style="line-height: 30px; margin-bottom: 10px;">对算法有什么了解？答主先回答了动态规划，解释了一下dp的思想</li><li style="line-height: 30px; margin-bottom: 10px;">快排的思想讲一下</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（电话）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">Tcp怎么保证可靠传输（中间穿插了好多小问题）</li><li style="line-height: 30px; margin-bottom: 10px;">Tcp的拥塞控制</li><li style="line-height: 30px; margin-bottom: 10px;">让你设计一个即时聊天的系统</li><li style="line-height: 30px; margin-bottom: 10px;">支付宝转账，是如何实现，几个小时通知转账成功的（面试官想让回答长连接，答主一直没get到点）</li><li style="line-height: 30px; margin-bottom: 10px;">解释一下长连接</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">多益网络</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（视频）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">对面向对象的理解</li><li style="line-height: 30px; margin-bottom: 10px;">介绍多态</li><li style="line-height: 30px; margin-bottom: 10px;">Java新建线程有哪几种方式</li><li style="line-height: 30px; margin-bottom: 10px;">线程池的作用</li><li style="line-height: 30px; margin-bottom: 10px;">看过框架源码么</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">拼多多学霸批</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场面）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">手撕算法：一棵二叉排序树，给定一个数，找到与给定数差值最小的数</li><li style="line-height: 30px; margin-bottom: 10px;">场景题：设计一个系统，解决抢购时所需要的大量的短链接的功能，如何保证高并发，如何设计短链接</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（现场面）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">代码量多少</li><li style="line-height: 30px; margin-bottom: 10px;">给了一张纸，各种名词，会的写出来</li><li style="line-height: 30px; margin-bottom: 10px;">然后给它解释那些会的</li><li style="line-height: 30px; margin-bottom: 10px;">设计题：设计一个系统，记录qq用户前一天的登录状态，提供16g内存和2tb的硬盘，要做到查询指定qq号的前一天的登录状态，快速查询O(1)复杂度</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">搜狗校招</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场）：</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">手撕算法：两个排序的数组A和B分别含有m和n个数，找到两个排序数组的中位数，答主用的二分，时间复杂度为O(log (m+n))。结果面试官不满意，让用归并的思想做，时间复杂度其实更高了</li><li style="line-height: 30px; margin-bottom: 10px;">介绍网络编程</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">涂鸦移动</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">数据库的索引原理</li><li style="line-height: 30px; margin-bottom: 10px;">索引使用的注意事项</li><li style="line-height: 30px; margin-bottom: 10px;">数据库的引擎</li><li style="line-height: 30px; margin-bottom: 10px;">Java垃圾回收机制</li><li style="line-height: 30px; margin-bottom: 10px;">Java的finalize，finally，final三个关键字的区别和应用场景</li><li style="line-height: 30px; margin-bottom: 10px;">String类可以被继承么<br>手撕算法：假设你是一个专业的窃贼，准备沿着一条街打劫房屋。每个房子都存放着特定金额的钱。你面临的唯一约束条件是：相邻的房子装着相互联系的防盗系统，且 当相邻的两个房子同一天被打劫时，该系统会自动报警。<br>给定一个非负整数列表，表示每个房子中存放的钱， 算一算，如果今晚去打劫，你最多可以得到多少钱 在不触动报警装置的情况下。</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（电话）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">对游戏的了解</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">算法题：给一个整数数组，找到两个数使得他们的和等于一个给定的数 target。</li><li style="line-height: 30px; margin-bottom: 10px;">红黑树</li><li style="line-height: 30px; margin-bottom: 10px;">Redis的应用</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">中国电信it研发中心</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目里用的什么服务器</li><li style="line-height: 30px; margin-bottom: 10px;">自己写一个tomcat服务器，你会怎么写</li><li style="line-height: 30px; margin-bottom: 10px;">分布式服务器会出现哪些问题</li><li style="line-height: 30px; margin-bottom: 10px;">怎么解决session一致性缓存的问题</li><li style="line-height: 30px; margin-bottom: 10px;">Redis的优势和特点</li><li style="line-height: 30px; margin-bottom: 10px;">一千万用户并发抢购，怎么设计</li><li style="line-height: 30px; margin-bottom: 10px;">如果成功的用户有10万，redis存不下怎么处理</li><li style="line-height: 30px; margin-bottom: 10px;">你项目中的难点</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">介绍spring中的熟悉的注解</li><li style="line-height: 30px; margin-bottom: 10px;">让你实现autowire注解的功能你会如何实现</li><li style="line-height: 30px; margin-bottom: 10px;">Redis和mysql的区别</li><li style="line-height: 30px; margin-bottom: 10px;">Redis的持久化有哪些方式，具体原理</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">中兴</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">专业面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">你了解的设计模式，讲两个</li><li style="line-height: 30px; margin-bottom: 10px;">Java collection类，集合，讲两个你了解的，说实现原理</li><li style="line-height: 30px; margin-bottom: 10px;">Java线程池的作用</li><li style="line-height: 30px; margin-bottom: 10px;">你觉得你在你实验室处于什么水平</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">综合面试（现场）</h2><p style="margin-bottom: 25px; word-break: break-word !important;">说好的综合面试纯聊天呢？<br>1． 自我介绍<br>2． 项目介绍<br>3． 说一下你知道的设计模式<br>4． 画一个策略模式的uml图<br>5． Java多线程的理解<br>6． 内存屏障是什么<br>7． 数据库索引<br>8． 项目中的优化<br>9． 然后开始聊人生<br>10． 你的缺点，你最不喜欢什么样的人，你的家庭等等</p><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">华为</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目架构</li><li style="line-height: 30px; margin-bottom: 10px;">项目一个完整的执行流程（由于我是搞java的，而面试官是搞c的，所以全程尬聊）</li><li style="line-height: 30px; margin-bottom: 10px;">项目优化</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">怎么管理项目进度</li><li style="line-height: 30px; margin-bottom: 10px;">平常的爱好</li><li style="line-height: 30px; margin-bottom: 10px;">感觉面试官也不是搞java的，所以又是一阵尬聊</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">苏宁内推</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">面过哪些公司了</li><li style="line-height: 30px; margin-bottom: 10px;">有哪些offer了</li><li style="line-height: 30px; margin-bottom: 10px;">聊到多益，于是开始聊最近微博上很火的多益老板</li><li style="line-height: 30px; margin-bottom: 10px;">得出结论，我和面试官都觉得多益老板三观有问题，但做游戏就是要偏执的人</li><li style="line-height: 30px; margin-bottom: 10px;">你博客主要哪方面的</li><li style="line-height: 30px; margin-bottom: 10px;">多线程并发包了解么</li><li style="line-height: 30px; margin-bottom: 10px;">讲一下countDownLatch</li></ol><p style="margin-bottom: 25px; word-break: break-word !important;">苏宁聊了20分钟八卦就面完了，一轮技术面</p><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">美团内推</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（电话）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">Redis介绍</li><li style="line-height: 30px; margin-bottom: 10px;">了解redis源码么</li><li style="line-height: 30px; margin-bottom: 10px;">了解redis集群么</li><li style="line-height: 30px; margin-bottom: 10px;">Hashmap的原理</li><li style="line-height: 30px; margin-bottom: 10px;">hashmap容量为什么是2的幂次</li><li style="line-height: 30px; margin-bottom: 10px;">hashset的源码</li><li style="line-height: 30px; margin-bottom: 10px;">object类你知道的方法</li><li style="line-height: 30px; margin-bottom: 10px;">hashcode和equals</li><li style="line-height: 30px; margin-bottom: 10px;">你重写过hashcode和equals么，要注意什么</li><li style="line-height: 30px; margin-bottom: 10px;">假设现在一个学生类，有学号和姓名，我现在hashcode方法重写的时候，只将学号参与计算，会出现什么情况？</li><li style="line-height: 30px; margin-bottom: 10px;">往set里面put一个学生对象，然后将这个学生对象的学号改了，再put进去，可以放进set么？并讲出为什么</li><li style="line-height: 30px; margin-bottom: 10px;">Redis的持久化？有哪些方式，原理是什么？</li><li style="line-height: 30px; margin-bottom: 10px;">讲一下稳定的排序算法和不稳定的排序算法</li><li style="line-height: 30px; margin-bottom: 10px;">讲一下快速排序的思想</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">讲一下数据的acid</li><li style="line-height: 30px; margin-bottom: 10px;">什么是一致性</li><li style="line-height: 30px; margin-bottom: 10px;">什么是隔离性</li><li style="line-height: 30px; margin-bottom: 10px;">Mysql的隔离级别</li><li style="line-height: 30px; margin-bottom: 10px;">每个隔离级别是如何解决</li><li style="line-height: 30px; margin-bottom: 10px;">Mysql要加上nextkey锁，语句该怎么写</li><li style="line-height: 30px; margin-bottom: 10px;">Java的内存模型，垃圾回收</li><li style="line-height: 30px; margin-bottom: 10px;">线程池的参数</li><li style="line-height: 30px; margin-bottom: 10px;">每个参数解释一遍</li><li style="line-height: 30px; margin-bottom: 10px;">然后面试官设置了每个参数，给了是个线程，让描述出完整的线程池执行的流程</li><li style="line-height: 30px; margin-bottom: 10px;">Nio和IO有什么区别</li><li style="line-height: 30px; margin-bottom: 10px;">Nio和aio的区别</li><li style="line-height: 30px; margin-bottom: 10px;">Spring的aop怎么实现</li><li style="line-height: 30px; margin-bottom: 10px;">Spring的aop有哪些实现方式</li><li style="line-height: 30px; margin-bottom: 10px;">动态代理的实现方式和区别</li><li style="line-height: 30px; margin-bottom: 10px;">Linux了解么</li><li style="line-height: 30px; margin-bottom: 10px;">怎么查看系统负载</li><li style="line-height: 30px; margin-bottom: 10px;">Cpu load的参数如果为4，描述一下现在系统处于什么情况</li><li style="line-height: 30px; margin-bottom: 10px;">Linux，查找磁盘上最大的文件的命令</li><li style="line-height: 30px; margin-bottom: 10px;">Linux，如何查看系统日志文件</li><li style="line-height: 30px; margin-bottom: 10px;">手撕算法：leeetcode原题 22，Generate Parentheses，给定 n 对括号，请写一个函数以将其生成新的括号组合，并返回所有组合结果。</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">三面（现场）</h2><p style="margin-bottom: 25px; word-break: break-word !important;">三面没怎么问技术，问了很多技术管理方面的问题</p><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">怎么管理项目成员</li><li style="line-height: 30px; margin-bottom: 10px;">当意见不一致时，如何沟通并说服开发成员，并举个例子</li><li style="line-height: 30px; margin-bottom: 10px;">怎么保证项目的进度</li><li style="line-height: 30px; margin-bottom: 10px;">数据库的索引原理</li><li style="line-height: 30px; margin-bottom: 10px;">非聚簇索引和聚簇索引</li><li style="line-height: 30px; margin-bottom: 10px;">索引的使用注意事项</li><li style="line-height: 30px; margin-bottom: 10px;">联合索引</li><li style="line-height: 30px; margin-bottom: 10px;">从底层解释最左匹配原则</li><li style="line-height: 30px; margin-bottom: 10px;">Mysql对联合索引有优化么？会自动调整顺序么？哪个版本开始优化？</li><li style="line-height: 30px; margin-bottom: 10px;">Redis的应用</li><li style="line-height: 30px; margin-bottom: 10px;">Redis的持久化的方式和原理</li><li style="line-height: 30px; margin-bottom: 10px;">技术选型，一个新技术和一个稳定的旧技术，你会怎么选择，选择的考虑有哪些</li><li style="line-height: 30px; margin-bottom: 10px;">说你印象最深的美团点评技术团队的三篇博客</li><li style="line-height: 30px; margin-bottom: 10px;">最近在学什么新技术</li><li style="line-height: 30px; margin-bottom: 10px;">你是怎么去接触一门新技术的</li><li style="line-height: 30px; margin-bottom: 10px;">会看哪些书</li><li style="line-height: 30px; margin-bottom: 10px;">怎么选择要看的书</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">百度</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">Java中的多态</li><li style="line-height: 30px; margin-bottom: 10px;">Object类下的方法</li><li style="line-height: 30px; margin-bottom: 10px;">Finalize的作用和使用场景</li><li style="line-height: 30px; margin-bottom: 10px;">Hashcode和equals</li><li style="line-height: 30px; margin-bottom: 10px;">为什么要同时重写hashcode和equals</li><li style="line-height: 30px; margin-bottom: 10px;">不同时重写会出现哪些问题</li><li style="line-height: 30px; margin-bottom: 10px;">Hashmap的原理</li><li style="line-height: 30px; margin-bottom: 10px;">Hashmap如何变线程安全，每种方式的优缺点</li><li style="line-height: 30px; margin-bottom: 10px;">垃圾回收机制</li><li style="line-height: 30px; margin-bottom: 10px;">Jvm的参数你知道的说一下</li><li style="line-height: 30px; margin-bottom: 10px;">设计模式了解的说一下啊</li><li style="line-height: 30px; margin-bottom: 10px;">手撕一个单例模式</li><li style="line-height: 30px; margin-bottom: 10px;">快速排序的思想讲一下</li><li style="line-height: 30px; margin-bottom: 10px;">给个数组，模拟快排的过程</li><li style="line-height: 30px; margin-bottom: 10px;">手写快排</li><li style="line-height: 30px; margin-bottom: 10px;">设计题，一个图书馆管理系统，数据库怎么设计，需求自己定</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">Redis的特点</li><li style="line-height: 30px; margin-bottom: 10px;">分布式事务了解么</li><li style="line-height: 30px; margin-bottom: 10px;">反爬虫的机制，有哪些方式</li><li style="line-height: 30px; margin-bottom: 10px;">手撕算法：反转单链表</li><li style="line-height: 30px; margin-bottom: 10px;">手撕算法：实现类似微博子结构的数据结构，输入一系列父子关系，输出一个类似微博评论的父子结构图</li><li style="line-height: 30px; margin-bottom: 10px;">手写java多线程</li><li style="line-height: 30px; margin-bottom: 10px;">手写java的soeket编程，服务端和客户端</li><li style="line-height: 30px; margin-bottom: 10px;">进程间的通信方式</li><li style="line-height: 30px; margin-bottom: 10px;">手撕算法： 爬楼梯，写出状态转移方程</li><li style="line-height: 30px; margin-bottom: 10px;">智力题：时针分针什么时候重合</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">三面（现场）</h2><p style="margin-bottom: 25px; word-break: break-word !important;">由于三面面试官不懂java，我不熟c加加，所以全程尬聊</p><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">手撕算法：给定一个数字三角形，找到从顶部到底部的最小路径和。每一步可以移动到下面一行的相邻数字上。</li><li style="line-height: 30px; margin-bottom: 10px;"></li><li style="line-height: 30px; margin-bottom: 10px;">然后继续在这个问题上扩展</li><li style="line-height: 30px; margin-bottom: 10px;">求出最短那条的路径</li><li style="line-height: 30px; margin-bottom: 10px;">递归求出所有的路径</li><li style="line-height: 30px; margin-bottom: 10px;">设计模式讲一下熟悉的</li><li style="line-height: 30px; margin-bottom: 10px;">会不会滥用设计模式</li><li style="line-height: 30px; margin-bottom: 10px;">多线程条件变量为什么要在while体里</li><li style="line-height: 30px; margin-bottom: 10px;">你遇到什么挫折</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">腾讯</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">Hibernate的作用，你的理解</li><li style="line-height: 30px; margin-bottom: 10px;">多线程的理解，如何保证线程安全</li><li style="line-height: 30px; margin-bottom: 10px;">mysql数据库的引擎和区别</li><li style="line-height: 30px; margin-bottom: 10px;">场景题：千万用户抢购，如何处理高并发，并且有一个链接，指向前一天抢购成功的用户，如何设计这个系统和数据库</li><li style="line-height: 30px; margin-bottom: 10px;">如果后台处理抢购请求的服务器，每次最多承受200的负载，系统该怎么设计</li><li style="line-height: 30px; margin-bottom: 10px;">手撕算法：最小公倍数和最大公约数</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目里一个完整请求的流程</li><li style="line-height: 30px; margin-bottom: 10px;">项目的优化</li><li style="line-height: 30px; margin-bottom: 10px;">Hibernate和mybatis的区别</li><li style="line-height: 30px; margin-bottom: 10px;">为什么用ssh框架</li><li style="line-height: 30px; margin-bottom: 10px;">Mysql的容灾备份</li><li style="line-height: 30px; margin-bottom: 10px;">Redis和memcache 的区别</li><li style="line-height: 30px; margin-bottom: 10px;">为什么选择redis</li><li style="line-height: 30px; margin-bottom: 10px;">Java的full gc</li><li style="line-height: 30px; margin-bottom: 10px;">Full gc会导致什么问题</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">招商银行信用卡</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">分布式事务</li><li style="line-height: 30px; margin-bottom: 10px;">设计模式</li><li style="line-height: 30px; margin-bottom: 10px;">访问者模式</li><li style="line-height: 30px; margin-bottom: 10px;">装饰者模式</li><li style="line-height: 30px; margin-bottom: 10px;">有哪些offer</li><li style="line-height: 30px; margin-bottom: 10px;">为什么还来我们这</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">招银网络科技</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">写一个两个有序链表合并成一个有序链表</li><li style="line-height: 30px; margin-bottom: 10px;">死锁是什么呢</li><li style="line-height: 30px; margin-bottom: 10px;">怎么解决死锁</li><li style="line-height: 30px; margin-bottom: 10px;">http请求流程</li><li style="line-height: 30px; margin-bottom: 10px;">为什么负载均衡</li><li style="line-height: 30px; margin-bottom: 10px;">怎么实现负载均衡</li><li style="line-height: 30px; margin-bottom: 10px;">数据库挂了怎么办？除了热备份还有什么方法</li><li style="line-height: 30px; margin-bottom: 10px;">讲讲你对spring的理解，不要把ioc和aop背给我听</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">算法：找出两个数组相等的数，不能用其他数据结构</li><li style="line-height: 30px; margin-bottom: 10px;">算法：给定一个数字，一个数组，找出数组中相加等于这两个数的和，不能用数据结构</li><li style="line-height: 30px; margin-bottom: 10px;">算法：如何判断一个树是不是另一颗树的子树</li><li style="line-height: 30px; margin-bottom: 10px;">如何解决并发访问的错误</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">网易</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">I++操作怎么保证线程安全</li><li style="line-height: 30px; margin-bottom: 10px;">场景题：设计一个下单系统，下单成功后可以给用户发优惠券</li><li style="line-height: 30px; margin-bottom: 10px;">接上面场景题：服务器挂了，优惠券还没发怎么办</li><li style="line-height: 30px; margin-bottom: 10px;">数据库挂了怎么怎么办</li><li style="line-height: 30px; margin-bottom: 10px;">怎么保证一致性</li><li style="line-height: 30px; margin-bottom: 10px;">分布式事务知道么</li><li style="line-height: 30px; margin-bottom: 10px;">介绍分布式事务</li><li style="line-height: 30px; margin-bottom: 10px;">你的职业规划</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">Nio的原理</li><li style="line-height: 30px; margin-bottom: 10px;">Channel和buffer</li><li style="line-height: 30px; margin-bottom: 10px;">directBuffer和buffer的区别</li><li style="line-height: 30px; margin-bottom: 10px;">nio和aio的区别</li><li style="line-height: 30px; margin-bottom: 10px;">锁的实现原理</li><li style="line-height: 30px; margin-bottom: 10px;">怎么解决缓存和主存的一致性问题</li><li style="line-height: 30px; margin-bottom: 10px;">缓存还没更新到主存，服务器挂了怎么办</li><li style="line-height: 30px; margin-bottom: 10px;">数据库挂了怎么办</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">Vivo</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">Hibernate的batch有数量限制么</li><li style="line-height: 30px; margin-bottom: 10px;">Jquery用过么</li><li style="line-height: 30px; margin-bottom: 10px;">Extjs的优缺点</li><li style="line-height: 30px; margin-bottom: 10px;">有没有扩展过extjs</li><li style="line-height: 30px; margin-bottom: 10px;">读写锁</li><li style="line-height: 30px; margin-bottom: 10px;">什么时候用读锁</li><li style="line-height: 30px; margin-bottom: 10px;">什么时候用写锁</li><li style="line-height: 30px; margin-bottom: 10px;">Cas的原理，使用场景</li><li style="line-height: 30px; margin-bottom: 10px;">数据库的瓶颈</li></ol><div><br></div><div><br></div><div>转自<a href="http://www.jianshu.com//p/72712546648b" target="_blank">http://www.jianshu.com//p/72712546648b</a></div></div>
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getLong(created9_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getTimestamp(gtm_cre10_0_) returned 2017-10-13 13:45:20.0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getTimestamp(gtm_mod11_0_) returned 2017-10-13 13:45:20.0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(hits12_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getLong(modifie13_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getString(slug14_0_) returned null
2019-04-15 20:53:36 -2. ResultSet.getInt(status15_0_) returned 1
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getString(tags16_0_) returned null
2019-04-15 20:53:36 -2. ResultSet.getString(title17_0_) returned Java程序员秋招面经大合集（BAT美团网易小米华为中兴等）
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getString(type18_0_) returned article
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.next() returned true
2019-04-15 20:53:36 -2. ResultSet.getLong(cid1_0_) returned 118
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(allow_co2_0_) returned 1
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(allow_fe3_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(allow_pi4_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getString(author5_0_) returned bootdo-jpa
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getString(categori6_0_) returned 
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(comments7_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getString(content8_0_) returned <article style="padding: 20px 0px; border-top: 1px solid rgb(228, 235, 244); border-left: 1px solid rgb(228, 235, 244); border-right: 1px solid rgb(228, 235, 244); color: rgb(51, 51, 51); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; font-size: 16px;"><div id="article_content" class="article_content csdn-tracking-statistics" data-mod="popu_307" data-dsm="post" style="margin: 0px 0px 50px; padding: 20px 30px 0px; color: rgb(69, 69, 69); overflow: hidden;"><div class="markdown_views" style="margin: 0px; padding: 0px; font-family: &quot;microsoft yahei&quot;; font-size: 15px; color: rgb(63, 63, 63);"><h1 id="elementui-select组件使用详解" style="margin-top: 0.8em; margin-bottom: 0.8em; font-size: 2.6em; font-family: inherit; padding: 0px;">elementUI select组件使用详解</h1><ul style="margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; list-style-position: initial; list-style-image: initial;"><li style="margin: 0px 0px 0px 40px; padding: 0px; list-style: disc;"><strong>动态生成option选项</strong></li><li style="margin: 0px 0px 0px 40px; padding: 0px; list-style: disc;"><strong>option选项绑定对应的文本值和value值</strong></li><li style="margin: 0px 0px 0px 40px; padding: 0px; list-style: disc;"><strong>作为表单项目，新增、编辑功能</strong></li><li style="margin: 0px 0px 0px 40px; padding: 0px; list-style: disc;"><strong>对选项改变后触发相关事件</strong></li></ul><pre class="prettyprint" style="font-family: &quot;Source Code Pro&quot;, monospace; font-size: 14px; white-space: nowrap; padding: 5px 5px 5px 60px; margin-bottom: 1.1em; line-height: 1.45; background-color: rgba(128, 128, 128, 0.05); border-color: rgba(128, 128, 128, 0.075); border-radius: 0px; position: relative; overflow-y: hidden;"><code class="hljs lasso has-numbering" style="font-family: &quot;Source Code Pro&quot;, monospace; white-space: pre; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; display: block; word-wrap: normal;"><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>div id<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"app"</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
    <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-form</span> :model<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"form"</span>  ref<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"form"</span> label<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-width</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"100px"</span> class<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"demo-ruleForm"</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
        <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-form</span><span class="hljs-attribute" style="margin: 0px; padding: 0px;">-item</span> label<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"姓名选择"</span> prop<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"typeId"</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
            <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-select</span> v<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-model</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"form.typeId"</span> placeholder<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"请选择"</span> @change<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"change"</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
                <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-option</span> v<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-for</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"item in items"</span> :label<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"item.name"</span> :value<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"item.id"</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;&lt;</span>/el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-option</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
            <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>/el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-select</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
        <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>/el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-form</span><span class="hljs-attribute" style="margin: 0px; padding: 0px;">-item</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
        <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-form</span><span class="hljs-attribute" style="margin: 0px; padding: 0px;">-item</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
            <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-button</span> <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">type</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"primary"</span> @click<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"add()"</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>新增<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>/el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-button</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
            <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-button</span> <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">type</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"primary"</span> @click<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"edit()"</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>编辑<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>/el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-button</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
            <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-button</span> @click<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"cancel()"</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>取消<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>/el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-button</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
        <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>/el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-form</span><span class="hljs-attribute" style="margin: 0px; padding: 0px;">-item</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
    <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>/el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-form</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>/div<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span></code><ul class="pre-numbering" style="margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 6px 0px 40px; list-style: none; position: absolute; width: 50px; background-color: rgb(238, 238, 238); top: 0px; left: 0px; border-right: 1px solid rgb(221, 221, 221); text-align: right;"><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">1</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">2</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">3</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">4</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">5</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">6</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">7</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">8</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">9</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">10</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">11</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">12</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">13</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">14</li></ul></pre><pre class="prettyprint" style="font-family: &quot;Source Code Pro&quot;, monospace; font-size: 14px; white-space: nowrap; padding: 5px 5px 5px 60px; margin-bottom: 1.1em; line-height: 1.45; background-color: rgba(128, 128, 128, 0.05); border-color: rgba(128, 128, 128, 0.075); border-radius: 0px; position: relative; overflow-y: hidden;"><code class="hljs xml has-numbering" style="font-family: &quot;Source Code Pro&quot;, monospace; white-space: pre; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; display: block; word-wrap: normal;"><span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">script</span>&gt;</span><span class="javascript" style="margin: 0px; padding: 0px;">
    <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">var</span> vm = <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">new</span> Vue({
        el:<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"#app"</span>,
        mounted(){
            <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">this</span>.getData();
        },
        data:{
            form:{
                typeId:<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">''</span>
            },
            items:[],
            datas:[{name:<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"senbo"</span>,id:<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">'1'</span>},{name:<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"muse"</span>,id:<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">'2'</span>},{name:<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"bobo"</span>,id:<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">'3'</span>}]
        },
        methods:{
            getData:<span class="hljs-function" style="margin: 0px; padding: 0px;"><span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">function</span><span class="hljs-params" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">()</span>{</span>
                <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">this</span>.items = <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">this</span>.datas; 

            },
            add:<span class="hljs-function" style="margin: 0px; padding: 0px;"><span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">function</span><span class="hljs-params" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">()</span>{</span>
                <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">this</span>.form.typeId = <span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">""</span>;
            },
            cancel(){
                 <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">this</span>.form.typeId = <span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">""</span>;   
            },
            change:<span class="hljs-function" style="margin: 0px; padding: 0px;"><span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">function</span><span class="hljs-params" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">()</span>{</span>
                console.log(<span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">this</span>.form.typeId)
            },
            edit:<span class="hljs-function" style="margin: 0px; padding: 0px;"><span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">function</span><span class="hljs-params" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">()</span>{</span>
                <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">this</span>.form.typeId =<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"1"</span>;
            }
        }
    })
</span><span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;/<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">script</span>&gt;</span></code><ul class="pre-numbering" style="margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 6px 0px 40px; list-style: none; position: absolute; width: 50px; background-color: rgb(238, 238, 238); top: 0px; left: 0px; border-right: 1px solid rgb(221, 221, 221); text-align: right;"><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">1</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">2</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">3</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">4</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">5</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">6</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">7</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">8</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">9</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">10</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">11</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">12</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">13</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">14</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">15</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">16</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">17</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">18</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">19</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">20</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">21</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">22</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">23</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">24</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">25</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">26</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">27</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">28</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">29</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">30</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">31</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">32</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">33</li></ul></pre></div></div></article><div class="article_copyright" style="margin: 0px 0px -20px; padding: 0px 20px 30px; border-bottom: 1px solid rgb(228, 235, 244); border-left: 1px solid rgb(228, 235, 244); border-right: 1px solid rgb(228, 235, 244); font-size: 14px; color: rgb(120, 128, 135); clear: both; overflow: hidden; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;">转自http://blog.csdn.net/museions/article/details/77824361</div>
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getLong(created9_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getTimestamp(gtm_cre10_0_) returned 2017-10-12 10:41:07.0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getTimestamp(gtm_mod11_0_) returned 2017-10-12 10:41:07.0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(hits12_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getLong(modifie13_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getString(slug14_0_) returned null
2019-04-15 20:53:36 -2. ResultSet.getInt(status15_0_) returned 1
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getString(tags16_0_) returned null
2019-04-15 20:53:36 -2. ResultSet.getString(title17_0_) returned elementUI select组件使用详解
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getString(type18_0_) returned article
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.next() returned true
2019-04-15 20:53:36 -2. ResultSet.getLong(cid1_0_) returned 117
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(allow_co2_0_) returned 1
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(allow_fe3_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(allow_pi4_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getString(author5_0_) returned bootdo-jpa
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getString(categori6_0_) returned 
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(comments7_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getString(content8_0_) returned <p style="margin-bottom: 24px; color: rgb(14, 14, 14); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 16px; text-align: justify;"><span style="font-weight: 700;">1、合并Js文件和CSS</span></p><p style="margin-bottom: 24px; color: rgb(14, 14, 14); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 16px; text-align: justify;">将JS代码和CSS样式分别合并到一个共享的文件，这样不仅能简化代码，而且在执行JS文件的时候，如果JS文件比较多，就需要进行多次“Get”请求，延长加载速度，将JS文件合并在一起后，自然就减少了Get请求次数，提高了加载速度。</p><p style="margin-bottom: 24px; color: rgb(14, 14, 14); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 16px; text-align: justify;"><span style="font-weight: 700;">2、Sprites图片技术</span></p><p style="margin-bottom: 24px; color: rgb(14, 14, 14); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 16px; text-align: justify;">Spriting是一种网页图片应用处理方式，它是将一个页面涉及到的所有零星图片都包含到一张大图中去，然后利用CSS技术展现出来。这样一来，当访问该页面时，载入的图片就不会像以前那样一幅一幅地慢慢显示出来了，可以减少了整个网页的图片大小，并且利用CSSSprites能很好地减少网页的http请求，从而大大的提高页面的性能。CSSSprites在国内很多人叫css精灵，很早就有了，在很多大型网站都有用到，特别是一些所有页面都存在的图标用得比较多，很好的提升加载速度。</p><p style="margin-bottom: 24px; color: rgb(14, 14, 14); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 16px; text-align: justify;"><span style="font-weight: 700;">3、压缩文本和图片</span></p><p style="margin-bottom: 24px; color: rgb(14, 14, 14); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 16px; text-align: justify;">压缩技术如gzip可以有效减少页面加载的时间。包括HTML，XML，JSON(JavaScript对象符号)，JavaScript和CSS等，压缩率都可以在大小70%左右。文本压缩用得比较多，一般直接在空间开启就行，而图片的压缩就比较随意，很多都是直接上传，其实还有很大的压缩空间。</p><p style="margin-bottom: 24px; color: rgb(14, 14, 14); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 16px; text-align: justify;"><span style="font-weight: 700;">4、延迟显示可见区域外的内容</span></p><p style="margin-bottom: 24px; color: rgb(14, 14, 14); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 16px; text-align: justify;">为了确保用户可以更快地看见可见区域的网页可以延迟加载或展现可见区域外的内容，为了避免页面变形，可以使用占位符标签制定正确的高度和宽度。比如WP的jQueryImage LazyLoad插件就可以在用户停留在第一屏的时候，不加载任何第一屏以下的图片信息，只有当用户把鼠标往下滚动的时候，这些图片才开始加载。这样很明显提升可见区域的加载速度，提高用户体验。</p><p style="margin-bottom: 24px; color: rgb(14, 14, 14); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 16px; text-align: justify;"><span style="font-weight: 700;">5、确保功能图片优先加载</span></p><p style="margin-bottom: 24px; color: rgb(14, 14, 14); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 16px; text-align: justify;">网站主要考虑可用性的重要性，一个功能按钮要提前加载出来，用户进入下载页，一个只需要8s时间的下载花了5s在等待、寻找下载按钮图片，谁能忍受?</p><p style="margin-bottom: 24px; color: rgb(14, 14, 14); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 16px; text-align: justify;"><span style="font-weight: 700;">6、重新布置Call-to-Action按钮</span></p><p style="margin-bottom: 24px; color: rgb(14, 14, 14); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 16px; text-align: justify;">其实这个和上面一条是差不多的，都是从用户体验速度着手，跳过了网页的整体加载速度。速度没变，只是让一些行为按钮提前，Call-to-Action按钮一般习惯设计在页面底部，这样的习惯对于用户来说并不总是好的，购买用户需要等到最下面加载出来才能点击下一步操作。可以调整CTA按钮的位置或使用滑动的图片按钮。很多大型购物网站的加入购物车就是这种类型。</p><p style="margin-bottom: 24px; color: rgb(14, 14, 14); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 16px; text-align: justify;"><span style="font-weight: 700;">7、图片格式优化</span></p><p style="margin-bottom: 24px; color: rgb(14, 14, 14); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 16px; text-align: justify;">不恰当的图像格式是一种极为常见的减慢加载速度的罪魁祸首。正确的图片格式可以让图片缩小数倍，如果保存为最佳格式。可以节省大量带宽，减少处理时间时间，大大加快页面加载速度，这是一种很常见的做法。</p><p style="margin-bottom: 24px; color: rgb(14, 14, 14); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 16px; text-align: justify;"><span style="font-weight: 700;">8、使用 Progressive JPEGs</span></p><p style="margin-bottom: 24px; color: rgb(14, 14, 14); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 16px; text-align: justify;">ProgressiveJPEGs图片是JPEG格式的一个特殊变种，名为“高级JPEG”。在创建高级JPEG文件时，数据是这样安排的：在装入图像时，开始只显示一个模糊的图像，随着数据的装入，图像逐步变得清晰。它相当于交织的GIF格式的图片。高级JPEG主要是考虑到使用调制解调器的慢速网络而设计的，快速网络的使用者通常不会体会到它和正常JPEG格式图片的区别。对于网速比较慢的用户，这无疑有很好的体验。</p><p style="margin-bottom: 24px; color: rgb(14, 14, 14); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 16px; text-align: justify;"><span style="font-weight: 700;">9、精简代码</span></p><p style="margin-bottom: 24px; color: rgb(14, 14, 14); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 16px; text-align: justify;">这个可以说是最直接的一个方法，也是用得比较多的，对网页代码进行瘦身，删除不必要的沉冗代码，比如不必要的空格、换行符、注释等，包括JS代码中的无用代码也需要清除。其中对于注释代码的清除可能有些人存在误区，甚至有的在里面堆砌关键词。</p><p style="margin-bottom: 24px; color: rgb(14, 14, 14); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 16px; text-align: justify;"><span style="font-weight: 700;">10、延迟加载和执行非必要脚本</span></p><p style="margin-bottom: 24px; color: rgb(14, 14, 14); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 16px; text-align: justify;">网页中有很多脚本是在页面完全加载完前都不需要执行的，可以延迟加载和执行非必要脚本。这些脚本可以在onload事件之后执行，避免对网页上重要内容的呈现造成影响。这些脚本可能是你自己网页的甲苯，往往更多的是一些第三方脚本，这样的有很多，比如评论、广告、智能推荐、百度云图、分享等等，这些完全可以等主体内容加载完后再执行。</p><p style="margin-bottom: 24px; color: rgb(14, 14, 14); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 16px; text-align: justify;"><span style="font-weight: 700;">11、使用AJAX</span></p><p style="margin-bottom: 24px; color: rgb(14, 14, 14); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 16px; text-align: justify;">AJAX即“Asynchronous Javascript +XML“，是指一种创建交互式网页应用的网页开发技术。通过在后台与服务器进行少量数据交换，AJAX可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。传统的网页(不使用AJAX)如果需要更新内容，必须重载整个网页面。</p>
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getLong(created9_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getTimestamp(gtm_cre10_0_) returned 2017-09-30 16:13:35.0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getTimestamp(gtm_mod11_0_) returned 2017-09-30 16:13:35.0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(hits12_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getLong(modifie13_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getString(slug14_0_) returned null
2019-04-15 20:53:36 -2. ResultSet.getInt(status15_0_) returned 1
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getString(tags16_0_) returned null
2019-04-15 20:53:36 -2. ResultSet.getString(title17_0_) returned 页面加载速度优化建议
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getString(type18_0_) returned null
2019-04-15 20:53:36 -2. ResultSet.next() returned true
2019-04-15 20:53:36 -2. ResultSet.getLong(cid1_0_) returned 116
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(allow_co2_0_) returned 1
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(allow_fe3_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(allow_pi4_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getString(author5_0_) returned bootdo-jpa
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getString(categori6_0_) returned about
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(comments7_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getString(content8_0_) returned <h1 style="box-sizing: inherit; font-size: 28px; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Liberation Sans&quot;, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Wenquanyi Micro Hei&quot;, &quot;WenQuanYi Zen Hei&quot;, &quot;ST Heiti&quot;, SimHei, &quot;WenQuanYi Zen Hei Sharp&quot;, sans-serif; font-weight: bold; line-height: 1.33em; color: rgb(0, 0, 0); min-height: 1rem; -webkit-font-smoothing: antialiased; cursor: text; position: relative; margin-top: 0px !important;">bootdo-jpa 面向学习型的开源框架</h1><h2 style="box-sizing: inherit; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Liberation Sans&quot;, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Wenquanyi Micro Hei&quot;, &quot;WenQuanYi Zen Hei&quot;, &quot;ST Heiti&quot;, SimHei, &quot;WenQuanYi Zen Hei Sharp&quot;, sans-serif; font-weight: bold; line-height: 1.33em; color: rgb(0, 0, 0); margin-top: 20px; font-size: 24px; padding-bottom: 0.3em; -webkit-font-smoothing: antialiased; cursor: text; position: relative; border-bottom: 1px solid rgb(204, 204, 204);"><a id="平台简介" class="anchor" href="https://gitee.com/huyidao---123/bootdo-jpa#%E5%B9%B3%E5%8F%B0%E7%AE%80%E4%BB%8B" style="box-sizing: inherit; color: rgb(9, 94, 171); word-wrap: break-word; display: block; padding-left: 30px; margin-left: -20px; position: absolute; top: 0px; left: 0px; bottom: 0px; outline: none;"></a>平台简介</h2><p style="box-sizing: inherit; margin-bottom: 15px; line-height: 25px; word-break: break-word; color: rgb(64, 72, 91); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Liberation Sans&quot;, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Wenquanyi Micro Hei&quot;, &quot;WenQuanYi Zen Hei&quot;, &quot;ST Heiti&quot;, SimHei, &quot;WenQuanYi Zen Hei Sharp&quot;, sans-serif; font-size: 15px;">BootDo-JPA是高效率，低封装，面向学习型，面向微服的<strong style="box-sizing: inherit;">开源</strong>Java EE开发框架。</p><p style="box-sizing: inherit; margin-bottom: 15px; line-height: 25px; word-break: break-word; color: rgb(64, 72, 91); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Liberation Sans&quot;, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Wenquanyi Micro Hei&quot;, &quot;WenQuanYi Zen Hei&quot;, &quot;ST Heiti&quot;, SimHei, &quot;WenQuanYi Zen Hei Sharp&quot;, sans-serif; font-size: 15px;">BootDo-JPA是在SpringBoot基础上搭建的一个Java基础开发平台，SpringDataJPA为数据访问层，ApacheShiro为权限授权层，Ehcahe对常用数据进行缓存。</p><p style="box-sizing: inherit; margin-bottom: 15px; line-height: 25px; word-break: break-word; color: rgb(64, 72, 91); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Liberation Sans&quot;, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Wenquanyi Micro Hei&quot;, &quot;WenQuanYi Zen Hei&quot;, &quot;ST Heiti&quot;, SimHei, &quot;WenQuanYi Zen Hei Sharp&quot;, sans-serif; font-size: 15px;">BootDo-JPA主要定位于后台管理系统学习交流，已内置后台管理系统的基础功能和高效的<strong style="box-sizing: inherit;">代码生成</strong>工具， 包括：系统权限组件、数据权限组件、数据字典组件、核心工具组件、视图操作组件、工作流组件、代码生成等。 前端界面风格采用了结构简单、性能优良、页面美观大气的Twitter Bootstrap页面展示框架。 采用分层设计、双重验证、提交数据安全编码、密码加密、访问验证、数据权限验证。 使用Maven做项目管理，提高项目的易开发性、扩展性。</p><p style="box-sizing: inherit; margin-bottom: 15px; line-height: 25px; word-break: break-word; color: rgb(64, 72, 91); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Liberation Sans&quot;, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Wenquanyi Micro Hei&quot;, &quot;WenQuanYi Zen Hei&quot;, &quot;ST Heiti&quot;, SimHei, &quot;WenQuanYi Zen Hei Sharp&quot;, sans-serif; font-size: 15px;">BootDo目前包括以下四大模块，系统管理（SYS）模块、 内容管理（CMS）模块、在线办公（OA）模块、代码生成（GEN）模块。&nbsp;<strong style="box-sizing: inherit;">系统管理模块</strong>&nbsp;，包括企业组织架构（用户管理、机构管理、区域管理）、 菜单管理、角色权限管理、字典管理等功能；&nbsp;<strong style="box-sizing: inherit;">内容管理模块</strong>&nbsp;，包括内容管理（文章、链接），栏目管理、站点管理、 公共留言、文件管理、前端网站展示等功能；&nbsp;<strong style="box-sizing: inherit;">在线办公模块</strong>&nbsp;，提供简单的请假流程实例；<strong style="box-sizing: inherit;">代码生成模块</strong>&nbsp;，完成重复的工作。</p><p style="box-sizing: inherit; margin-bottom: 15px; line-height: 25px; word-break: break-word; color: rgb(64, 72, 91); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Liberation Sans&quot;, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Wenquanyi Micro Hei&quot;, &quot;WenQuanYi Zen Hei&quot;, &quot;ST Heiti&quot;, SimHei, &quot;WenQuanYi Zen Hei Sharp&quot;, sans-serif; font-size: 15px;">bootdo-jpa 提供了常用工具进行封装，包括日志工具、缓存工具、服务器端验证、数据字典、当前组织机构数据 （用户、机构、区域）以及其它常用小工具等。另外还提供一个强大的在线&nbsp;<strong style="box-sizing: inherit;">代码生成</strong>&nbsp;工具。</p><h2 style="box-sizing: inherit; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Liberation Sans&quot;, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Wenquanyi Micro Hei&quot;, &quot;WenQuanYi Zen Hei&quot;, &quot;ST Heiti&quot;, SimHei, &quot;WenQuanYi Zen Hei Sharp&quot;, sans-serif; font-weight: bold; line-height: 1.33em; color: rgb(0, 0, 0); margin-top: 20px; font-size: 24px; padding-bottom: 0.3em; -webkit-font-smoothing: antialiased; cursor: text; position: relative; border-bottom: 1px solid rgb(204, 204, 204);"><a id="内置功能" class="anchor" href="https://gitee.com/huyidao---123/bootdo-jpa#%E5%86%85%E7%BD%AE%E5%8A%9F%E8%83%BD" style="box-sizing: inherit; color: rgb(9, 94, 171); word-wrap: break-word; display: block; padding-left: 30px; margin-left: -20px; position: absolute; top: 0px; left: 0px; bottom: 0px; outline: none;"></a>内置功能</h2><ol class="task-list" style="box-sizing: inherit; margin-bottom: 15px; line-height: 24px; padding-left: 30px; color: rgb(64, 72, 91); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Liberation Sans&quot;, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Wenquanyi Micro Hei&quot;, &quot;WenQuanYi Zen Hei&quot;, &quot;ST Heiti&quot;, SimHei, &quot;WenQuanYi Zen Hei Sharp&quot;, sans-serif; font-size: 15px;"><li style="box-sizing: inherit; list-style-type: decimal;">用户管理：用户是系统操作者，该功能主要完成系统用户配置。</li><li style="box-sizing: inherit; list-style-type: decimal;">机构管理：配置系统组织机构（公司、部门、小组），树结构展现，可随意调整上下级。</li><li style="box-sizing: inherit; list-style-type: decimal;">区域管理：系统城市区域模型，如：国家、省市、地市、区县的维护。</li><li style="box-sizing: inherit; list-style-type: decimal;">菜单管理：配置系统菜单，操作权限，按钮权限标识等。</li><li style="box-sizing: inherit; list-style-type: decimal;">角色管理：角色菜单权限分配、设置角色按机构进行数据范围权限划分。</li><li style="box-sizing: inherit; list-style-type: decimal;">字典管理：对系统中经常使用的一些较为固定的数据进行维护，如：是否、男女、类别、级别等。</li><li style="box-sizing: inherit; list-style-type: decimal;">操作日志：系统正常操作日志记录和查询；系统异常信息日志记录和查询。</li><li style="box-sizing: inherit; list-style-type: decimal;">连接池监视：监视当期系统数据库连接池状态，可进行分析SQL找出系统性能瓶颈。</li><li style="box-sizing: inherit; list-style-type: decimal;">工作流引擎：实现业务工单流转、在线流程设计器。</li></ol><h2 style="box-sizing: inherit; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Liberation Sans&quot;, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Wenquanyi Micro Hei&quot;, &quot;WenQuanYi Zen Hei&quot;, &quot;ST Heiti&quot;, SimHei, &quot;WenQuanYi Zen Hei Sharp&quot;, sans-serif; font-weight: bold; line-height: 1.33em; color: rgb(0, 0, 0); margin-top: 20px; font-size: 24px; padding-bottom: 0.3em; -webkit-font-smoothing: antialiased; cursor: text; position: relative; border-bottom: 1px solid rgb(204, 204, 204);"><a id="技术选型" class="anchor" href="https://gitee.com/huyidao---123/bootdo-jpa#%E6%8A%80%E6%9C%AF%E9%80%89%E5%9E%8B" style="box-sizing: inherit; color: rgb(9, 94, 171); word-wrap: break-word; display: block; padding-left: 30px; margin-left: -20px; position: absolute; top: 0px; left: 0px; bottom: 0px; outline: none;"></a>技术选型</h2><p style="box-sizing: inherit; margin-bottom: 15px; line-height: 25px; word-break: break-word; color: rgb(64, 72, 91); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Liberation Sans&quot;, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Wenquanyi Micro Hei&quot;, &quot;WenQuanYi Zen Hei&quot;, &quot;ST Heiti&quot;, SimHei, &quot;WenQuanYi Zen Hei Sharp&quot;, sans-serif; font-size: 15px;">1、后端</p><ul class="task-list" style="box-sizing: inherit; margin-bottom: 15px; line-height: 24px; padding-left: 30px; color: rgb(64, 72, 91); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Liberation Sans&quot;, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Wenquanyi Micro Hei&quot;, &quot;WenQuanYi Zen Hei&quot;, &quot;ST Heiti&quot;, SimHei, &quot;WenQuanYi Zen Hei Sharp&quot;, sans-serif; font-size: 15px;"><li style="box-sizing: inherit; list-style-type: initial;">核心框架：Spring Boot</li><li style="box-sizing: inherit; list-style-type: initial;">安全框架：Apache Shiro</li><li style="box-sizing: inherit; list-style-type: initial;">模板引擎：Thymeleaf</li><li style="box-sizing: inherit; list-style-type: initial;">持久层框架：SpringDataJPA</li><li style="box-sizing: inherit; list-style-type: initial;">数据库连接池：Alibaba Druid</li><li style="box-sizing: inherit; list-style-type: initial;">缓存框架：Ehcache 、Redis</li><li style="box-sizing: inherit; list-style-type: initial;">日志管理：SLF4J</li><li style="box-sizing: inherit; list-style-type: initial;">工具类：Apache Commons、Jackson 、Xstream 1.4、Dozer 5.3、POI 3.9</li></ul><p style="box-sizing: inherit; margin-bottom: 15px; line-height: 25px; word-break: break-word; color: rgb(64, 72, 91); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Liberation Sans&quot;, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Wenquanyi Micro Hei&quot;, &quot;WenQuanYi Zen Hei&quot;, &quot;ST Heiti&quot;, SimHei, &quot;WenQuanYi Zen Hei Sharp&quot;, sans-serif; font-size: 15px;">2、前端</p><ul class="task-list" style="box-sizing: inherit; margin-bottom: 15px; line-height: 24px; padding-left: 30px; color: rgb(64, 72, 91); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Liberation Sans&quot;, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Wenquanyi Micro Hei&quot;, &quot;WenQuanYi Zen Hei&quot;, &quot;ST Heiti&quot;, SimHei, &quot;WenQuanYi Zen Hei Sharp&quot;, sans-serif; font-size: 15px;"><li style="box-sizing: inherit; list-style-type: initial;">JS框架：jQuery</li><li style="box-sizing: inherit; list-style-type: initial;">客户端验证：JQuery Validation</li><li style="box-sizing: inherit; list-style-type: initial;">富文本在线编辑：summernote</li><li style="box-sizing: inherit; list-style-type: initial;">在线文件管理：CKFinder</li><li style="box-sizing: inherit; list-style-type: initial;">数据表格：bootstrapTable</li><li style="box-sizing: inherit; list-style-type: initial;">弹出层：layer</li><li style="box-sizing: inherit; list-style-type: initial;">树结构控件：jsTree</li></ul><p style="box-sizing: inherit; margin-bottom: 15px; line-height: 25px; word-break: break-word; color: rgb(64, 72, 91); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Liberation Sans&quot;, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Wenquanyi Micro Hei&quot;, &quot;WenQuanYi Zen Hei&quot;, &quot;ST Heiti&quot;, SimHei, &quot;WenQuanYi Zen Hei Sharp&quot;, sans-serif; font-size: 15px;">4、平台</p><ul class="task-list" style="box-sizing: inherit; margin-bottom: 15px; line-height: 24px; padding-left: 30px; color: rgb(64, 72, 91); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Liberation Sans&quot;, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Wenquanyi Micro Hei&quot;, &quot;WenQuanYi Zen Hei&quot;, &quot;ST Heiti&quot;, SimHei, &quot;WenQuanYi Zen Hei Sharp&quot;, sans-serif; font-size: 15px;"><li style="box-sizing: inherit; list-style-type: initial;">服务器中间件：SpringBoot内置</li><li style="box-sizing: inherit; list-style-type: initial;">数据库支持：目前仅提供MySql数据库的支持，但不限于数据库，平台留有其它数据库支持接口， 你可以很方便的更改为其它数据库，如：SqlServer 2008、MySql 5.5、H2等</li><li style="box-sizing: inherit; list-style-type: initial;">开发环境：Java、Eclipse Java EE 、Maven 、Git</li></ul><h2 style="box-sizing: inherit; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Liberation Sans&quot;, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Wenquanyi Micro Hei&quot;, &quot;WenQuanYi Zen Hei&quot;, &quot;ST Heiti&quot;, SimHei, &quot;WenQuanYi Zen Hei Sharp&quot;, sans-serif; font-weight: bold; line-height: 1.33em; color: rgb(0, 0, 0); margin-top: 20px; font-size: 24px; padding-bottom: 0.3em; -webkit-font-smoothing: antialiased; cursor: text; position: relative; border-bottom: 1px solid rgb(204, 204, 204);"><a id="安全考虑" class="anchor" href="https://gitee.com/huyidao---123/bootdo-jpa#%E5%AE%89%E5%85%A8%E8%80%83%E8%99%91" style="box-sizing: inherit; color: rgb(9, 94, 171); word-wrap: break-word; display: block; padding-left: 30px; margin-left: -20px; position: absolute; top: 0px; left: 0px; bottom: 0px; outline: none;"></a>安全考虑</h2><ol class="task-list" style="box-sizing: inherit; margin-bottom: 15px; line-height: 24px; padding-left: 30px; color: rgb(64, 72, 91); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Liberation Sans&quot;, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Wenquanyi Micro Hei&quot;, &quot;WenQuanYi Zen Hei&quot;, &quot;ST Heiti&quot;, SimHei, &quot;WenQuanYi Zen Hei Sharp&quot;, sans-serif; font-size: 15px;"><li style="box-sizing: inherit; list-style-type: decimal;">开发语言：系统采用Java 语言开发，具有卓越的通用性、高效性、平台移植性和安全性。</li><li style="box-sizing: inherit; list-style-type: decimal;">分层设计：（数据库层，数据访问层，业务逻辑层，展示层）层次清楚，低耦合，各层必须通过接口才能接入并进行参数校验（如：在展示层不可直接操作数据库），保证数据操作的安全。</li><li style="box-sizing: inherit; list-style-type: decimal;">双重验证：用户表单提交双验证：包括服务器端验证及客户端验证，防止用户通过浏览器恶意修改（如不可写文本域、隐藏变量篡改、上传非法文件等），跳过客户端验证操作数据库。</li><li style="box-sizing: inherit; list-style-type: decimal;">安全编码：用户表单提交所有数据，在服务器端都进行安全编码，防止用户提交非法脚本及SQL注入获取敏感数据等，确保数据安全。</li><li style="box-sizing: inherit; list-style-type: decimal;">密码加密：登录用户密码进行SHA1散列加密，此加密方法是不可逆的。保证密文泄露后的安全问题。</li><li style="box-sizing: inherit; list-style-type: decimal;">强制访问：系统对所有管理端链接都进行用户身份权限验证，防止用户直接填写url进行访问。</li></ol><h2 style="box-sizing: inherit; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Liberation Sans&quot;, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Wenquanyi Micro Hei&quot;, &quot;WenQuanYi Zen Hei&quot;, &quot;ST Heiti&quot;, SimHei, &quot;WenQuanYi Zen Hei Sharp&quot;, sans-serif; font-weight: bold; line-height: 1.33em; color: rgb(0, 0, 0); margin-top: 20px; font-size: 24px; padding-bottom: 0.3em; -webkit-font-smoothing: antialiased; cursor: text; position: relative; border-bottom: 1px solid rgb(204, 204, 204);"><a id="演示地址" class="anchor" href="https://gitee.com/huyidao---123/bootdo-jpa#%E6%BC%94%E7%A4%BA%E5%9C%B0%E5%9D%80" style="box-sizing: inherit; color: rgb(9, 94, 171); word-wrap: break-word; display: block; padding-left: 30px; margin-left: -20px; position: absolute; top: 0px; left: 0px; bottom: 0px; outline: none;"></a>演示地址</h2><h6 style="box-sizing: inherit; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Liberation Sans&quot;, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Wenquanyi Micro Hei&quot;, &quot;WenQuanYi Zen Hei&quot;, &quot;ST Heiti&quot;, SimHei, &quot;WenQuanYi Zen Hei Sharp&quot;, sans-serif; font-weight: bold; color: rgb(119, 119, 119); margin-top: 20px; font-size: 14px; -webkit-font-smoothing: antialiased; cursor: text; position: relative;"><a id="布嘟开源wwwbootdocom" class="anchor" href="https://gitee.com/huyidao---123/bootdo-jpa#%E5%B8%83%E5%98%9F%E5%BC%80%E6%BA%90wwwbootdocom" style="box-sizing: inherit; color: rgb(9, 94, 171); word-wrap: break-word; display: block; padding-left: 30px; margin-left: -20px; position: absolute; top: 0px; left: 0px; bottom: 0px; outline: none;"></a>布嘟开源<a href="http://www.bootdo.com./blog" style="box-sizing: inherit; color: rgb(9, 94, 171); word-wrap: break-word;">www.bootdo.com</a></h6><h2 style="box-sizing: inherit; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Liberation Sans&quot;, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Wenquanyi Micro Hei&quot;, &quot;WenQuanYi Zen Hei&quot;, &quot;ST Heiti&quot;, SimHei, &quot;WenQuanYi Zen Hei Sharp&quot;, sans-serif; font-weight: bold; line-height: 1.33em; color: rgb(0, 0, 0); margin-top: 20px; font-size: 24px; padding-bottom: 0.3em; -webkit-font-smoothing: antialiased; cursor: text; position: relative; border-bottom: 1px solid rgb(204, 204, 204);"><a id="交流反馈" class="anchor" href="https://gitee.com/huyidao---123/bootdo-jpa#%E4%BA%A4%E6%B5%81%E5%8F%8D%E9%A6%88" style="box-sizing: inherit; color: rgb(9, 94, 171); word-wrap: break-word; display: block; padding-left: 30px; margin-left: -20px; position: absolute; top: 0px; left: 0px; bottom: 0px; outline: none;"></a>交流反馈</h2><h2 style="box-sizing: inherit; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Liberation Sans&quot;, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Wenquanyi Micro Hei&quot;, &quot;WenQuanYi Zen Hei&quot;, &quot;ST Heiti&quot;, SimHei, &quot;WenQuanYi Zen Hei Sharp&quot;, sans-serif; font-weight: bold; line-height: 1.33em; color: rgb(0, 0, 0); margin-top: 20px; font-size: 24px; padding-bottom: 0.3em; -webkit-font-smoothing: antialiased; cursor: text; position: relative; border-bottom: 1px solid rgb(204, 204, 204);"><a id="qq群-222702741" class="anchor" href="https://gitee.com/huyidao---123/bootdo-jpa#qq%E7%BE%A4-222702741" style="box-sizing: inherit; color: rgb(9, 94, 171); word-wrap: break-word; display: block; padding-left: 30px; margin-left: -20px; position: absolute; top: 0px; left: 0px; bottom: 0px; outline: none;"></a>QQ群 222702741</h2><h2 style="box-sizing: inherit; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Liberation Sans&quot;, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Wenquanyi Micro Hei&quot;, &quot;WenQuanYi Zen Hei&quot;, &quot;ST Heiti&quot;, SimHei, &quot;WenQuanYi Zen Hei Sharp&quot;, sans-serif; font-weight: bold; line-height: 1.33em; color: rgb(0, 0, 0); margin-top: 20px; font-size: 24px; padding-bottom: 0.3em; -webkit-font-smoothing: antialiased; cursor: text; position: relative; border-bottom: 1px solid rgb(204, 204, 204);"><a id="版权声明" class="anchor" href="https://gitee.com/huyidao---123/bootdo-jpa#%E7%89%88%E6%9D%83%E5%A3%B0%E6%98%8E" style="box-sizing: inherit; color: rgb(9, 94, 171); word-wrap: break-word; display: block; padding-left: 30px; margin-left: -20px; position: absolute; top: 0px; left: 0px; bottom: 0px; outline: none;"></a>版权声明</h2><p style="box-sizing: inherit; margin-bottom: 15px; line-height: 25px; word-break: break-word; color: rgb(64, 72, 91); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Liberation Sans&quot;, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Wenquanyi Micro Hei&quot;, &quot;WenQuanYi Zen Hei&quot;, &quot;ST Heiti&quot;, SimHei, &quot;WenQuanYi Zen Hei Sharp&quot;, sans-serif; font-size: 15px;">本软件使用&nbsp;<a href="http://www.apache.org/licenses/LICENSE-2.0" style="box-sizing: inherit; color: rgb(9, 94, 171); word-wrap: break-word;">Apache License 2.0</a>&nbsp;协议，请严格遵照协议内容</p><ul class="task-list" style="box-sizing: inherit; line-height: 24px; padding-left: 30px; color: rgb(64, 72, 91); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Liberation Sans&quot;, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, &quot;Hiragino Sans GB&quot;, &quot;Wenquanyi Micro Hei&quot;, &quot;WenQuanYi Zen Hei&quot;, &quot;ST Heiti&quot;, SimHei, &quot;WenQuanYi Zen Hei Sharp&quot;, sans-serif; font-size: 15px; margin-bottom: 0px !important;"><li class="task-list-item" style="box-sizing: inherit; list-style-type: initial;"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled="" style="margin-top: 0px; cursor: default; transition: border 0.2s linear, box-shadow 0.2s linear; box-shadow: rgba(0, 0, 0, 0.1) 0px 1px 3px inset; vertical-align: middle;">&nbsp;注：已上内容为整体规化，部分功能还在实现中</li></ul>
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getLong(created9_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getTimestamp(gtm_cre10_0_) returned 2017-09-30 14:43:09.0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getTimestamp(gtm_mod11_0_) returned 2017-09-30 14:43:09.0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(hits12_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getLong(modifie13_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getString(slug14_0_) returned null
2019-04-15 20:53:36 -2. ResultSet.getInt(status15_0_) returned 1
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getString(tags16_0_) returned null
2019-04-15 20:53:36 -2. ResultSet.getString(title17_0_) returned about
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getString(type18_0_) returned null
2019-04-15 20:53:36 -2. ResultSet.next() returned true
2019-04-15 20:53:36 -2. ResultSet.getLong(cid1_0_) returned 115
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(allow_co2_0_) returned 1
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(allow_fe3_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(allow_pi4_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getString(author5_0_) returned bootdo-jpa
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getString(categori6_0_) returned communication
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(comments7_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getString(content8_0_) returned <h2 style="color: rgb(103, 106, 108);"><span style="font-family: Times; font-size: 17.5px; font-weight: bold;"><a href="https://jq.qq.com/?_wv=1027&amp;k=5ijQ0Dq" target="_blank" style="color: rgb(42, 100, 150); text-decoration-line: underline; outline: 0px;">qq群 222702741</a></span></h2>
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getLong(created9_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getTimestamp(gtm_cre10_0_) returned 2017-09-30 14:43:30.0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getTimestamp(gtm_mod11_0_) returned 2017-09-30 14:43:30.0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(hits12_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getLong(modifie13_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getString(slug14_0_) returned null
2019-04-15 20:53:36 -2. ResultSet.getInt(status15_0_) returned 1
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getString(tags16_0_) returned null
2019-04-15 20:53:36 -2. ResultSet.getString(title17_0_) returned communication
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getString(type18_0_) returned null
2019-04-15 20:53:36 -2. ResultSet.next() returned true
2019-04-15 20:53:36 -2. ResultSet.getLong(cid1_0_) returned 112
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(allow_co2_0_) returned 1
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(allow_fe3_0_) returned 1
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(allow_pi4_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getString(author5_0_) returned bootdo-jpa
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getString(categori6_0_) returned null
2019-04-15 20:53:36 -2. ResultSet.getInt(comments7_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getString(content8_0_) returned <p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;">在Spring boot项目的实际开发中，我们有时需要项目服务启动时加载一些数据或预先完成某些动作。为了解决这样的问题，Spring&nbsp;boot 为我们提供了一个方法：通过实现接口 CommandLineRunner 来实现这样的需求。</p><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;">实现方式：只需要一个类即可，无需其他配置。&nbsp;</p><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;">实现步骤：</p><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;">1.创建实现接口 CommandLineRunner 的类 MyStartupRunnerTest</p><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;"></p><div class="dp-highlighter bg_java" style="font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px; background-color: rgb(231, 229, 220); width: 936.531px; overflow-x: auto; overflow-y: hidden; padding-top: 1px; position: relative; border-color: rgb(204, 204, 204); color: rgb(85, 85, 85); margin: 18px 0px !important;"><div class="bar" style="padding-left: 45px;"><div class="tools" style="padding: 3px 8px 10px 10px; font-stretch: normal; font-size: 9px; line-height: normal; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; color: silver; background-color: rgb(248, 248, 248); border-left: 3px solid rgb(108, 226, 108); border-right: 1px solid rgb(231, 229, 220);"><strong>[java]</strong>&nbsp;<a target="_blank" href="http://blog.csdn.net/mimica247706624/article/details/58596490#" class="ViewSource" title="view plain" style="background-image: url(&quot;images/default/ico_plain.gif&quot;); background-position: left top; background-repeat: no-repeat; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">view plain</a>&nbsp;<a target="_blank" href="http://blog.csdn.net/mimica247706624/article/details/58596490#" class="CopyToClipboard" title="copy" style="background-image: url(&quot;images/default/ico_copy.gif&quot;); background-position: left top; background-repeat: no-repeat; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">copy</a><div style="position: absolute; left: 559px; top: 655px; width: 18px; height: 18px; z-index: 99;"></div><div style="position: absolute; left: 721px; top: 723px; width: 18px; height: 18px; z-index: 99;"></div></div></div><ol start="1" class="dp-j" style="padding: 0px; border: none; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-right: 0px !important; margin-bottom: 1px !important; margin-left: 45px !important;"><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">package</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;com.energy;&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">import</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;org.springframework.boot.CommandLineRunner;&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">import</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;org.springframework.core.annotation.Order;&nbsp;&nbsp;</span></span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">import</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;org.springframework.stereotype.Component;&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="comment" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;">/**</span>&nbsp;</span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="comment" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;">&nbsp;*&nbsp;Created&nbsp;by&nbsp;CavanLiu&nbsp;on&nbsp;2017/2/28&nbsp;0028.</span>&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="comment" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;">&nbsp;*/</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Component</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Order</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">(value=</span><span class="number" style="margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;">1</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">)</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">public</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">class</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;MyStartupRunnerTest&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">implements</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;CommandLineRunner&nbsp;&nbsp;</span></span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">{&nbsp;&nbsp;</span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Override</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">public</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">void</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;run(String...&nbsp;args)&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">throws</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;Exception&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class="string" style="margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;">"&gt;&gt;&gt;&gt;This&nbsp;is&nbsp;MyStartupRunnerTest&nbsp;Order=1.&nbsp;Only&nbsp;testing&nbsp;CommandLineRunner...&lt;&lt;&lt;&lt;"</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">);&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">}&nbsp;&nbsp;</span></li></ol></div><p style="margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: Arial; font-size: 14px;"></p><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;">2.创建实现接口CommandLineRunner 的类 MyStartupRunnerTest2</p><div class="dp-highlighter bg_java" style="font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px; background-color: rgb(231, 229, 220); width: 936.531px; overflow-x: auto; overflow-y: hidden; padding-top: 1px; position: relative; border-color: rgb(204, 204, 204); color: rgb(85, 85, 85); margin: 18px 0px !important;"><div class="bar" style="padding-left: 45px;"><div class="tools" style="padding: 3px 8px 10px 10px; font-stretch: normal; font-size: 9px; line-height: normal; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; color: silver; background-color: rgb(248, 248, 248); border-left: 3px solid rgb(108, 226, 108); border-right: 1px solid rgb(231, 229, 220);"><strong>[java]</strong>&nbsp;<a target="_blank" href="http://blog.csdn.net/mimica247706624/article/details/58596490#" class="ViewSource" title="view plain" style="background-image: url(&quot;images/default/ico_plain.gif&quot;); background-position: left top; background-repeat: no-repeat; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">view plain</a>&nbsp;<a target="_blank" href="http://blog.csdn.net/mimica247706624/article/details/58596490#" class="CopyToClipboard" title="copy" style="background-image: url(&quot;images/default/ico_copy.gif&quot;); background-position: left top; background-repeat: no-repeat; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">copy</a><div style="position: absolute; left: 559px; top: 1094px; width: 18px; height: 18px; z-index: 99;"></div><div style="position: absolute; left: 721px; top: 1160px; width: 18px; height: 18px; z-index: 99;"></div></div></div><ol start="1" class="dp-j" style="padding: 0px; border: none; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-right: 0px !important; margin-bottom: 1px !important; margin-left: 45px !important;"><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">package</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;com.energy;&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">import</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;org.springframework.boot.CommandLineRunner;&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">import</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;org.springframework.core.annotation.Order;&nbsp;&nbsp;</span></span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">import</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;org.springframework.stereotype.Component;&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="comment" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;">/**</span>&nbsp;</span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="comment" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;">&nbsp;*&nbsp;Created&nbsp;by&nbsp;CavanLiu&nbsp;on&nbsp;2017/2/28&nbsp;0028.</span>&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="comment" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;">&nbsp;*/</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Component</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Order</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">(value=</span><span class="number" style="margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;">2</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">)</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">public</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">class</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;MyStartupRunnerTest2&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">implements</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;CommandLineRunner&nbsp;&nbsp;</span></span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">{&nbsp;&nbsp;</span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Override</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">public</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">void</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;run(String...&nbsp;args)&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">throws</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;Exception&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class="string" style="margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;">"&gt;&gt;&gt;&gt;This&nbsp;is&nbsp;MyStartupRunnerTest&nbsp;Order=2.&nbsp;Only&nbsp;testing&nbsp;CommandLineRunner...&lt;&lt;&lt;&lt;"</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">);&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">}&nbsp;&nbsp;</span></li></ol></div><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;">3.启动Spring boot后查看控制台输出信息，如下所示：</p><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;"></p><div class="dp-highlighter bg_plain" style="font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px; background-color: rgb(231, 229, 220); width: 936.531px; overflow-x: auto; overflow-y: hidden; padding-top: 1px; position: relative; border-color: rgb(204, 204, 204); color: rgb(85, 85, 85); margin: 18px 0px !important;"><div class="bar" style="padding-left: 45px;"><div class="tools" style="padding: 3px 8px 10px 10px; font-stretch: normal; font-size: 9px; line-height: normal; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; color: silver; background-color: rgb(248, 248, 248); border-left: 3px solid rgb(108, 226, 108); border-right: 1px solid rgb(231, 229, 220);"><strong>[plain]</strong>&nbsp;<a target="_blank" href="http://blog.csdn.net/mimica247706624/article/details/58596490#" class="ViewSource" title="view plain" style="background-image: url(&quot;images/default/ico_plain.gif&quot;); background-position: left top; background-repeat: no-repeat; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">view plain</a>&nbsp;<a target="_blank" href="http://blog.csdn.net/mimica247706624/article/details/58596490#" class="CopyToClipboard" title="copy" style="background-image: url(&quot;images/default/ico_copy.gif&quot;); background-position: left top; background-repeat: no-repeat; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">copy</a><div style="position: absolute; left: 563px; top: 1532px; width: 18px; height: 18px; z-index: 99;"></div><div style="position: absolute; left: 725px; top: 1597px; width: 18px; height: 18px; z-index: 99;"></div></div></div><ol start="1" style="padding: 0px; border: none; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-right: 0px !important; margin-bottom: 1px !important; margin-left: 45px !important;"><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&gt;&gt;&gt;&gt;This&nbsp;is&nbsp;MyStartupRunnerTest&nbsp;Order=1.&nbsp;Only&nbsp;testing&nbsp;CommandLineRunner...&lt;&lt;&lt;&lt;&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&gt;&gt;&gt;&gt;This&nbsp;is&nbsp;MyStartupRunnerTest2&nbsp;Order=2.&nbsp;Only&nbsp;testing&nbsp;CommandLineRunner...&lt;&lt;&lt;&lt;&nbsp;&nbsp;</span></li></ol></div><p style="margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: Arial; font-size: 14px;"></p><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;">4.Application启动类代码略。</p><p><span style="color: rgb(85, 85, 85); font-family: Arial; font-size: 14px;">说明：CommandLineRunner接口的运行顺序是依据@Order注解的value由小到大执行，即value值越小优先级越高。</span><br></p>
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getLong(created9_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getTimestamp(gtm_cre10_0_) returned 2017-09-26 15:18:15.0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getTimestamp(gtm_mod11_0_) returned 2017-09-26 15:18:15.0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(hits12_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getLong(modifie13_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getString(slug14_0_) returned null
2019-04-15 20:53:36 -2. ResultSet.getInt(status15_0_) returned 1
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getString(tags16_0_) returned null
2019-04-15 20:53:36 -2. ResultSet.getString(title17_0_) returned  SpringBoot 在启动时运行代码
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getString(type18_0_) returned article
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.next() returned true
2019-04-15 20:53:36 -2. ResultSet.getLong(cid1_0_) returned 111
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(allow_co2_0_) returned 1
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(allow_fe3_0_) returned 1
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(allow_pi4_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getString(author5_0_) returned bootdo-jpa
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getString(categori6_0_) returned null
2019-04-15 20:53:36 -2. ResultSet.getInt(comments7_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getString(content8_0_) returned <ol style="color: rgb(63, 63, 63); font-family: &quot;microsoft yahei&quot;; font-size: 15px;"><li><p style="margin-bottom: 1.1em; padding: 0px;">背景介绍&nbsp;<br>在springmvc框架中，前台传入到后台的form会经过springmvc自动封装到pojo类中，后台接受的时候可以在参数内直接接受这个java类。</p></li><li><p style="margin-bottom: 1.1em; padding: 0px;">传参&nbsp;<br>通常情况下，前台的表单的类型诸如int,string等，都会根据pojo中字段的类型自动转换。所以为我们省去了不少麻烦，但很可惜其中不包括日期类型。</p></li><li><p style="margin-bottom: 1.1em; padding: 0px;">原因&nbsp;<br>因为日期的格式多种多样，spring自身不适合对其进行封装。好在spring给出了便捷的方法给我们自己转换数据类型。</p></li><li><p style="margin-bottom: 1.1em; padding: 0px;">具体实现</p></li></ol><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(63, 63, 63); font-family: &quot;microsoft yahei&quot;; font-size: 15px;">在controller层中，加入以下代码段</p><pre class="prettyprint" name="code" style="white-space: nowrap; position: relative; overflow-y: hidden; margin-bottom: 1.1em; font-family: &quot;Source Code Pro&quot;, monospace; padding: 5px 5px 5px 60px; font-size: 14px; line-height: 1.45; background-color: rgba(128, 128, 128, 0.05); border-width: 0px; border-color: rgb(136, 136, 136); border-radius: 0px;"><code class="hljs java has-numbering" style="display: block; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; font-family: &quot;Source Code Pro&quot;, monospace; white-space: pre; word-wrap: normal;"><span class="hljs-annotation" style="color: rgb(155, 133, 157);">@InitBinder</span>
<span class="hljs-keyword" style="color: rgb(0, 0, 136);">public</span> <span class="hljs-keyword" style="color: rgb(0, 0, 136);">void</span> <span class="hljs-title">initBinder</span>(WebDataBinder binder) {
    SimpleDateFormat dateFormat = <span class="hljs-keyword" style="color: rgb(0, 0, 136);">new</span> SimpleDateFormat(<span class="hljs-string" style="color: rgb(0, 136, 0);">"yyyy-MM-dd"</span>);
    dateFormat.setLenient(<span class="hljs-keyword" style="color: rgb(0, 0, 136);">false</span>);
    binder.registerCustomEditor(Date.class, <span class="hljs-keyword" style="color: rgb(0, 0, 136);">new</span> CustomDateEditor(dateFormat, <span class="hljs-keyword" style="color: rgb(0, 0, 136);">true</span>));<span class="hljs-comment" style="color: rgb(136, 0, 0);">//true:允许输入空值，false:不能为空值</span>
}</code><ul class="pre-numbering" style="position: absolute; width: 50px; background-color: rgb(238, 238, 238); top: 0px; left: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 6px 0px 40px; border-right: 1px solid rgb(221, 221, 221); list-style: none; text-align: right;"><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">1</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">2</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">3</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">4</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">5</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">6</li></ul></pre><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(63, 63, 63); font-family: &quot;microsoft yahei&quot;; font-size: 15px;">可以解决这个问题。但是这个时候Date类型的参数是null的话，还是会报错。采用另外一种方式则更好，为null也不会报错，就是把请求参数封装为一个vo类，在对应的类属性上加上注解，这样</p><pre class="prettyprint" name="code" style="white-space: nowrap; position: relative; overflow-y: hidden; margin-bottom: 1.1em; font-family: &quot;Source Code Pro&quot;, monospace; padding: 5px 5px 5px 60px; font-size: 14px; line-height: 1.45; background-color: rgba(128, 128, 128, 0.05); border-width: 0px; border-color: rgb(136, 136, 136); border-radius: 0px;"><code class="hljs java has-numbering" style="display: block; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; font-family: &quot;Source Code Pro&quot;, monospace; white-space: pre; word-wrap: normal;"><span class="hljs-annotation" style="color: rgb(155, 133, 157);">@DateTimeFormat</span>(iso = ISO.DATE_TIME, pattern = <span class="hljs-string" style="color: rgb(0, 136, 0);">"w:yyyy"</span>)
<span class="hljs-keyword" style="color: rgb(0, 0, 136);">private</span> Date startTime;
或者
<span class="hljs-annotation" style="color: rgb(155, 133, 157);">@DateTimeFormat</span>(pattern=<span class="hljs-string" style="color: rgb(0, 136, 0);">"yyyy-MM-dd HH:mm:ss"</span>)
<span class="hljs-keyword" style="color: rgb(0, 0, 136);">private</span> Date lastLoginDate;</code><ul class="pre-numbering" style="position: absolute; width: 50px; background-color: rgb(238, 238, 238); top: 0px; left: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 6px 0px 40px; border-right: 1px solid rgb(221, 221, 221); list-style: none; text-align: right;"><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">1</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">2</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">3</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">4</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">5</li></ul></pre><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(63, 63, 63); font-family: &quot;microsoft yahei&quot;; font-size: 15px;">另外如果使用验证框架，方法参数这样写(@Valid XxxParam param, BindingResult binding) ，就能直接通过BindingResult得到验证结果了。</p>
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getLong(created9_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getTimestamp(gtm_cre10_0_) returned 2017-09-25 21:34:51.0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getTimestamp(gtm_mod11_0_) returned 2017-09-25 21:34:51.0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(hits12_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getLong(modifie13_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getString(slug14_0_) returned null
2019-04-15 20:53:36 -2. ResultSet.getInt(status15_0_) returned 1
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getString(tags16_0_) returned null
2019-04-15 20:53:36 -2. ResultSet.getString(title17_0_) returned Springmvc提交日期类型参数
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getString(type18_0_) returned article
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.next() returned true
2019-04-15 20:53:36 -2. ResultSet.getLong(cid1_0_) returned 110
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(allow_co2_0_) returned 1
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(allow_fe3_0_) returned 1
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(allow_pi4_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getString(author5_0_) returned bootdo-jpa
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getString(categori6_0_) returned null
2019-04-15 20:53:36 -2. ResultSet.getInt(comments7_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getString(content8_0_) returned <ol><li><p style="margin-bottom: 0px; padding: 0px; color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; font-size: 16px;">win</p><p style="margin-bottom: 0px; padding: 0px; color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; font-size: 16px;"></p><div class="dp-highlighter bg_java" style="padding: 1px 0px 0px; font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px; background-color: rgb(231, 229, 220); width: 849.412px; overflow-x: auto; overflow-y: hidden; position: relative; color: rgb(69, 69, 69); margin: 18px 0px !important;"><div class="bar" style="margin: 0px; padding: 0px 0px 0px 45px;"><div class="tools" style="margin: 0px; padding: 3px 8px 10px 10px; font-stretch: normal; font-size: 9px; line-height: normal; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; color: silver; background-color: rgb(248, 248, 248); border-left: 3px solid rgb(108, 226, 108); border-right: 1px solid rgb(231, 229, 220);"><b>[java]</b>&nbsp;<a href="http://blog.csdn.net/qq1115094858/article/details/51873698#" class="ViewSource" title="view plain" style="background-image: url(&quot;images/default/ico_plain.gif&quot;); background-position: left top; background-repeat: no-repeat; color: rgb(202, 12, 22); margin: 0px 10px 0px 0px; padding: 1px; outline: none; border: none; font-size: 9px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">view plain</a><span class="tracking-ad" data-mod="popu_168" style="margin: 0px; padding: 0px;">&nbsp;<a href="http://blog.csdn.net/qq1115094858/article/details/51873698#" class="CopyToClipboard" title="copy" style="background-image: url(&quot;images/default/ico_copy.gif&quot;); background-position: left top; background-repeat: no-repeat; color: rgb(202, 12, 22); margin: 0px 10px 0px 0px; padding: 1px; outline: none; border: none; font-size: 9px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">copy</a><div style="margin: 0px; padding: 0px; position: absolute; left: 294px; top: 296px; width: 16px; height: 16px; z-index: 99;"></div></span><span class="tracking-ad" data-mod="popu_169" style="margin: 0px; padding: 0px;"></span></div></div><ol start="1" class="dp-j" style="padding: 0px; list-style-position: initial; list-style-image: initial; border-top: none; border-right: 1px solid rgb(231, 229, 220); border-bottom: none; border-left: none; border-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-right: 0px !important; margin-bottom: 1px !important; margin-left: 45px !important;"><li class="alt" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; color: inherit; line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Component</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li class="" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; font-weight: bold; border: none; color: rgb(0, 102, 153); background-color: inherit;">class</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;WebConfigurer&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; font-weight: bold; border: none; color: rgb(0, 102, 153); background-color: inherit;">extends</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;WebMvcConfigurerAdapter&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; color: inherit; line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Override</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li class="" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword" style="margin: 0px; padding: 0px; font-weight: bold; border: none; color: rgb(0, 102, 153); background-color: inherit;">public</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; font-weight: bold; border: none; color: rgb(0, 102, 153); background-color: inherit;">void</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;addResourceHandlers(ResourceHandlerRegistry&nbsp;registry)&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; color: inherit; line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;registry.addResourceHandler(<span class="string" style="margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;">"/files/**"</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">).addResourceLocations(</span><span class="string" style="margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;">"file:///E:/var/spring/uploaded_files/"</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">);&nbsp;&nbsp;</span></span></li><li class="" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; color: inherit; line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;</span></li><li class="" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">}&nbsp;&nbsp;</span></li></ol></div><span style="color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; font-size: 16px;">linux</span><br style="color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; font-size: 16px;"><div class="dp-highlighter bg_java" style="padding: 1px 0px 0px; font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px; background-color: rgb(231, 229, 220); width: 849.412px; overflow-x: auto; overflow-y: hidden; position: relative; color: rgb(69, 69, 69); margin: 18px 0px !important;"><div class="bar" style="margin: 0px; padding: 0px 0px 0px 45px;"><div class="tools" style="margin: 0px; padding: 3px 8px 10px 10px; font-stretch: normal; font-size: 9px; line-height: normal; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; color: silver; background-color: rgb(248, 248, 248); border-left: 3px solid rgb(108, 226, 108); border-right: 1px solid rgb(231, 229, 220);"><b>[java]</b>&nbsp;<a href="http://blog.csdn.net/qq1115094858/article/details/51873698#" class="ViewSource" title="view plain" style="background-image: url(&quot;images/default/ico_plain.gif&quot;); background-position: left top; background-repeat: no-repeat; color: rgb(202, 12, 22); margin: 0px 10px 0px 0px; padding: 1px; outline: none; border: none; font-size: 9px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">view plain</a><span class="tracking-ad" data-mod="popu_168" style="margin: 0px; padding: 0px;">&nbsp;<a href="http://blog.csdn.net/qq1115094858/article/details/51873698#" class="CopyToClipboard" title="copy" style="background-image: url(&quot;images/default/ico_copy.gif&quot;); background-position: left top; background-repeat: no-repeat; color: rgb(202, 12, 22); margin: 0px 10px 0px 0px; padding: 1px; outline: none; border: none; font-size: 9px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">copy</a><div style="margin: 0px; padding: 0px; position: absolute; left: 294px; top: 528px; width: 16px; height: 16px; z-index: 99;"></div></span><span class="tracking-ad" data-mod="popu_169" style="margin: 0px; padding: 0px;"></span></div></div><ol start="1" class="dp-j" style="padding: 0px; list-style-position: initial; list-style-image: initial; border-top: none; border-right: 1px solid rgb(231, 229, 220); border-bottom: none; border-left: none; border-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-right: 0px !important; margin-bottom: 1px !important; margin-left: 45px !important;"><li class="alt" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; color: inherit; line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Component</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li class="" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; font-weight: bold; border: none; color: rgb(0, 102, 153); background-color: inherit;">class</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;WebConfigurer&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; font-weight: bold; border: none; color: rgb(0, 102, 153); background-color: inherit;">extends</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;WebMvcConfigurerAdapter&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; color: inherit; line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Override</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li class="" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword" style="margin: 0px; padding: 0px; font-weight: bold; border: none; color: rgb(0, 102, 153); background-color: inherit;">public</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; font-weight: bold; border: none; color: rgb(0, 102, 153); background-color: inherit;">void</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;addResourceHandlers(ResourceHandlerRegistry&nbsp;registry)&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; color: inherit; line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;registry.addResourceHandler(<span class="string" style="margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;">"/files/**"</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">).addResourceLocations(</span><span class="string" style="margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;">"file:///var/spring/uploaded_files"</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">);&nbsp;&nbsp;</span></span></li><li class="" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; color: inherit; line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;</span></li><li class="" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">}&nbsp;&nbsp;</span></li><li></li></ol></div></li></ol>
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getLong(created9_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getTimestamp(gtm_cre10_0_) returned 2017-09-24 09:15:35.0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getTimestamp(gtm_mod11_0_) returned 2017-09-24 09:15:35.0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(hits12_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getLong(modifie13_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getString(slug14_0_) returned null
2019-04-15 20:53:36 -2. ResultSet.getInt(status15_0_) returned 1
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getString(tags16_0_) returned null
2019-04-15 20:53:36 -2. ResultSet.getString(title17_0_) returned spring boot 图片上传后的图片读取路径在win与linux环境配置的差别
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getString(type18_0_) returned article
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.next() returned true
2019-04-15 20:53:36 -2. ResultSet.getLong(cid1_0_) returned 109
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(allow_co2_0_) returned 1
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(allow_fe3_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(allow_pi4_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getString(author5_0_) returned bootdo-jpa
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getString(categori6_0_) returned null
2019-04-15 20:53:36 -2. ResultSet.getInt(comments7_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getString(content8_0_) returned <p><br></p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　EhCache 是一个纯Java的进程内缓存框架，具有快速、精干等特点，是Hibernate中默认的CacheProvider。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　ehcache提供了多种缓存策略，主要分为内存和磁盘两级，所以无需担心容量问题。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　spring-boot是一个快速的集成框架，其设计目的是用来简化新Spring应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置，从而使开发人员不再需要定义样板化的配置。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　由于spring-boot无需任何样板化的配置文件，所以spring-boot集成一些其他框架时会有略微的不同。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　1.spring-boot是一个通过maven管理的jar包的框架，集成ehcache需要的依赖如下</p><div class="cnblogs_code" style="background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); padding: 5px; overflow: auto; margin: 5px 0px; color: rgb(0, 0, 0); font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div><pre style="margin-bottom: 0px; line-height: 1.42857; font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>org.springframework<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
     <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-context-support<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
         <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>net.sf.ehcache<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
      <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>ehcache<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
          <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>2.8.3<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>        </pre><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div></div><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　　　具体pom.xml文件如下</p><div class="cnblogs_code" style="background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); padding: 5px; overflow: auto; margin: 5px 0px; color: rgb(0, 0, 0); font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div><pre style="margin-bottom: 0px; line-height: 1.42857; font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;?</span><span style="color: rgb(255, 0, 255); line-height: 1.5 !important;">xml version="1.0" encoding="UTF-8"</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">?&gt;</span>
<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">project </span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">xmlns</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="http://maven.apache.org/POM/4.0.0"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> xmlns:xsi</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="http://www.w3.org/2001/XMLSchema-instance"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">
    xsi:schemaLocation</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">modelVersion</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>4.0.0<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">modelVersion</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>

    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>com.lclc.boot<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>boot-cache<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>0.0.1-SNAPSHOT<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">&lt;!--</span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;"> Inherit defaults from Spring Boot </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">--&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">parent</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>org.springframework.boot<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-boot-starter-parent<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>1.1.3.RELEASE<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">parent</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependencies</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>org.springframework.boot<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-boot-starter-web<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>org.springframework.boot<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-boot-starter-data-jpa<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>org.springframework.boot<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-boot-starter-thymeleaf<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>mysql<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>mysql-connector-java<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>

        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>com.google.guava<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>guava<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>17.0<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>org.springframework<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-context-support<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>net.sf.ehcache<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>ehcache<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>2.8.3<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependencies</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>

    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependencyManagement</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependencies</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependencies</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependencyManagement</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>

    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">build</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">plugins</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">plugin</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
                <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>org.springframework.boot<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
                <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-boot-maven-plugin<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">plugin</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">plugins</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">build</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>

    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">repositories</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">repository</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">id</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-snapshots<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">id</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">url</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>http://repo.spring.io/snapshot<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">url</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">snapshots</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
                <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">enabled</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>true<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">enabled</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">snapshots</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">repository</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">repository</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">id</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-milestones<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">id</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">url</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>http://repo.spring.io/milestone<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">url</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">repository</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">repositories</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">pluginRepositories</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">pluginRepository</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">id</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-snapshots<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">id</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">url</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>http://repo.spring.io/snapshot<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">url</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">pluginRepository</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">pluginRepository</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">id</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-milestones<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">id</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">url</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>http://repo.spring.io/milestone<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">url</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">pluginRepository</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">pluginRepositories</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>

<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">project</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span></pre><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div></div><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">&nbsp;　　2.使用ehcache，我们需要一个ehcache.xml来定义一些cache的属性。</p><div class="cnblogs_code" style="background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); padding: 5px; overflow: auto; margin: 5px 0px; color: rgb(0, 0, 0); font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div><pre style="margin-bottom: 0px; line-height: 1.42857; font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;?</span><span style="color: rgb(255, 0, 255); line-height: 1.5 !important;">xml version="1.0" encoding="UTF-8"</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">?&gt;</span>
<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">ehcache </span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">xmlns:xsi</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="http://www.w3.org/2001/XMLSchema-instance"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> xsi:noNamespaceSchemaLocation</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="http://ehcache.org/ehcache.xsd"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">
  updateCheck</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="false"</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
          <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">diskStore </span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">path</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="java.io.tmpdir/Tmp_EhCache"</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">/&gt;</span>
           <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">defaultCache </span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">eternal</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="false"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> maxElementsInMemory</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="1000"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> overflowToDisk</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="false"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> diskPersistent</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="false"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">
    timeToIdleSeconds</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="0"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> timeToLiveSeconds</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="600"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> memoryStoreEvictionPolicy</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="LRU"</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">/&gt;</span>

            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">cache </span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">name</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="demo"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> eternal</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="false"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> maxElementsInMemory</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="100"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> overflowToDisk</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="false"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> diskPersistent</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="false"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">
    timeToIdleSeconds</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="0"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> timeToLiveSeconds</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="300"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> memoryStoreEvictionPolicy</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="LRU"</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">/&gt;</span>

<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">ehcache</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span></pre><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div></div><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">&nbsp;　　解释下这个xml文件中的标签。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　(1).<span style="color: rgb(128, 0, 0);">diskStore：</span>&nbsp;为缓存路径，ehcache分为内存和磁盘两级，此属性定义磁盘的缓存位置。参数解释如下：　　　　<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 　　　　user.home – 用户主目录<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 　　　 　user.dir&nbsp; – 用户当前工作目录<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;　　　　&nbsp; java.io.tmpdir – 默认临时文件路径</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　(2).<span style="color: rgb(128, 0, 0);">defaultCache：<span style="color: rgb(0, 0, 0);">默认缓存策略，当ehcache找不到定义的缓存时，则使用这个缓存策略。只能定义一个。</span></span></p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;"><span style="color: rgb(128, 0, 0);"><span style="color: rgb(0, 0, 0);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (3).<span style="color: rgb(128, 0, 0);">cache</span>：自定缓存策略，为自定义的缓存策略。参数解释如下：</span></span></p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;"><span style="color: rgb(128, 0, 0);"><span style="color: rgb(0, 0, 0);">　　　 cache元素的属性：&nbsp; &nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name：缓存名称&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; maxElementsInMemory：内存中最大缓存对象数&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; maxElementsOnDisk：硬盘中最大缓存对象数，若是0表示无穷大&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; eternal：true表示对象永不过期，此时会忽略timeToIdleSeconds和timeToLiveSeconds属性，默认为false &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; overflowToDisk：true表示当内存缓存的对象数目达到了maxElementsInMemory界限后，会把溢出的对象写到硬盘缓存中。注意：如果缓存的对象要写入到硬盘中的话，则该对象必须实现了Serializable接口才行。&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; diskSpoolBufferSizeMB：磁盘缓存区大小，默认为30MB。每个Cache都应该有自己的一个缓存区。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; diskPersistent：是否缓存虚拟机重启期数据&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; diskExpiryThreadIntervalSeconds：磁盘失效线程运行时间间隔，默认为120秒&nbsp; &nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; timeToIdleSeconds： 设定允许对象处于空闲状态的最长时间，以秒为单位。当对象自从最近一次被访问后，如果处于空闲状态的时间超过了timeToIdleSeconds属性值，这个对象就会过期，EHCache将把它从缓存中清空。只有当eternal属性为false，该属性才有效。如果该属性值为0，则表示对象可以无限期地处于空闲状态&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; timeToLiveSeconds：设定对象允许存在于缓存中的最长时间，以秒为单位。当对象自从被存放到缓存中后，如果处于缓存中的时间超过了 timeToLiveSeconds属性值，这个对象就会过期，EHCache将把它从缓存中清除。只有当eternal属性为false，该属性才有效。如果该属性值为0，则表示对象可以无限期地存在于缓存中。timeToLiveSeconds必须大于timeToIdleSeconds属性，才有意义&nbsp; &nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; memoryStoreEvictionPolicy：当达到maxElementsInMemory限制时，Ehcache将会根据指定的策略去清理内存。可选策略有：LRU（最近最少使用，默认策略）、FIFO（先进先出）、LFU（最少访问次数）。&nbsp;&nbsp;</span></span></p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">&nbsp;</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;"><span style="color: rgb(128, 0, 0);"><span style="color: rgb(0, 0, 0);">　　3.将ehcache的管理器暴露给spring的上下文容器，</span></span></p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;"><span style="color: rgb(128, 0, 0);"><span style="color: rgb(0, 0, 0);">　　</span></span></p><div class="cnblogs_code" style="background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); padding: 5px; overflow: auto; margin: 5px 0px; color: rgb(0, 0, 0); font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div><pre style="margin-bottom: 0px; line-height: 1.42857; font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">@Configuration
</span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">//</span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;"> 标注启动了缓存</span>
<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">@EnableCaching
</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">class</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> CacheConfiguration {

    </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">/*</span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">
     * ehcache 主要的管理器
     </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">*/</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">
    @Bean(name </span>= "appEhCacheCacheManager"<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">)
    </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> EhCacheCacheManager ehCacheCacheManager(EhCacheManagerFactoryBean bean){
        </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">return</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">new</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> EhCacheCacheManager (bean.getObject ());
    }

    </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">/*</span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">
     * 据shared与否的设置,Spring分别通过CacheManager.create()或new CacheManager()方式来创建一个ehcache基地.
     </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">*/</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">
    @Bean
    </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> EhCacheManagerFactoryBean ehCacheManagerFactoryBean(){
        EhCacheManagerFactoryBean cacheManagerFactoryBean </span>= <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">new</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> EhCacheManagerFactoryBean ();
        cacheManagerFactoryBean.setConfigLocation (</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">new</span> ClassPathResource ("conf/ehcache-app.xml"<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">));
        cacheManagerFactoryBean.setShared (</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">true</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">);
        </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">return</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> cacheManagerFactoryBean;
    }
}</span></pre><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div></div><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">&nbsp;</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">&nbsp;&nbsp; 　　　　<span style="color: rgb(0, 0, 0);">@Configuration</span>：为spring-boot注解，主要标注此为配置类，优先扫描。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">&nbsp; 　　　　<span style="color: rgb(0, 0, 0);">@Bean</span>：向spring容器中加入bean。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　至此所有的配置都做好了，通过spring-boot进行集成框架就是这么简单。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　4.使用ehcache</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　　　使用ehcache主要通过spring的缓存机制，上面我们将spring的缓存机制使用了ehcache进行实现，所以使用方面就完全使用spring缓存机制就行了。<br>　　　　具体牵扯到几个注解：</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　　　@Cacheable：负责将方法的返回值加入到缓存中，参数3<br>　　　　@CacheEvict：负责清除缓存，参数4</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　　　　参数解释：</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　　　value：缓存位置名称，不能为空，如果使用EHCache，就是ehcache.xml中声明的cache的name<br>　　　　key：缓存的key，默认为空，既表示使用方法的参数类型及参数值作为key，支持SpEL<br>　　　　condition：触发条件，只有满足条件的情况才会加入缓存，默认为空，既表示全部都加入缓存，支持SpEL</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　　　allEntries：CacheEvict参数，true表示清除value中的全部缓存，默认为false</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　不多说，直接上代码：</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　</p><div class="cnblogs_code" style="background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); padding: 5px; overflow: auto; margin: 5px 0px; color: rgb(0, 0, 0); font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div><pre style="margin-bottom: 0px; line-height: 1.42857; font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">@Service
</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">class</span> CacheDemoServiceImpl <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">implements</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> CacheDemoService {

    </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">/**</span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">
     * 缓存的key
     </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">*/</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">static</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">final</span> String THING_ALL_KEY   = "\"thing_all\""<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">;
    </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">/**</span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">
     * value属性表示使用哪个缓存策略，缓存策略在ehcache.xml
     </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">*/</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">static</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">final</span> String DEMO_CACHE_NAME = "demo"<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">;
   
    @CacheEvict(value </span>= DEMO_CACHE_NAME,key =<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> THING_ALL_KEY)
    @Override
    </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">void</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> create(Thing thing){
        Long id </span>=<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> getNextId ();
        thing.setId (id);
        data.put (id, thing);
    } 
      
     @Cacheable(value </span>=<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> DEMO_CACHE_NAME,key = "#thing.getId()+'thing'")
    @Override
    </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> Thing findById(Long id){
        System.err.println (</span>"没有走缓存！" +<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> id);
        </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">return</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> data.get (id);
    }

      @Cacheable(value </span>= DEMO_CACHE_NAME,key =<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> THING_ALL_KEY)
    @Override
    </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span> List&lt;Thing&gt;<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> findAll(){
        </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">return</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> Lists.newArrayList (data.values ());
    }
   
   </span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">
      @Override
    @CachePut(value </span>= DEMO_CACHE_NAME,key = "#thing.getId()+'thing'"<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">)
    @CacheEvict(value </span>= DEMO_CACHE_NAME,key =<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> THING_ALL_KEY)
    </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> Thing update(Thing thing){
        System.out.println (thing);
        data.put (thing.getId (), thing);
        </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">return</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> thing;
    }

    @CacheEvict(value </span>=<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> DEMO_CACHE_NAME)
    @Override
    </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">void</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> delete(Long id){
        data.remove (id);
    }
   
}</span></pre><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div></div><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">&nbsp;</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　　　5.只需要通过注解在service层方法上打注解便可以使用缓存，在find**上存入缓存，在delete**,update**上清除缓存。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">&nbsp;</p>
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getLong(created9_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getTimestamp(gtm_cre10_0_) returned 2017-09-24 11:15:18.0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getTimestamp(gtm_mod11_0_) returned 2017-09-24 11:15:18.0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getInt(hits12_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getLong(modifie13_0_) returned 0
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:36 -2. ResultSet.getString(slug14_0_) returned null
2019-04-15 20:53:36 -2. ResultSet.getInt(status15_0_) returned 1
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getString(tags16_0_) returned null
2019-04-15 20:53:36 -2. ResultSet.getString(title17_0_) returned spring-boot整合ehcache实现缓存机制
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.getString(type18_0_) returned article
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.close() returned 
2019-04-15 20:53:36 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:36 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:36 -2. Connection.isClosed() returned false
2019-04-15 20:53:36 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:53:36 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:53:36 -2. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:53:36 -2. Connection.prepareStatement(select count(contentdo0_.cid) as col_0_0_ from blog_content contentdo0_ where ?=1) returned net.sf.log4jdbc.PreparedStatementSpy@1d503a0a
2019-04-15 20:53:36 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:53:36 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:36 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:36 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:53:36 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:53:36 -2. PreparedStatement.setBoolean(1, true) returned 
2019-04-15 20:53:36 -2. Connection.getAutoCommit() returned false
2019-04-15 20:53:36 -select count(contentdo0_.cid) as col_0_0_ from blog_content contentdo0_ where 1=1 

2019-04-15 20:53:36 -select count(contentdo0_.cid) as col_0_0_ from blog_content contentdo0_ where 1=1 
 {executed in 0 msec}
2019-04-15 20:53:36 -2. ResultSet.new ResultSet returned 
2019-04-15 20:53:36 -2. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@2d34fb61
2019-04-15 20:53:36 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@15e0e245 - Field level information: 
	com.mysql.jdbc.Field@9fc0a99[catalog=,tableName=,originalTableName=,columnName=col_0_0_,originalColumnName=,mysqlType=8(FIELD_TYPE_LONGLONG),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
2019-04-15 20:53:36 -2. ResultSet.next() returned true
2019-04-15 20:53:36 -2. ResultSet.getLong(col_0_0_) returned 13
2019-04-15 20:53:36 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:36 -2. ResultSet.next() returned false
2019-04-15 20:53:36 -2. ResultSet.close() returned 
2019-04-15 20:53:36 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:36 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:36 -2. Connection.isClosed() returned false
2019-04-15 20:53:36 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:53:36 -2. Connection.commit() returned 
2019-04-15 20:53:36 -2. Connection.setAutoCommit(true) returned 
2019-04-15 20:53:36 -2. Connection.isReadOnly() returned true
2019-04-15 20:53:36 -2. Connection.setReadOnly(false) returned 
2019-04-15 20:53:36 -耗时 : 72
2019-04-15 20:53:36 -2. Connection.isClosed() returned false
2019-04-15 20:53:36 -2. Connection.clearWarnings() returned 
2019-04-15 20:53:36 -2. Connection.clearWarnings() returned 
2019-04-15 20:53:38 -请求地址 : http://localhost:8080/blog/bContent/add
2019-04-15 20:53:38 -HTTP METHOD : GET
2019-04-15 20:53:38 -CLASS_METHOD : com.bootdo_jpa.blog.controller.ContentController.add
2019-04-15 20:53:38 -参数 : []
2019-04-15 20:53:38 -耗时 : 0
2019-04-15 20:53:43 -4. Connection closed
2019-04-15 20:53:43 -4. Connection.close() returned 
2019-04-15 20:53:45 -请求地址 : http://localhost:8080/blog
2019-04-15 20:53:45 -HTTP METHOD : GET
2019-04-15 20:53:45 -CLASS_METHOD : com.bootdo_jpa.blog.controller.BlogController.blog
2019-04-15 20:53:45 -参数 : []
2019-04-15 20:53:45 -耗时 : 0
2019-04-15 20:53:45 -请求地址 : http://localhost:8080/blog/open/list
2019-04-15 20:53:45 -HTTP METHOD : GET
2019-04-15 20:53:45 -CLASS_METHOD : com.bootdo_jpa.blog.controller.BlogController.openList
2019-04-15 20:53:45 -参数 : [{type=article, limit=10, offset=0}]
2019-04-15 20:53:45 -2. Connection.isClosed() returned false
2019-04-15 20:53:45 -2. Connection.setReadOnly(true) returned 
2019-04-15 20:53:45 -2. Connection.getAutoCommit() returned true
2019-04-15 20:53:45 -2. Connection.setAutoCommit(false) returned 
2019-04-15 20:53:45 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:53:45 -2. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:53:45 -2. Connection.prepareStatement(select contentdo0_.cid as cid1_0_, contentdo0_.allow_comment as allow_co2_0_, contentdo0_.allow_feed as allow_fe3_0_, contentdo0_.allow_ping as allow_pi4_0_, contentdo0_.author as author5_0_, contentdo0_.categories as categori6_0_, contentdo0_.comments_num as comments7_0_, contentdo0_.content as content8_0_, contentdo0_.created as created9_0_, contentdo0_.gtm_create as gtm_cre10_0_, contentdo0_.gtm_modified as gtm_mod11_0_, contentdo0_.hits as hits12_0_, contentdo0_.modified as modifie13_0_, contentdo0_.slug as slug14_0_, contentdo0_.status as status15_0_, contentdo0_.tags as tags16_0_, contentdo0_.title as title17_0_, contentdo0_.type as type18_0_ from blog_content contentdo0_ where contentdo0_.type=? order by contentdo0_.cid desc limit ?) returned net.sf.log4jdbc.PreparedStatementSpy@5784c2fb
2019-04-15 20:53:45 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:53:45 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:45 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:45 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:53:45 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:53:45 -2. PreparedStatement.setString(1, "article") returned 
2019-04-15 20:53:45 -2. PreparedStatement.setInt(2, 10) returned 
2019-04-15 20:53:45 -2. Connection.getAutoCommit() returned false
2019-04-15 20:53:45 -2. Connection.getAutoCommit() returned false
2019-04-15 20:53:45 -select contentdo0_.cid as cid1_0_, contentdo0_.allow_comment as allow_co2_0_, contentdo0_.allow_feed 
as allow_fe3_0_, contentdo0_.allow_ping as allow_pi4_0_, contentdo0_.author as author5_0_, 
contentdo0_.categories as categori6_0_, contentdo0_.comments_num as comments7_0_, contentdo0_.content 
as content8_0_, contentdo0_.created as created9_0_, contentdo0_.gtm_create as gtm_cre10_0_, 
contentdo0_.gtm_modified as gtm_mod11_0_, contentdo0_.hits as hits12_0_, contentdo0_.modified 
as modifie13_0_, contentdo0_.slug as slug14_0_, contentdo0_.status as status15_0_, contentdo0_.tags 
as tags16_0_, contentdo0_.title as title17_0_, contentdo0_.type as type18_0_ from blog_content 
contentdo0_ where contentdo0_.type='article' order by contentdo0_.cid desc limit 10 

2019-04-15 20:53:45 -select contentdo0_.cid as cid1_0_, contentdo0_.allow_comment as allow_co2_0_, contentdo0_.allow_feed 
as allow_fe3_0_, contentdo0_.allow_ping as allow_pi4_0_, contentdo0_.author as author5_0_, 
contentdo0_.categories as categori6_0_, contentdo0_.comments_num as comments7_0_, contentdo0_.content 
as content8_0_, contentdo0_.created as created9_0_, contentdo0_.gtm_create as gtm_cre10_0_, 
contentdo0_.gtm_modified as gtm_mod11_0_, contentdo0_.hits as hits12_0_, contentdo0_.modified 
as modifie13_0_, contentdo0_.slug as slug14_0_, contentdo0_.status as status15_0_, contentdo0_.tags 
as tags16_0_, contentdo0_.title as title17_0_, contentdo0_.type as type18_0_ from blog_content 
contentdo0_ where contentdo0_.type='article' order by contentdo0_.cid desc limit 10 
 {executed in 8 msec}
2019-04-15 20:53:45 -2. ResultSet.new ResultSet returned 
2019-04-15 20:53:45 -2. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@6ac89be6
2019-04-15 20:53:45 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@701f0971 - Field level information: 
	com.mysql.jdbc.Field@17d8e93[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=cid1_0_,originalColumnName=cid,mysqlType=8(FIELD_TYPE_LONGLONG),flags= AUTO_INCREMENT PRIMARY_KEY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@32b3795a[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=allow_co2_0_,originalColumnName=allow_comment,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@1c8ad341[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=allow_fe3_0_,originalColumnName=allow_feed,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@14561520[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=allow_pi4_0_,originalColumnName=allow_ping,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@7932082f[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=author5_0_,originalColumnName=author,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@5062d7fa[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=categori6_0_,originalColumnName=categories,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@1ab8166c[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=comments7_0_,originalColumnName=comments_num,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@3ee3ef0e[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=content8_0_,originalColumnName=content,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BLOB, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@5779eb8d[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=created9_0_,originalColumnName=created,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@11e22b9f[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=gtm_cre10_0_,originalColumnName=gtm_create,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@4bb344b9[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=gtm_mod11_0_,originalColumnName=gtm_modified,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@6a09595e[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=hits12_0_,originalColumnName=hits,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@7234e211[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=modifie13_0_,originalColumnName=modified,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@720a911b[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=slug14_0_,originalColumnName=slug,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@23cd856f[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=status15_0_,originalColumnName=status,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@3aeebe1[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=tags16_0_,originalColumnName=tags,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@56dfb5ef[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=title17_0_,originalColumnName=title,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@707b6466[catalog=bootdo_jpa,tableName=contentdo0_,originalTableName=blog_content,columnName=type18_0_,originalColumnName=type,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
2019-04-15 20:53:45 -2. ResultSet.next() returned true
2019-04-15 20:53:45 -2. ResultSet.getLong(cid1_0_) returned 121
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(allow_co2_0_) returned 1
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(allow_fe3_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(allow_pi4_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getString(author5_0_) returned bootdo-jpa
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getString(categori6_0_) returned 
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(comments7_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getString(content8_0_) returned <p><br></p><div class="Layout-navbarHolder" style="box-sizing: inherit; display: flex; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0; height: 59px; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: medium;"><header class="Navbar ScrollBackFixed" style="box-sizing: inherit; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; flex-direction: row; -webkit-box-align: center; align-items: center; flex-shrink: 0; contain: layout; -webkit-box-pack: justify; justify-content: space-between; height: 59px; width: 1519.2px; border-bottom: 1px solid rgba(0, 0, 0, 0.08); color: rgb(128, 128, 128); background: rgba(255, 255, 255, 0.97); z-index: 2; position: fixed; border-top-color: rgba(0, 0, 0, 0.08); border-right-color: rgba(0, 0, 0, 0.08); border-left-color: rgba(0, 0, 0, 0.08); transform: translateY(-100%); will-change: transform;"><div class="Navbar-functionality" style="box-sizing: inherit; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; flex-direction: row; -webkit-box-align: center; align-items: center; flex-shrink: 0; position: absolute; right: 0px; top: 0px; height: 58px; align-self: stretch;"><a class="Navbar-write" style="box-sizing: inherit; color: inherit; display: flex; -webkit-box-align: center; align-items: center; padding: 0px 10px; white-space: nowrap; transition: color 0.2s;"><span class="icon icon-ic_nav_new" style="box-sizing: inherit; font-size: 24px; speak: none; font-feature-settings: normal; line-height: 1; -webkit-font-smoothing: antialiased; margin-right: 3px; font-family: icomoon !important;"></span>写文章</a><button class="Button Navbar-loginButon Button--blue" type="button" style="box-sizing: inherit; padding: 0px 16px; color: rgb(0, 128, 255); font-size: 14px; line-height: 30px; background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-width: 1px; border-style: solid; border-color: rgb(0, 128, 255); -webkit-appearance: none; border-radius: 4px; height: 32px; margin-right: 16px; margin-left: 6px; width: 72px;">登录</button></div></header></div><div style="box-sizing: inherit; display: flex; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: medium;"></div><div class="Layout-main av-card av-paddingBottom av-bodyFont Layout-titleImage--normal" style="box-sizing: inherit; display: flex; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0; margin: 22px auto 0px; padding: 0px; width: 660px; z-index: 1; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: medium;"><div class="PostIndex-header av-paddingTop av-card" data-zop="{&quot;authorName&quot;:&quot;老A&quot;,&quot;itemId&quot;:&quot;29345083&quot;,&quot;title&quot;:&quot;Spring Cloud下微服务权限方案&quot;,&quot;type&quot;:&quot;article&quot;}" data-za-module="PostItem" data-za-module-info="{&quot;card&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;Post&quot;,&quot;token&quot;:&quot;29345083&quot;}}}" style="box-sizing: inherit; display: flex; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0; position: relative;"><div class="TitleImage" style="box-sizing: inherit; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0; margin-bottom: 22px;"><img alt="Spring Cloud下微服务权限方案" src="https://pic4.zhimg.com/v2-32e374b99a4332ca8bd52fca9d090617_r.png" class="TitleImage-imagePure TitleImage-imagePure--fixed" height="396px" style="box-sizing: inherit; overflow: hidden; width: 660px; display: block;"></div><h1 class="PostIndex-title av-paddingSide av-titleFont" style="box-sizing: inherit; margin-top: 0px; margin-bottom: 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; font-size: 32px; line-height: 1.3;">Spring Cloud下微服务权限方案</h1><div class="PostIndex-author" style="box-sizing: inherit; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; flex-direction: row; -webkit-box-align: center; align-items: center; flex-shrink: 0; position: relative; font-size: 14px; color: rgb(128, 128, 128); margin-top: 22px;"><a href="https://www.zhihu.com/people/lao-a-68-38" target="_blank" style="box-sizing: inherit; color: inherit;"><img class="Avatar-hemingway PostIndex-authorAvatar Avatar--xs" alt="老A" src="https://pic1.zhimg.com/v2-3b6c82a0652b73ee56207a2f45955ca8_xs.jpg" srcset="https://pic1.zhimg.com/v2-3b6c82a0652b73ee56207a2f45955ca8_l.jpg 2x" style="box-sizing: inherit; overflow: hidden; width: 36px; height: 36px; border-radius: 50%; margin-right: 12px;"></a><a href="https://www.zhihu.com/people/lao-a-68-38" target="_blank" class="PostIndex-authorName" style="box-sizing: inherit; color: rgb(128, 128, 128); min-width: 0px; text-overflow: ellipsis; white-space: nowrap; overflow: hidden;">老A</a><span class="Bull" style="box-sizing: inherit; margin: 0px 6px;"></span><div class="HoverTitle" data-hover-title="2017 年 9月 14 日星期四晚上 7 点 12 分" style="box-sizing: inherit; display: flex; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0; position: relative;"><time datetime="Thu Sep 14 2017 19:12:26 GMT+0800 (中国标准时间)" style="box-sizing: inherit;">1 个月前</time></div></div></div><div class="RichText PostIndex-content av-paddingSide av-card" style="box-sizing: inherit; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0; word-break: break-word; margin: 30px 0px; line-height: 1.7;"><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">背景</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">从传统的单体应用转型Spring Cloud的朋友都在问我，Spring Cloud下的微服务权限怎么管？怎么设计比较合理？从大层面讲叫服务权限，往小处拆分，分别为三块：用户认证、用户权限、服务校验。</p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">用户认证</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">传统的单体应用可能习惯了session的存在，而到了Spring cloud的微服务化后，session虽然可以采取分布式会话来解决，但终究不是上上策。开始有人推行Spring Cloud Security结合很好的OAuth2，后面为了优化OAuth 2中Access Token的存储问题，提高后端服务的可用性和扩展性，有了更好Token验证方式JWT（JSON Web Token）。这里要强调一点的是，OAuth2和JWT这两个根本没有可比性，是两个完全不同的东西。 OAuth2是一种授权框架，而JWT是一种认证协议</p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">OAuth2认证框架</h2><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">OAuth2中包含四个角色：</h2><ul style="box-sizing: inherit; margin: 20px 0px; padding: 0px 0px 0px 40px;"><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">资源拥有者(Resource Owner)</li><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">资源服务器(Resource Server)</li><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">授权服务器(Authorization Server)</li><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">客户端(Client)</li></ul><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">OAuth2包含4种授权模式</h2><ul style="box-sizing: inherit; margin: 20px 0px; padding: 0px 0px 0px 40px;"><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">授权码（认证码）模式 （Authorization code)</li><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">简化（隐形）模式 (Impilict</li><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">用户名密码模式 (Resource Owner Password Credential)</li><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">客户端模式 (Client Credential)</li></ul><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">其中，OAuth2的运行流程如下图，摘自RFC 6749：</p><div class="highlight" style="box-sizing: inherit; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0;"><pre style="box-sizing: inherit; margin-top: 1em; margin-bottom: 1em; padding: 10px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 14px; word-wrap: normal; background: rgb(235, 238, 245);"><code class="language-text" style="box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace;"><span style="box-sizing: inherit;"></span>+--------+                               +---------------+
|        |--(A)- Authorization Request -&gt;|   Resource    |
|        |                               |     Owner     |
|        |&lt;-(B)-- Authorization Grant ---|               |
|        |                               +---------------+
|        |
|        |                               +---------------+
|        |--(C)-- Authorization Grant --&gt;| Authorization |
| Client |                               |     Server    |
|        |&lt;-(D)----- Access Token -------|               |
|        |                               +---------------+
|        |
|        |                               +---------------+
|        |--(E)----- Access Token ------&gt;|    Resource   |
|        |                               |     Server    |
|        |&lt;-(F)--- Protected Resource ---|               |
+--------+                               +---------------+
</code></pre></div><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">我们在Spring Cloud OAuth2中，所有访问微服务资源的请求都在Http Header中携带Token，被访问的服务接下来再去请求授权服务器验证Token的有效性，目前这种方式，我们需要两次或者更多次的请求，所有的Token有效性校验都落在的授权服务器上，对于我们系统的水平扩展成为一个非常大的瓶颈。</p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">JWT认证协议</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">授权服务器将用户信息和授权范围序列化后放入一个JSON字符串，然后使用Base64进行编码，最终在授权服务器用私钥对这个字符串进行签名，得到一个JSON Web Token。</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">假设其他所有的资源服务器都将持有一个RSA公钥，当资源服务器接收到这个在Http Header中存有Token的请求，资源服务器就可以拿到这个Token，并验证它是否使用正确的私钥签名（是否经过授权服务器签名，也就是验签）。验签通过，反序列化后就拿到Toekn中包含的有效验证信息。</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">其中，主体运作流程图如下：</p><div class="highlight" style="box-sizing: inherit; -webkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: column; -webkit-box-align: stretch; align-items: stretch; flex-shrink: 0;"><pre style="box-sizing: inherit; margin-top: 1em; margin-bottom: 1em; padding: 10px; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace; font-size: 14px; word-wrap: normal; background: rgb(235, 238, 245);"><code class="language-text" style="box-sizing: inherit; font-family: Menlo, Monaco, Consolas, &quot;Andale Mono&quot;, &quot;lucida console&quot;, &quot;Courier New&quot;, monospace;"><span style="box-sizing: inherit;"></span>+-----------+                                     +-------------+
|           |       1-Request Authorization       |             |
|           |------------------------------------&gt;|             |
|           |     grant_type&amp;username&amp;password    |             |--+
|           |                                     |Authorization|  | 2-Gen
|           |                                     |Service      |  |   JWT
|           |       3-Response Authorization      |             |&lt;-+
|           |&lt;------------------------------------| Private Key |
|           |    access_token / refresh_token     |             |
|           |    token_type / expire_in           |             |
|  Client   |                                     +-------------+
|           |                                 
|           |                                     +-------------+
|           |       4-Request Resource            |             |
|           |-----------------------------------&gt; |             |
|           | Authorization: bearer Access Token  |             |--+
|           |                                     | Resource    |  | 5-Verify
|           |                                     | Service     |  |  Token
|           |       6-Response Resource           |             |&lt;-+
|           |&lt;----------------------------------- | Public Key  |
+-----------+                                     +-------------+
</code></pre></div><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">通过上述的方式，我们可以很好地完成服务化后的用户认证。</p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">用户权限</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">传统的单体应用的权限拦截，大家都喜欢shiro，而且用的颇为顺手。可是一旦拆分后，这权限开始分散在各个API了，shiro还好使吗？笔者在项目中，并没有用shiro。前后端分离后，交互都是token，后端的服务无状态化，前端按钮资源化，权限放哪儿管好使？</p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">抽象与设计</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">在介绍灵活的核心设计前，先给大家普及一个入门的概念：RBAC（Role-Based Access Control，基于角色的访问控制），就是用户通过角色与权限进行关联。简单地说，一个用户拥有若干角色，每一个角色拥有若干权限。</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">RBAC其实是一种分析模型，主要分为：基本模型RBAC0（Core RBAC）、角色分层模型RBAC1（Hierarchal RBAC）、角色限制模型RBAC2（Constraint RBAC）和统一模型RBAC3（Combines RBAC）。</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">更多详情大家可以了解：<a href="http://link.zhihu.com/?target=http%3A//blog.csdn.net/zwk626542417/article/details/46726491" class=" wrap external" target="_blank" rel="nofollow noreferrer" style="box-sizing: inherit; color: rgb(34, 85, 153); border-bottom: 1px solid rgba(64, 64, 64, 0.72); word-break: break-all;">RBAC权限模型<span class="icon-external" style="box-sizing: inherit; font-size: 24px; speak: none; font-feature-settings: normal; line-height: 1; -webkit-font-smoothing: antialiased; font-family: icomoon !important;"></span></a></p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">核心UML</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;"><br style="box-sizing: inherit;"></p><img src="https://pic2.zhimg.com/v2-3e3eed438a7df522714407c5436c9bc9_b.png" data-rawwidth="1168" data-rawheight="532" class="origin_image zh-lightbox-thumb lazy" width="1168" data-original="https://pic2.zhimg.com/v2-3e3eed438a7df522714407c5436c9bc9_r.png" data-actualsrc="https://pic2.zhimg.com/v2-3e3eed438a7df522714407c5436c9bc9_b.png" style="box-sizing: inherit; overflow: hidden; display: block; max-width: 100%; margin: 24px auto; cursor: -webkit-zoom-in;"><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">这是笔者通过多种业务场景后抽象的RBAC关系图</p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">类说明</h2><ul style="box-sizing: inherit; margin: 20px 0px; padding: 0px 0px 0px 40px;"><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">Group</li></ul><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">群或组，拥有一定数量权限的集合，亦可以是权限的载体。</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">子类：User（用户）、Role（角色）、Position（岗位）、Unit（部门），通过用户的特定构成，形成不同业务场景的群或组，而通过对群或组的父类授权，完成了用户的权限获取。</p><ul style="box-sizing: inherit; margin: 20px 0px; padding: 0px 0px 0px 40px;"><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">Permission</li></ul><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">权限，拥有一定数量资源的集成，亦可以是资源的载体。</p><ul style="box-sizing: inherit; margin: 20px 0px; padding: 0px 0px 0px 40px;"><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">Resources</li></ul><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">权限下有资源，资源的来源有：Menu（菜单）、Button（动作权限）、页面元素（按钮、tab等）、数据权限等</p><ul style="box-sizing: inherit; margin: 20px 0px; padding: 0px 0px 0px 40px;"><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">Program</li></ul><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">程序，相关权限控制的呈现载体，可以在多个菜单中挂载。</p><ul style="box-sizing: inherit; margin: 20px 0px; padding: 0px 0px 0px 40px;"><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">常见web程序基本构成</li></ul><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;"><br style="box-sizing: inherit;"></p><img src="https://pic1.zhimg.com/v2-9f156709621fdd7685db9781829e2948_b.png" data-rawwidth="873" data-rawheight="492" class="origin_image zh-lightbox-thumb lazy" width="873" data-original="https://pic1.zhimg.com/v2-9f156709621fdd7685db9781829e2948_r.png" data-actualsrc="https://pic1.zhimg.com/v2-9f156709621fdd7685db9781829e2948_b.png" style="box-sizing: inherit; overflow: hidden; display: block; max-width: 100%; margin: 24px auto; cursor: -webkit-zoom-in;"><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;"><br style="box-sizing: inherit;"></p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">模型与微服务的关系</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">如果把Spring Cloud服务化后的所有api接口都定义为上文的Resources，那么我们可以看到这么一个情况。</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">比如一个用户的增删改查，我们的页面会这么做</p><img src="https://pic1.zhimg.com/v2-ac1fa4fc0005af11c0a7aa59fe62cbbc_b.png" data-rawwidth="2880" data-rawheight="1460" class="origin_image zh-lightbox-thumb lazy" width="2880" data-original="https://pic1.zhimg.com/v2-ac1fa4fc0005af11c0a7aa59fe62cbbc_r.png" data-actualsrc="https://pic1.zhimg.com/v2-ac1fa4fc0005af11c0a7aa59fe62cbbc_b.png" style="box-sizing: inherit; overflow: hidden; display: block; max-width: 100%; margin: 24px auto; cursor: -webkit-zoom-in;"><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;"><br style="box-sizing: inherit;"></p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">页面元素资源编码资源URI资源请求方式查询user_btn_get/api/user/{id}GET增加user_btn_add/api/userPOST编辑user_btn_edit/api/user/{id}PUT删除user_btn_del/api/user/{id}DELETE</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">在抽象成上述的映射关系后，我们的前后端的资源有了参照，我们对于用户组的权限授权就容易了。比如我授予一个用户增加、删除权限。在前端我们只需要检验该资源编码的有无就可以控制按钮的显示和隐藏，而在后端我们只需要统一拦截判断该用户是否具有URI和对应请求方式即可。</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">至于权限的统一拦截是放置在Zuul这个网关上，还是落在具体的后端服务的拦截器上（Filter、Inteceptor），都可以轻而易举地实现。不在局限于代码的侵入性。放置Zuul流程图如下：</p><img src="https://pic3.zhimg.com/v2-efbe4a2af48e48c86867a49f04759b7a_b.png" data-rawwidth="1426" data-rawheight="710" class="origin_image zh-lightbox-thumb lazy" width="1426" data-original="https://pic3.zhimg.com/v2-efbe4a2af48e48c86867a49f04759b7a_r.png" data-actualsrc="https://pic3.zhimg.com/v2-efbe4a2af48e48c86867a49f04759b7a_b.png" style="box-sizing: inherit; overflow: hidden; display: block; max-width: 100%; margin: 24px auto; cursor: -webkit-zoom-in;"><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;"><br style="box-sizing: inherit;"></p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">要是权限的统一拦截放置在Zuul上，会有一个问题，那就是后端服务安不安全，服务只需要通过注册中心，即可对其他服务进行调用。这里就涉及到后面的第三个模块，服务之间的鉴权。</p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">服务之间的鉴权</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">因为我们都知道服务之间开源通过注册中心寻到客户端后，直接远程过程调用的。对于生产上的各个服务，一个个敏感性的接口，我们更是需要加以保护。主题的流程如下图：</p><img src="https://pic4.zhimg.com/v2-2c574cb730d4e02834e238d0f7fc40eb_b.png" data-rawwidth="1700" data-rawheight="926" class="origin_image zh-lightbox-thumb lazy" width="1700" data-original="https://pic4.zhimg.com/v2-2c574cb730d4e02834e238d0f7fc40eb_r.png" data-actualsrc="https://pic4.zhimg.com/v2-2c574cb730d4e02834e238d0f7fc40eb_b.png" style="box-sizing: inherit; overflow: hidden; display: block; max-width: 100%; margin: 24px auto; cursor: -webkit-zoom-in;"><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;"><br style="box-sizing: inherit;"></p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">笔者的实现方式是基于Spring Cloud的FeignClient Inteceprot（自动申请服务token、传递当前上下文）和Mvc Inteceptor（服务token校验、更新当前上下文）来实现，从而对服务的安全性做进一步保护。</p><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">结合Spring Cloud的特性后，整体流程图如下：</p><img src="https://pic1.zhimg.com/v2-467d442498d0ed41372a7567fc36a714_b.png" data-rawwidth="2182" data-rawheight="1638" class="origin_image zh-lightbox-thumb lazy" width="2182" data-original="https://pic1.zhimg.com/v2-467d442498d0ed41372a7567fc36a714_r.png" data-actualsrc="https://pic1.zhimg.com/v2-467d442498d0ed41372a7567fc36a714_b.png" style="box-sizing: inherit; overflow: hidden; display: block; max-width: 100%; margin: 24px auto; cursor: -webkit-zoom-in;"><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;"><br style="box-sizing: inherit;"></p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">优化点</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">虽然通过上述的用户合法性检验、用户权限拦截以及服务之间的鉴权，保证了Api接口的安全性，但是其间的Http访问频率是比较高的，请求数量上来的时候，慢的问题是就会特别明显。可以考虑一定的优化策略，比如用户权限缓存、服务授权信息的派发与混存、定时刷新服务鉴权Token等。</p><h2 style="box-sizing: inherit; margin: 20px 0px; font-style: inherit; font-variant: inherit; font-weight: 700; font-stretch: inherit; line-height: inherit;">结语</h2><p style="box-sizing: inherit; margin-top: 20px; margin-bottom: 20px;">上述是笔者在项目里的大体思路，有兴趣的朋友可以借鉴我的开源项目，欢迎star：</p><ul style="box-sizing: inherit; margin: 20px 0px; padding: 0px 0px 0px 40px;"><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">gitchina：<a href="http://link.zhihu.com/?target=http%3A//git.oschina.net/geek_qi/ace-security%25EF%25BC%2588Jwt%25E3%2580%2581%25E7%2594%25A8%25E6%2588%25B7%25E6%259D%2583%25E9%2599%2590%25EF%25BC%2589" class=" wrap external" target="_blank" rel="nofollow noreferrer" style="box-sizing: inherit; color: rgb(34, 85, 153); border-bottom: 1px solid rgba(64, 64, 64, 0.72); word-break: break-all;">http://git.oschina.net/geek_qi/ace-security（Jwt、用户权限）<span class="icon-external" style="box-sizing: inherit; font-size: 24px; speak: none; font-feature-settings: normal; line-height: 1; -webkit-font-smoothing: antialiased; font-family: icomoon !important;"></span></a></li><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">github：<a href="http://link.zhihu.com/?target=https%3A//github.com/wxiaoqi/ace-security" class=" external" target="_blank" rel="nofollow noreferrer" style="box-sizing: inherit; color: rgb(34, 85, 153); border-bottom: 1px solid rgba(64, 64, 64, 0.72); word-break: break-all;"><span class="invisible" style="box-sizing: inherit; font-stretch: normal; font-size: 0px; line-height: 0; font-family: a; color: transparent; text-shadow: none; background-color: transparent;">https://</span><span class="visible" style="box-sizing: inherit;">github.com/wxiaoqi/ace-</span><span class="invisible" style="box-sizing: inherit; font-stretch: normal; font-size: 0px; line-height: 0; font-family: a; color: transparent; text-shadow: none; background-color: transparent;">security</span><span class="ellipsis" style="box-sizing: inherit;"></span><span class="icon-external" style="box-sizing: inherit; font-size: 24px; speak: none; font-feature-settings: normal; line-height: 1; -webkit-font-smoothing: antialiased; font-family: icomoon !important;"></span></a></li><li style="box-sizing: inherit; list-style-type: initial; margin-top: 10px; list-style-position: outside;">gitchina：<a href="http://link.zhihu.com/?target=http%3A//git.oschina.net/geek_qi/ace-gate%25EF%25BC%2588%25E6%259C%258D%25E5%258A%25A1%25E9%2589%25B4%25E6%259D%2583%25EF%25BC%2589" class=" wrap external" target="_blank" rel="nofollow noreferrer" style="box-sizing: inherit; color: rgb(34, 85, 153); border-bottom: 1px solid rgba(64, 64, 64, 0.72); word-break: break-all;">http://git.oschina.net/geek_qi/ace-gate（服务鉴权）</a></li></ul></div></div>
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getLong(created9_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getTimestamp(gtm_cre10_0_) returned 2017-10-25 12:28:19.0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getTimestamp(gtm_mod11_0_) returned 2017-10-25 12:28:19.0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(hits12_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getLong(modifie13_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getString(slug14_0_) returned null
2019-04-15 20:53:45 -2. ResultSet.getInt(status15_0_) returned 1
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getString(tags16_0_) returned null
2019-04-15 20:53:45 -2. ResultSet.getString(title17_0_) returned Spring Cloud下微服务权限方案
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getString(type18_0_) returned article
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.next() returned true
2019-04-15 20:53:45 -2. ResultSet.getLong(cid1_0_) returned 119
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(allow_co2_0_) returned 1
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(allow_fe3_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(allow_pi4_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getString(author5_0_) returned bootdo-jpa
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getString(categori6_0_) returned 
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(comments7_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getString(content8_0_) returned <h1 class="title" style="font-size: 34px; margin-top: 20px; margin-bottom: 0px; font-family: -apple-system, &quot;SF UI Display&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-weight: 700; line-height: 1.3; color: rgb(51, 51, 51); word-break: break-word !important;">Java程序员秋招面经大合集（BAT美团网易小米华为中兴等）</h1><div data-note-content="" class="show-content" style="color: rgb(47, 47, 47); font-size: 16px; line-height: 1.7; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; word-break: break-word !important;"><blockquote style="padding-top: 20px; padding-bottom: 20px; margin-bottom: 25px; font-size: 16px; border-left-width: 6px; border-left-color: rgb(180, 180, 180); background-color: rgb(247, 247, 247); line-height: 30px; word-break: break-word !important;"><ul style="padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">Cvte提前批</li><li style="line-height: 30px; margin-bottom: 10px;">阿里内推</li><li style="line-height: 30px; margin-bottom: 10px;">便利蜂内推</li><li style="line-height: 30px; margin-bottom: 10px;">小米内推</li><li style="line-height: 30px; margin-bottom: 10px;">金山wps内推</li><li style="line-height: 30px; margin-bottom: 10px;">多益网络</li><li style="line-height: 30px; margin-bottom: 10px;">拼多多学霸批</li><li style="line-height: 30px; margin-bottom: 10px;">搜狗校招</li><li style="line-height: 30px; margin-bottom: 10px;">涂鸦移动</li><li style="line-height: 30px; margin-bottom: 10px;">中国电信it研发中心</li><li style="line-height: 30px; margin-bottom: 10px;">中兴</li><li style="line-height: 30px; margin-bottom: 10px;">华为</li><li style="line-height: 30px; margin-bottom: 10px;">苏宁内推</li><li style="line-height: 30px; margin-bottom: 10px;">美团内推</li><li style="line-height: 30px; margin-bottom: 10px;">百度</li><li style="line-height: 30px; margin-bottom: 10px;">腾讯</li><li style="line-height: 30px; margin-bottom: 10px;">招商银行信用卡</li><li style="line-height: 30px; margin-bottom: 10px;">招银网络科技</li><li style="line-height: 30px; margin-bottom: 10px;">网易</li><li style="line-height: 30px; margin-bottom: 0px;">Vivo</li></ul></blockquote><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">Cvte提前批</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（电话）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">介绍你的项目</li><li style="line-height: 30px; margin-bottom: 10px;">加密解密了解么？几种算法，讲一下你了解的</li><li style="line-height: 30px; margin-bottom: 10px;">多线程了解么？什么是线程安全？</li><li style="line-height: 30px; margin-bottom: 10px;">说一个你最熟悉的设计模式</li><li style="line-height: 30px; margin-bottom: 10px;">讲一下你项目中用到了哪些设计模式</li><li style="line-height: 30px; margin-bottom: 10px;">Java的hashmap的原理</li><li style="line-height: 30px; margin-bottom: 10px;">Hashmap的线程安全性，什么是线程安全的？如何实现线程安全</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（视频）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">介绍项目</li><li style="line-height: 30px; margin-bottom: 10px;">Mysql的数据库引擎，区别特点</li><li style="line-height: 30px; margin-bottom: 10px;">设计模式了解？讲一下最熟悉的</li><li style="line-height: 30px; margin-bottom: 10px;">写一个单例模式，答主写的是双检查锁单例，问了为什么用Volatile，synchronize移到方法最外面会怎么样？</li><li style="line-height: 30px; margin-bottom: 10px;">单例模式在你项目里哪些应用？</li><li style="line-height: 30px; margin-bottom: 10px;">数据连接池</li><li style="line-height: 30px; margin-bottom: 10px;">对高负载有了解么</li><li style="line-height: 30px; margin-bottom: 10px;">你意向的技术方向是哪块？（答主回答的高并发，然后面试官说他是做高负载的）</li><li style="line-height: 30px; margin-bottom: 10px;">对高并发有了解么？</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">阿里内推</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（电话）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">听说你有博客，博客里大概有什么内容？</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍，最复杂的表</li><li style="line-height: 30px; margin-bottom: 10px;">Hashmap的原理</li><li style="line-height: 30px; margin-bottom: 10px;">Hashmap为什么大小是2的幂次</li><li style="line-height: 30px; margin-bottom: 10px;">介绍一下红黑树</li><li style="line-height: 30px; margin-bottom: 10px;">Arraylist的原理</li><li style="line-height: 30px; margin-bottom: 10px;">场景题：设计判断论文抄袭的系统</li><li style="line-height: 30px; margin-bottom: 10px;">堆排序的原理</li><li style="line-height: 30px; margin-bottom: 10px;">抽象工厂和工厂方法模式的区别</li><li style="line-height: 30px; margin-bottom: 10px;">工厂模式的思想</li><li style="line-height: 30px; margin-bottom: 10px;">object类你知道的方法</li><li style="line-height: 30px; margin-bottom: 10px;">哪里用到了工厂模式</li><li style="line-height: 30px; margin-bottom: 10px;">Forward和redirect的区别</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（视频）</h2><p style="margin-bottom: 25px; word-break: break-word !important;">1， 自我介绍<br>2， 项目介绍<br>3， 项目架构<br>4， 项目难点<br>5， Synchronize关键字为什么jdk1.5后效率提高了<br>6， 线程池的使用时的注意事项<br>7， Spring中autowire和resourse关键字的区别<br>8， Hashmap的原理<br>9， Hashmap的大小为什么指定为2的幂次<br>10， 讲一下线程状态转移图<br>11， 消息队列了解么<br>12， 分布式了解么</p><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">便利蜂内推</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（电话）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">volatile和synchronized</li><li style="line-height: 30px; margin-bottom: 10px;">来个算法题：一个无序数组，其中一个数字出现的次数大于其他数字之和，求这个数字 （主元素）</li><li style="line-height: 30px; margin-bottom: 10px;">答完再来一个：一个数组，有正有负，不改变顺序的情况下，求和最大的最长子序列</li><li style="line-height: 30px; margin-bottom: 10px;">项目用到什么数据库？隔离级别？每个隔离级别各做了什么</li><li style="line-height: 30px; margin-bottom: 10px;">数据库的索引？mysql不同引擎索引的区别</li><li style="line-height: 30px; margin-bottom: 10px;">垃圾回收算法的过程</li><li style="line-height: 30px; margin-bottom: 10px;">你了解的垃圾收集器？ Cms收集器的过程</li><li style="line-height: 30px; margin-bottom: 10px;">怎样进入老年代？</li><li style="line-height: 30px; margin-bottom: 10px;">平时用到了什么设计模式？</li><li style="line-height: 30px; margin-bottom: 10px;">讲一下你最熟的两个设计模式</li><li style="line-height: 30px; margin-bottom: 10px;">用过什么系统？shell写过脚本吗？</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">小米内推</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（电话）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">看你最近博客写的是redis，介绍redis和mysql的区别</li><li style="line-height: 30px; margin-bottom: 10px;">Redis的应用场景</li><li style="line-height: 30px; margin-bottom: 10px;">Hashmap的原理</li><li style="line-height: 30px; margin-bottom: 10px;">Hashmap中jdk1.8之后做了哪些优化</li><li style="line-height: 30px; margin-bottom: 10px;">垃圾回收的过程</li><li style="line-height: 30px; margin-bottom: 10px;">Jvm的参数设置</li><li style="line-height: 30px; margin-bottom: 10px;">项目中的优化</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">金山wps内推</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（电话）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">对Java的面向对象的理解</li><li style="line-height: 30px; margin-bottom: 10px;">对java多线程的理解</li><li style="line-height: 30px; margin-bottom: 10px;">数据库的索引</li><li style="line-height: 30px; margin-bottom: 10px;">数据库的隔离级别</li><li style="line-height: 30px; margin-bottom: 10px;">设计模式的理解</li><li style="line-height: 30px; margin-bottom: 10px;">讲几个设计模式</li><li style="line-height: 30px; margin-bottom: 10px;">对算法有什么了解？答主先回答了动态规划，解释了一下dp的思想</li><li style="line-height: 30px; margin-bottom: 10px;">快排的思想讲一下</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（电话）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">Tcp怎么保证可靠传输（中间穿插了好多小问题）</li><li style="line-height: 30px; margin-bottom: 10px;">Tcp的拥塞控制</li><li style="line-height: 30px; margin-bottom: 10px;">让你设计一个即时聊天的系统</li><li style="line-height: 30px; margin-bottom: 10px;">支付宝转账，是如何实现，几个小时通知转账成功的（面试官想让回答长连接，答主一直没get到点）</li><li style="line-height: 30px; margin-bottom: 10px;">解释一下长连接</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">多益网络</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（视频）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">对面向对象的理解</li><li style="line-height: 30px; margin-bottom: 10px;">介绍多态</li><li style="line-height: 30px; margin-bottom: 10px;">Java新建线程有哪几种方式</li><li style="line-height: 30px; margin-bottom: 10px;">线程池的作用</li><li style="line-height: 30px; margin-bottom: 10px;">看过框架源码么</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">拼多多学霸批</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场面）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">手撕算法：一棵二叉排序树，给定一个数，找到与给定数差值最小的数</li><li style="line-height: 30px; margin-bottom: 10px;">场景题：设计一个系统，解决抢购时所需要的大量的短链接的功能，如何保证高并发，如何设计短链接</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（现场面）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">代码量多少</li><li style="line-height: 30px; margin-bottom: 10px;">给了一张纸，各种名词，会的写出来</li><li style="line-height: 30px; margin-bottom: 10px;">然后给它解释那些会的</li><li style="line-height: 30px; margin-bottom: 10px;">设计题：设计一个系统，记录qq用户前一天的登录状态，提供16g内存和2tb的硬盘，要做到查询指定qq号的前一天的登录状态，快速查询O(1)复杂度</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">搜狗校招</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场）：</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">手撕算法：两个排序的数组A和B分别含有m和n个数，找到两个排序数组的中位数，答主用的二分，时间复杂度为O(log (m+n))。结果面试官不满意，让用归并的思想做，时间复杂度其实更高了</li><li style="line-height: 30px; margin-bottom: 10px;">介绍网络编程</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">涂鸦移动</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">数据库的索引原理</li><li style="line-height: 30px; margin-bottom: 10px;">索引使用的注意事项</li><li style="line-height: 30px; margin-bottom: 10px;">数据库的引擎</li><li style="line-height: 30px; margin-bottom: 10px;">Java垃圾回收机制</li><li style="line-height: 30px; margin-bottom: 10px;">Java的finalize，finally，final三个关键字的区别和应用场景</li><li style="line-height: 30px; margin-bottom: 10px;">String类可以被继承么<br>手撕算法：假设你是一个专业的窃贼，准备沿着一条街打劫房屋。每个房子都存放着特定金额的钱。你面临的唯一约束条件是：相邻的房子装着相互联系的防盗系统，且 当相邻的两个房子同一天被打劫时，该系统会自动报警。<br>给定一个非负整数列表，表示每个房子中存放的钱， 算一算，如果今晚去打劫，你最多可以得到多少钱 在不触动报警装置的情况下。</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（电话）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">对游戏的了解</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">算法题：给一个整数数组，找到两个数使得他们的和等于一个给定的数 target。</li><li style="line-height: 30px; margin-bottom: 10px;">红黑树</li><li style="line-height: 30px; margin-bottom: 10px;">Redis的应用</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">中国电信it研发中心</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目里用的什么服务器</li><li style="line-height: 30px; margin-bottom: 10px;">自己写一个tomcat服务器，你会怎么写</li><li style="line-height: 30px; margin-bottom: 10px;">分布式服务器会出现哪些问题</li><li style="line-height: 30px; margin-bottom: 10px;">怎么解决session一致性缓存的问题</li><li style="line-height: 30px; margin-bottom: 10px;">Redis的优势和特点</li><li style="line-height: 30px; margin-bottom: 10px;">一千万用户并发抢购，怎么设计</li><li style="line-height: 30px; margin-bottom: 10px;">如果成功的用户有10万，redis存不下怎么处理</li><li style="line-height: 30px; margin-bottom: 10px;">你项目中的难点</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">介绍spring中的熟悉的注解</li><li style="line-height: 30px; margin-bottom: 10px;">让你实现autowire注解的功能你会如何实现</li><li style="line-height: 30px; margin-bottom: 10px;">Redis和mysql的区别</li><li style="line-height: 30px; margin-bottom: 10px;">Redis的持久化有哪些方式，具体原理</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">中兴</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">专业面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">你了解的设计模式，讲两个</li><li style="line-height: 30px; margin-bottom: 10px;">Java collection类，集合，讲两个你了解的，说实现原理</li><li style="line-height: 30px; margin-bottom: 10px;">Java线程池的作用</li><li style="line-height: 30px; margin-bottom: 10px;">你觉得你在你实验室处于什么水平</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">综合面试（现场）</h2><p style="margin-bottom: 25px; word-break: break-word !important;">说好的综合面试纯聊天呢？<br>1． 自我介绍<br>2． 项目介绍<br>3． 说一下你知道的设计模式<br>4． 画一个策略模式的uml图<br>5． Java多线程的理解<br>6． 内存屏障是什么<br>7． 数据库索引<br>8． 项目中的优化<br>9． 然后开始聊人生<br>10． 你的缺点，你最不喜欢什么样的人，你的家庭等等</p><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">华为</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目架构</li><li style="line-height: 30px; margin-bottom: 10px;">项目一个完整的执行流程（由于我是搞java的，而面试官是搞c的，所以全程尬聊）</li><li style="line-height: 30px; margin-bottom: 10px;">项目优化</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">怎么管理项目进度</li><li style="line-height: 30px; margin-bottom: 10px;">平常的爱好</li><li style="line-height: 30px; margin-bottom: 10px;">感觉面试官也不是搞java的，所以又是一阵尬聊</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">苏宁内推</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">面过哪些公司了</li><li style="line-height: 30px; margin-bottom: 10px;">有哪些offer了</li><li style="line-height: 30px; margin-bottom: 10px;">聊到多益，于是开始聊最近微博上很火的多益老板</li><li style="line-height: 30px; margin-bottom: 10px;">得出结论，我和面试官都觉得多益老板三观有问题，但做游戏就是要偏执的人</li><li style="line-height: 30px; margin-bottom: 10px;">你博客主要哪方面的</li><li style="line-height: 30px; margin-bottom: 10px;">多线程并发包了解么</li><li style="line-height: 30px; margin-bottom: 10px;">讲一下countDownLatch</li></ol><p style="margin-bottom: 25px; word-break: break-word !important;">苏宁聊了20分钟八卦就面完了，一轮技术面</p><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">美团内推</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（电话）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">Redis介绍</li><li style="line-height: 30px; margin-bottom: 10px;">了解redis源码么</li><li style="line-height: 30px; margin-bottom: 10px;">了解redis集群么</li><li style="line-height: 30px; margin-bottom: 10px;">Hashmap的原理</li><li style="line-height: 30px; margin-bottom: 10px;">hashmap容量为什么是2的幂次</li><li style="line-height: 30px; margin-bottom: 10px;">hashset的源码</li><li style="line-height: 30px; margin-bottom: 10px;">object类你知道的方法</li><li style="line-height: 30px; margin-bottom: 10px;">hashcode和equals</li><li style="line-height: 30px; margin-bottom: 10px;">你重写过hashcode和equals么，要注意什么</li><li style="line-height: 30px; margin-bottom: 10px;">假设现在一个学生类，有学号和姓名，我现在hashcode方法重写的时候，只将学号参与计算，会出现什么情况？</li><li style="line-height: 30px; margin-bottom: 10px;">往set里面put一个学生对象，然后将这个学生对象的学号改了，再put进去，可以放进set么？并讲出为什么</li><li style="line-height: 30px; margin-bottom: 10px;">Redis的持久化？有哪些方式，原理是什么？</li><li style="line-height: 30px; margin-bottom: 10px;">讲一下稳定的排序算法和不稳定的排序算法</li><li style="line-height: 30px; margin-bottom: 10px;">讲一下快速排序的思想</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">讲一下数据的acid</li><li style="line-height: 30px; margin-bottom: 10px;">什么是一致性</li><li style="line-height: 30px; margin-bottom: 10px;">什么是隔离性</li><li style="line-height: 30px; margin-bottom: 10px;">Mysql的隔离级别</li><li style="line-height: 30px; margin-bottom: 10px;">每个隔离级别是如何解决</li><li style="line-height: 30px; margin-bottom: 10px;">Mysql要加上nextkey锁，语句该怎么写</li><li style="line-height: 30px; margin-bottom: 10px;">Java的内存模型，垃圾回收</li><li style="line-height: 30px; margin-bottom: 10px;">线程池的参数</li><li style="line-height: 30px; margin-bottom: 10px;">每个参数解释一遍</li><li style="line-height: 30px; margin-bottom: 10px;">然后面试官设置了每个参数，给了是个线程，让描述出完整的线程池执行的流程</li><li style="line-height: 30px; margin-bottom: 10px;">Nio和IO有什么区别</li><li style="line-height: 30px; margin-bottom: 10px;">Nio和aio的区别</li><li style="line-height: 30px; margin-bottom: 10px;">Spring的aop怎么实现</li><li style="line-height: 30px; margin-bottom: 10px;">Spring的aop有哪些实现方式</li><li style="line-height: 30px; margin-bottom: 10px;">动态代理的实现方式和区别</li><li style="line-height: 30px; margin-bottom: 10px;">Linux了解么</li><li style="line-height: 30px; margin-bottom: 10px;">怎么查看系统负载</li><li style="line-height: 30px; margin-bottom: 10px;">Cpu load的参数如果为4，描述一下现在系统处于什么情况</li><li style="line-height: 30px; margin-bottom: 10px;">Linux，查找磁盘上最大的文件的命令</li><li style="line-height: 30px; margin-bottom: 10px;">Linux，如何查看系统日志文件</li><li style="line-height: 30px; margin-bottom: 10px;">手撕算法：leeetcode原题 22，Generate Parentheses，给定 n 对括号，请写一个函数以将其生成新的括号组合，并返回所有组合结果。</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">三面（现场）</h2><p style="margin-bottom: 25px; word-break: break-word !important;">三面没怎么问技术，问了很多技术管理方面的问题</p><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">怎么管理项目成员</li><li style="line-height: 30px; margin-bottom: 10px;">当意见不一致时，如何沟通并说服开发成员，并举个例子</li><li style="line-height: 30px; margin-bottom: 10px;">怎么保证项目的进度</li><li style="line-height: 30px; margin-bottom: 10px;">数据库的索引原理</li><li style="line-height: 30px; margin-bottom: 10px;">非聚簇索引和聚簇索引</li><li style="line-height: 30px; margin-bottom: 10px;">索引的使用注意事项</li><li style="line-height: 30px; margin-bottom: 10px;">联合索引</li><li style="line-height: 30px; margin-bottom: 10px;">从底层解释最左匹配原则</li><li style="line-height: 30px; margin-bottom: 10px;">Mysql对联合索引有优化么？会自动调整顺序么？哪个版本开始优化？</li><li style="line-height: 30px; margin-bottom: 10px;">Redis的应用</li><li style="line-height: 30px; margin-bottom: 10px;">Redis的持久化的方式和原理</li><li style="line-height: 30px; margin-bottom: 10px;">技术选型，一个新技术和一个稳定的旧技术，你会怎么选择，选择的考虑有哪些</li><li style="line-height: 30px; margin-bottom: 10px;">说你印象最深的美团点评技术团队的三篇博客</li><li style="line-height: 30px; margin-bottom: 10px;">最近在学什么新技术</li><li style="line-height: 30px; margin-bottom: 10px;">你是怎么去接触一门新技术的</li><li style="line-height: 30px; margin-bottom: 10px;">会看哪些书</li><li style="line-height: 30px; margin-bottom: 10px;">怎么选择要看的书</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">百度</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">Java中的多态</li><li style="line-height: 30px; margin-bottom: 10px;">Object类下的方法</li><li style="line-height: 30px; margin-bottom: 10px;">Finalize的作用和使用场景</li><li style="line-height: 30px; margin-bottom: 10px;">Hashcode和equals</li><li style="line-height: 30px; margin-bottom: 10px;">为什么要同时重写hashcode和equals</li><li style="line-height: 30px; margin-bottom: 10px;">不同时重写会出现哪些问题</li><li style="line-height: 30px; margin-bottom: 10px;">Hashmap的原理</li><li style="line-height: 30px; margin-bottom: 10px;">Hashmap如何变线程安全，每种方式的优缺点</li><li style="line-height: 30px; margin-bottom: 10px;">垃圾回收机制</li><li style="line-height: 30px; margin-bottom: 10px;">Jvm的参数你知道的说一下</li><li style="line-height: 30px; margin-bottom: 10px;">设计模式了解的说一下啊</li><li style="line-height: 30px; margin-bottom: 10px;">手撕一个单例模式</li><li style="line-height: 30px; margin-bottom: 10px;">快速排序的思想讲一下</li><li style="line-height: 30px; margin-bottom: 10px;">给个数组，模拟快排的过程</li><li style="line-height: 30px; margin-bottom: 10px;">手写快排</li><li style="line-height: 30px; margin-bottom: 10px;">设计题，一个图书馆管理系统，数据库怎么设计，需求自己定</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">Redis的特点</li><li style="line-height: 30px; margin-bottom: 10px;">分布式事务了解么</li><li style="line-height: 30px; margin-bottom: 10px;">反爬虫的机制，有哪些方式</li><li style="line-height: 30px; margin-bottom: 10px;">手撕算法：反转单链表</li><li style="line-height: 30px; margin-bottom: 10px;">手撕算法：实现类似微博子结构的数据结构，输入一系列父子关系，输出一个类似微博评论的父子结构图</li><li style="line-height: 30px; margin-bottom: 10px;">手写java多线程</li><li style="line-height: 30px; margin-bottom: 10px;">手写java的soeket编程，服务端和客户端</li><li style="line-height: 30px; margin-bottom: 10px;">进程间的通信方式</li><li style="line-height: 30px; margin-bottom: 10px;">手撕算法： 爬楼梯，写出状态转移方程</li><li style="line-height: 30px; margin-bottom: 10px;">智力题：时针分针什么时候重合</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">三面（现场）</h2><p style="margin-bottom: 25px; word-break: break-word !important;">由于三面面试官不懂java，我不熟c加加，所以全程尬聊</p><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">手撕算法：给定一个数字三角形，找到从顶部到底部的最小路径和。每一步可以移动到下面一行的相邻数字上。</li><li style="line-height: 30px; margin-bottom: 10px;"></li><li style="line-height: 30px; margin-bottom: 10px;">然后继续在这个问题上扩展</li><li style="line-height: 30px; margin-bottom: 10px;">求出最短那条的路径</li><li style="line-height: 30px; margin-bottom: 10px;">递归求出所有的路径</li><li style="line-height: 30px; margin-bottom: 10px;">设计模式讲一下熟悉的</li><li style="line-height: 30px; margin-bottom: 10px;">会不会滥用设计模式</li><li style="line-height: 30px; margin-bottom: 10px;">多线程条件变量为什么要在while体里</li><li style="line-height: 30px; margin-bottom: 10px;">你遇到什么挫折</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">腾讯</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">Hibernate的作用，你的理解</li><li style="line-height: 30px; margin-bottom: 10px;">多线程的理解，如何保证线程安全</li><li style="line-height: 30px; margin-bottom: 10px;">mysql数据库的引擎和区别</li><li style="line-height: 30px; margin-bottom: 10px;">场景题：千万用户抢购，如何处理高并发，并且有一个链接，指向前一天抢购成功的用户，如何设计这个系统和数据库</li><li style="line-height: 30px; margin-bottom: 10px;">如果后台处理抢购请求的服务器，每次最多承受200的负载，系统该怎么设计</li><li style="line-height: 30px; margin-bottom: 10px;">手撕算法：最小公倍数和最大公约数</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目里一个完整请求的流程</li><li style="line-height: 30px; margin-bottom: 10px;">项目的优化</li><li style="line-height: 30px; margin-bottom: 10px;">Hibernate和mybatis的区别</li><li style="line-height: 30px; margin-bottom: 10px;">为什么用ssh框架</li><li style="line-height: 30px; margin-bottom: 10px;">Mysql的容灾备份</li><li style="line-height: 30px; margin-bottom: 10px;">Redis和memcache 的区别</li><li style="line-height: 30px; margin-bottom: 10px;">为什么选择redis</li><li style="line-height: 30px; margin-bottom: 10px;">Java的full gc</li><li style="line-height: 30px; margin-bottom: 10px;">Full gc会导致什么问题</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">招商银行信用卡</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">分布式事务</li><li style="line-height: 30px; margin-bottom: 10px;">设计模式</li><li style="line-height: 30px; margin-bottom: 10px;">访问者模式</li><li style="line-height: 30px; margin-bottom: 10px;">装饰者模式</li><li style="line-height: 30px; margin-bottom: 10px;">有哪些offer</li><li style="line-height: 30px; margin-bottom: 10px;">为什么还来我们这</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">招银网络科技</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">写一个两个有序链表合并成一个有序链表</li><li style="line-height: 30px; margin-bottom: 10px;">死锁是什么呢</li><li style="line-height: 30px; margin-bottom: 10px;">怎么解决死锁</li><li style="line-height: 30px; margin-bottom: 10px;">http请求流程</li><li style="line-height: 30px; margin-bottom: 10px;">为什么负载均衡</li><li style="line-height: 30px; margin-bottom: 10px;">怎么实现负载均衡</li><li style="line-height: 30px; margin-bottom: 10px;">数据库挂了怎么办？除了热备份还有什么方法</li><li style="line-height: 30px; margin-bottom: 10px;">讲讲你对spring的理解，不要把ioc和aop背给我听</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">算法：找出两个数组相等的数，不能用其他数据结构</li><li style="line-height: 30px; margin-bottom: 10px;">算法：给定一个数字，一个数组，找出数组中相加等于这两个数的和，不能用数据结构</li><li style="line-height: 30px; margin-bottom: 10px;">算法：如何判断一个树是不是另一颗树的子树</li><li style="line-height: 30px; margin-bottom: 10px;">如何解决并发访问的错误</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">网易</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面（现场）</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">I++操作怎么保证线程安全</li><li style="line-height: 30px; margin-bottom: 10px;">场景题：设计一个下单系统，下单成功后可以给用户发优惠券</li><li style="line-height: 30px; margin-bottom: 10px;">接上面场景题：服务器挂了，优惠券还没发怎么办</li><li style="line-height: 30px; margin-bottom: 10px;">数据库挂了怎么怎么办</li><li style="line-height: 30px; margin-bottom: 10px;">怎么保证一致性</li><li style="line-height: 30px; margin-bottom: 10px;">分布式事务知道么</li><li style="line-height: 30px; margin-bottom: 10px;">介绍分布式事务</li><li style="line-height: 30px; margin-bottom: 10px;">你的职业规划</li></ol><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">二面</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">Nio的原理</li><li style="line-height: 30px; margin-bottom: 10px;">Channel和buffer</li><li style="line-height: 30px; margin-bottom: 10px;">directBuffer和buffer的区别</li><li style="line-height: 30px; margin-bottom: 10px;">nio和aio的区别</li><li style="line-height: 30px; margin-bottom: 10px;">锁的实现原理</li><li style="line-height: 30px; margin-bottom: 10px;">怎么解决缓存和主存的一致性问题</li><li style="line-height: 30px; margin-bottom: 10px;">缓存还没更新到主存，服务器挂了怎么办</li><li style="line-height: 30px; margin-bottom: 10px;">数据库挂了怎么办</li></ol><h1 style="font-size: 26px; margin-top: 0px; margin-bottom: 15px; font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); text-rendering: optimizeLegibility;">Vivo</h1><h2 style="font-family: inherit; font-weight: 700; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility;">一面</h2><ol style="margin-bottom: 20px; padding: 0px; margin-left: 22px; word-break: break-word !important;"><li style="line-height: 30px; margin-bottom: 10px;">自我介绍</li><li style="line-height: 30px; margin-bottom: 10px;">项目介绍</li><li style="line-height: 30px; margin-bottom: 10px;">Hibernate的batch有数量限制么</li><li style="line-height: 30px; margin-bottom: 10px;">Jquery用过么</li><li style="line-height: 30px; margin-bottom: 10px;">Extjs的优缺点</li><li style="line-height: 30px; margin-bottom: 10px;">有没有扩展过extjs</li><li style="line-height: 30px; margin-bottom: 10px;">读写锁</li><li style="line-height: 30px; margin-bottom: 10px;">什么时候用读锁</li><li style="line-height: 30px; margin-bottom: 10px;">什么时候用写锁</li><li style="line-height: 30px; margin-bottom: 10px;">Cas的原理，使用场景</li><li style="line-height: 30px; margin-bottom: 10px;">数据库的瓶颈</li></ol><div><br></div><div><br></div><div>转自<a href="http://www.jianshu.com//p/72712546648b" target="_blank">http://www.jianshu.com//p/72712546648b</a></div></div>
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getLong(created9_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getTimestamp(gtm_cre10_0_) returned 2017-10-13 13:45:20.0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getTimestamp(gtm_mod11_0_) returned 2017-10-13 13:45:20.0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(hits12_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getLong(modifie13_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getString(slug14_0_) returned null
2019-04-15 20:53:45 -2. ResultSet.getInt(status15_0_) returned 1
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getString(tags16_0_) returned null
2019-04-15 20:53:45 -2. ResultSet.getString(title17_0_) returned Java程序员秋招面经大合集（BAT美团网易小米华为中兴等）
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getString(type18_0_) returned article
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.next() returned true
2019-04-15 20:53:45 -2. ResultSet.getLong(cid1_0_) returned 118
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(allow_co2_0_) returned 1
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(allow_fe3_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(allow_pi4_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getString(author5_0_) returned bootdo-jpa
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getString(categori6_0_) returned 
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(comments7_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getString(content8_0_) returned <article style="padding: 20px 0px; border-top: 1px solid rgb(228, 235, 244); border-left: 1px solid rgb(228, 235, 244); border-right: 1px solid rgb(228, 235, 244); color: rgb(51, 51, 51); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; font-size: 16px;"><div id="article_content" class="article_content csdn-tracking-statistics" data-mod="popu_307" data-dsm="post" style="margin: 0px 0px 50px; padding: 20px 30px 0px; color: rgb(69, 69, 69); overflow: hidden;"><div class="markdown_views" style="margin: 0px; padding: 0px; font-family: &quot;microsoft yahei&quot;; font-size: 15px; color: rgb(63, 63, 63);"><h1 id="elementui-select组件使用详解" style="margin-top: 0.8em; margin-bottom: 0.8em; font-size: 2.6em; font-family: inherit; padding: 0px;">elementUI select组件使用详解</h1><ul style="margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; list-style-position: initial; list-style-image: initial;"><li style="margin: 0px 0px 0px 40px; padding: 0px; list-style: disc;"><strong>动态生成option选项</strong></li><li style="margin: 0px 0px 0px 40px; padding: 0px; list-style: disc;"><strong>option选项绑定对应的文本值和value值</strong></li><li style="margin: 0px 0px 0px 40px; padding: 0px; list-style: disc;"><strong>作为表单项目，新增、编辑功能</strong></li><li style="margin: 0px 0px 0px 40px; padding: 0px; list-style: disc;"><strong>对选项改变后触发相关事件</strong></li></ul><pre class="prettyprint" style="font-family: &quot;Source Code Pro&quot;, monospace; font-size: 14px; white-space: nowrap; padding: 5px 5px 5px 60px; margin-bottom: 1.1em; line-height: 1.45; background-color: rgba(128, 128, 128, 0.05); border-color: rgba(128, 128, 128, 0.075); border-radius: 0px; position: relative; overflow-y: hidden;"><code class="hljs lasso has-numbering" style="font-family: &quot;Source Code Pro&quot;, monospace; white-space: pre; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; display: block; word-wrap: normal;"><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>div id<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"app"</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
    <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-form</span> :model<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"form"</span>  ref<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"form"</span> label<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-width</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"100px"</span> class<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"demo-ruleForm"</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
        <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-form</span><span class="hljs-attribute" style="margin: 0px; padding: 0px;">-item</span> label<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"姓名选择"</span> prop<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"typeId"</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
            <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-select</span> v<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-model</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"form.typeId"</span> placeholder<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"请选择"</span> @change<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"change"</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
                <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-option</span> v<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-for</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"item in items"</span> :label<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"item.name"</span> :value<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"item.id"</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;&lt;</span>/el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-option</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
            <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>/el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-select</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
        <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>/el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-form</span><span class="hljs-attribute" style="margin: 0px; padding: 0px;">-item</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
        <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-form</span><span class="hljs-attribute" style="margin: 0px; padding: 0px;">-item</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
            <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-button</span> <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">type</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"primary"</span> @click<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"add()"</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>新增<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>/el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-button</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
            <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-button</span> <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">type</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"primary"</span> @click<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"edit()"</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>编辑<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>/el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-button</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
            <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-button</span> @click<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">=</span><span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"cancel()"</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>取消<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>/el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-button</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
        <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>/el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-form</span><span class="hljs-attribute" style="margin: 0px; padding: 0px;">-item</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
    <span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>/el<span class="hljs-attribute" style="margin: 0px; padding: 0px;">-form</span><span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span>
<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&lt;</span>/div<span class="hljs-subst" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0);">&gt;</span></code><ul class="pre-numbering" style="margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 6px 0px 40px; list-style: none; position: absolute; width: 50px; background-color: rgb(238, 238, 238); top: 0px; left: 0px; border-right: 1px solid rgb(221, 221, 221); text-align: right;"><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">1</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">2</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">3</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">4</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">5</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">6</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">7</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">8</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">9</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">10</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">11</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">12</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">13</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">14</li></ul></pre><pre class="prettyprint" style="font-family: &quot;Source Code Pro&quot;, monospace; font-size: 14px; white-space: nowrap; padding: 5px 5px 5px 60px; margin-bottom: 1.1em; line-height: 1.45; background-color: rgba(128, 128, 128, 0.05); border-color: rgba(128, 128, 128, 0.075); border-radius: 0px; position: relative; overflow-y: hidden;"><code class="hljs xml has-numbering" style="font-family: &quot;Source Code Pro&quot;, monospace; white-space: pre; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; display: block; word-wrap: normal;"><span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">script</span>&gt;</span><span class="javascript" style="margin: 0px; padding: 0px;">
    <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">var</span> vm = <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">new</span> Vue({
        el:<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"#app"</span>,
        mounted(){
            <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">this</span>.getData();
        },
        data:{
            form:{
                typeId:<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">''</span>
            },
            items:[],
            datas:[{name:<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"senbo"</span>,id:<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">'1'</span>},{name:<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"muse"</span>,id:<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">'2'</span>},{name:<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"bobo"</span>,id:<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">'3'</span>}]
        },
        methods:{
            getData:<span class="hljs-function" style="margin: 0px; padding: 0px;"><span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">function</span><span class="hljs-params" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">()</span>{</span>
                <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">this</span>.items = <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">this</span>.datas; 

            },
            add:<span class="hljs-function" style="margin: 0px; padding: 0px;"><span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">function</span><span class="hljs-params" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">()</span>{</span>
                <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">this</span>.form.typeId = <span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">""</span>;
            },
            cancel(){
                 <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">this</span>.form.typeId = <span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">""</span>;   
            },
            change:<span class="hljs-function" style="margin: 0px; padding: 0px;"><span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">function</span><span class="hljs-params" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">()</span>{</span>
                console.log(<span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">this</span>.form.typeId)
            },
            edit:<span class="hljs-function" style="margin: 0px; padding: 0px;"><span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">function</span><span class="hljs-params" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">()</span>{</span>
                <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">this</span>.form.typeId =<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"1"</span>;
            }
        }
    })
</span><span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;/<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">script</span>&gt;</span></code><ul class="pre-numbering" style="margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 6px 0px 40px; list-style: none; position: absolute; width: 50px; background-color: rgb(238, 238, 238); top: 0px; left: 0px; border-right: 1px solid rgb(221, 221, 221); text-align: right;"><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">1</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">2</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">3</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">4</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">5</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">6</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">7</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">8</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">9</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">10</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">11</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">12</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">13</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">14</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">15</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">16</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">17</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">18</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">19</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">20</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">21</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">22</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">23</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">24</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">25</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">26</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">27</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">28</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">29</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">30</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">31</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">32</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">33</li></ul></pre></div></div></article><div class="article_copyright" style="margin: 0px 0px -20px; padding: 0px 20px 30px; border-bottom: 1px solid rgb(228, 235, 244); border-left: 1px solid rgb(228, 235, 244); border-right: 1px solid rgb(228, 235, 244); font-size: 14px; color: rgb(120, 128, 135); clear: both; overflow: hidden; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;">转自http://blog.csdn.net/museions/article/details/77824361</div>
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getLong(created9_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getTimestamp(gtm_cre10_0_) returned 2017-10-12 10:41:07.0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getTimestamp(gtm_mod11_0_) returned 2017-10-12 10:41:07.0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(hits12_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getLong(modifie13_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getString(slug14_0_) returned null
2019-04-15 20:53:45 -2. ResultSet.getInt(status15_0_) returned 1
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getString(tags16_0_) returned null
2019-04-15 20:53:45 -2. ResultSet.getString(title17_0_) returned elementUI select组件使用详解
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getString(type18_0_) returned article
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.next() returned true
2019-04-15 20:53:45 -2. ResultSet.getLong(cid1_0_) returned 112
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(allow_co2_0_) returned 1
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(allow_fe3_0_) returned 1
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(allow_pi4_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getString(author5_0_) returned bootdo-jpa
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getString(categori6_0_) returned null
2019-04-15 20:53:45 -2. ResultSet.getInt(comments7_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getString(content8_0_) returned <p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;">在Spring boot项目的实际开发中，我们有时需要项目服务启动时加载一些数据或预先完成某些动作。为了解决这样的问题，Spring&nbsp;boot 为我们提供了一个方法：通过实现接口 CommandLineRunner 来实现这样的需求。</p><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;">实现方式：只需要一个类即可，无需其他配置。&nbsp;</p><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;">实现步骤：</p><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;">1.创建实现接口 CommandLineRunner 的类 MyStartupRunnerTest</p><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;"></p><div class="dp-highlighter bg_java" style="font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px; background-color: rgb(231, 229, 220); width: 936.531px; overflow-x: auto; overflow-y: hidden; padding-top: 1px; position: relative; border-color: rgb(204, 204, 204); color: rgb(85, 85, 85); margin: 18px 0px !important;"><div class="bar" style="padding-left: 45px;"><div class="tools" style="padding: 3px 8px 10px 10px; font-stretch: normal; font-size: 9px; line-height: normal; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; color: silver; background-color: rgb(248, 248, 248); border-left: 3px solid rgb(108, 226, 108); border-right: 1px solid rgb(231, 229, 220);"><strong>[java]</strong>&nbsp;<a target="_blank" href="http://blog.csdn.net/mimica247706624/article/details/58596490#" class="ViewSource" title="view plain" style="background-image: url(&quot;images/default/ico_plain.gif&quot;); background-position: left top; background-repeat: no-repeat; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">view plain</a>&nbsp;<a target="_blank" href="http://blog.csdn.net/mimica247706624/article/details/58596490#" class="CopyToClipboard" title="copy" style="background-image: url(&quot;images/default/ico_copy.gif&quot;); background-position: left top; background-repeat: no-repeat; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">copy</a><div style="position: absolute; left: 559px; top: 655px; width: 18px; height: 18px; z-index: 99;"></div><div style="position: absolute; left: 721px; top: 723px; width: 18px; height: 18px; z-index: 99;"></div></div></div><ol start="1" class="dp-j" style="padding: 0px; border: none; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-right: 0px !important; margin-bottom: 1px !important; margin-left: 45px !important;"><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">package</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;com.energy;&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">import</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;org.springframework.boot.CommandLineRunner;&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">import</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;org.springframework.core.annotation.Order;&nbsp;&nbsp;</span></span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">import</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;org.springframework.stereotype.Component;&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="comment" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;">/**</span>&nbsp;</span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="comment" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;">&nbsp;*&nbsp;Created&nbsp;by&nbsp;CavanLiu&nbsp;on&nbsp;2017/2/28&nbsp;0028.</span>&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="comment" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;">&nbsp;*/</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Component</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Order</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">(value=</span><span class="number" style="margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;">1</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">)</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">public</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">class</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;MyStartupRunnerTest&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">implements</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;CommandLineRunner&nbsp;&nbsp;</span></span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">{&nbsp;&nbsp;</span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Override</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">public</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">void</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;run(String...&nbsp;args)&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">throws</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;Exception&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class="string" style="margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;">"&gt;&gt;&gt;&gt;This&nbsp;is&nbsp;MyStartupRunnerTest&nbsp;Order=1.&nbsp;Only&nbsp;testing&nbsp;CommandLineRunner...&lt;&lt;&lt;&lt;"</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">);&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">}&nbsp;&nbsp;</span></li></ol></div><p style="margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: Arial; font-size: 14px;"></p><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;">2.创建实现接口CommandLineRunner 的类 MyStartupRunnerTest2</p><div class="dp-highlighter bg_java" style="font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px; background-color: rgb(231, 229, 220); width: 936.531px; overflow-x: auto; overflow-y: hidden; padding-top: 1px; position: relative; border-color: rgb(204, 204, 204); color: rgb(85, 85, 85); margin: 18px 0px !important;"><div class="bar" style="padding-left: 45px;"><div class="tools" style="padding: 3px 8px 10px 10px; font-stretch: normal; font-size: 9px; line-height: normal; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; color: silver; background-color: rgb(248, 248, 248); border-left: 3px solid rgb(108, 226, 108); border-right: 1px solid rgb(231, 229, 220);"><strong>[java]</strong>&nbsp;<a target="_blank" href="http://blog.csdn.net/mimica247706624/article/details/58596490#" class="ViewSource" title="view plain" style="background-image: url(&quot;images/default/ico_plain.gif&quot;); background-position: left top; background-repeat: no-repeat; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">view plain</a>&nbsp;<a target="_blank" href="http://blog.csdn.net/mimica247706624/article/details/58596490#" class="CopyToClipboard" title="copy" style="background-image: url(&quot;images/default/ico_copy.gif&quot;); background-position: left top; background-repeat: no-repeat; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">copy</a><div style="position: absolute; left: 559px; top: 1094px; width: 18px; height: 18px; z-index: 99;"></div><div style="position: absolute; left: 721px; top: 1160px; width: 18px; height: 18px; z-index: 99;"></div></div></div><ol start="1" class="dp-j" style="padding: 0px; border: none; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-right: 0px !important; margin-bottom: 1px !important; margin-left: 45px !important;"><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">package</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;com.energy;&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">import</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;org.springframework.boot.CommandLineRunner;&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">import</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;org.springframework.core.annotation.Order;&nbsp;&nbsp;</span></span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">import</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;org.springframework.stereotype.Component;&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="comment" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;">/**</span>&nbsp;</span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="comment" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;">&nbsp;*&nbsp;Created&nbsp;by&nbsp;CavanLiu&nbsp;on&nbsp;2017/2/28&nbsp;0028.</span>&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="comment" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;">&nbsp;*/</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Component</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Order</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">(value=</span><span class="number" style="margin: 0px; padding: 0px; border: none; color: rgb(192, 0, 0); background-color: inherit;">2</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">)</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">public</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">class</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;MyStartupRunnerTest2&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">implements</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;CommandLineRunner&nbsp;&nbsp;</span></span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">{&nbsp;&nbsp;</span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Override</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">public</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">void</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;run(String...&nbsp;args)&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 102, 153); background-color: inherit; font-weight: bold;">throws</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;Exception&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class="string" style="margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;">"&gt;&gt;&gt;&gt;This&nbsp;is&nbsp;MyStartupRunnerTest&nbsp;Order=2.&nbsp;Only&nbsp;testing&nbsp;CommandLineRunner...&lt;&lt;&lt;&lt;"</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">);&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">}&nbsp;&nbsp;</span></li></ol></div><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;">3.启动Spring boot后查看控制台输出信息，如下所示：</p><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;"></p><div class="dp-highlighter bg_plain" style="font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px; background-color: rgb(231, 229, 220); width: 936.531px; overflow-x: auto; overflow-y: hidden; padding-top: 1px; position: relative; border-color: rgb(204, 204, 204); color: rgb(85, 85, 85); margin: 18px 0px !important;"><div class="bar" style="padding-left: 45px;"><div class="tools" style="padding: 3px 8px 10px 10px; font-stretch: normal; font-size: 9px; line-height: normal; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; color: silver; background-color: rgb(248, 248, 248); border-left: 3px solid rgb(108, 226, 108); border-right: 1px solid rgb(231, 229, 220);"><strong>[plain]</strong>&nbsp;<a target="_blank" href="http://blog.csdn.net/mimica247706624/article/details/58596490#" class="ViewSource" title="view plain" style="background-image: url(&quot;images/default/ico_plain.gif&quot;); background-position: left top; background-repeat: no-repeat; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">view plain</a>&nbsp;<a target="_blank" href="http://blog.csdn.net/mimica247706624/article/details/58596490#" class="CopyToClipboard" title="copy" style="background-image: url(&quot;images/default/ico_copy.gif&quot;); background-position: left top; background-repeat: no-repeat; border: none; padding: 1px; margin: 0px 10px 0px 0px; font-size: 9px; color: rgb(160, 160, 160); display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">copy</a><div style="position: absolute; left: 563px; top: 1532px; width: 18px; height: 18px; z-index: 99;"></div><div style="position: absolute; left: 725px; top: 1597px; width: 18px; height: 18px; z-index: 99;"></div></div></div><ol start="1" style="padding: 0px; border: none; list-style-position: initial; list-style-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-right: 0px !important; margin-bottom: 1px !important; margin-left: 45px !important;"><li class="alt" style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; color: inherit; line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&gt;&gt;&gt;&gt;This&nbsp;is&nbsp;MyStartupRunnerTest&nbsp;Order=1.&nbsp;Only&nbsp;testing&nbsp;CommandLineRunner...&lt;&lt;&lt;&lt;&nbsp;&nbsp;</span></span></li><li style="border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; list-style-type: decimal-leading-zero; list-style-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin: 0px !important; padding: 0px 3px 0px 10px !important; list-style-position: outside !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&gt;&gt;&gt;&gt;This&nbsp;is&nbsp;MyStartupRunnerTest2&nbsp;Order=2.&nbsp;Only&nbsp;testing&nbsp;CommandLineRunner...&lt;&lt;&lt;&lt;&nbsp;&nbsp;</span></li></ol></div><p style="margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: Arial; font-size: 14px;"></p><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 14px;">4.Application启动类代码略。</p><p><span style="color: rgb(85, 85, 85); font-family: Arial; font-size: 14px;">说明：CommandLineRunner接口的运行顺序是依据@Order注解的value由小到大执行，即value值越小优先级越高。</span><br></p>
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getLong(created9_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getTimestamp(gtm_cre10_0_) returned 2017-09-26 15:18:15.0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getTimestamp(gtm_mod11_0_) returned 2017-09-26 15:18:15.0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(hits12_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getLong(modifie13_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getString(slug14_0_) returned null
2019-04-15 20:53:45 -2. ResultSet.getInt(status15_0_) returned 1
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getString(tags16_0_) returned null
2019-04-15 20:53:45 -2. ResultSet.getString(title17_0_) returned  SpringBoot 在启动时运行代码
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getString(type18_0_) returned article
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.next() returned true
2019-04-15 20:53:45 -2. ResultSet.getLong(cid1_0_) returned 111
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(allow_co2_0_) returned 1
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(allow_fe3_0_) returned 1
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(allow_pi4_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getString(author5_0_) returned bootdo-jpa
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getString(categori6_0_) returned null
2019-04-15 20:53:45 -2. ResultSet.getInt(comments7_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getString(content8_0_) returned <ol style="color: rgb(63, 63, 63); font-family: &quot;microsoft yahei&quot;; font-size: 15px;"><li><p style="margin-bottom: 1.1em; padding: 0px;">背景介绍&nbsp;<br>在springmvc框架中，前台传入到后台的form会经过springmvc自动封装到pojo类中，后台接受的时候可以在参数内直接接受这个java类。</p></li><li><p style="margin-bottom: 1.1em; padding: 0px;">传参&nbsp;<br>通常情况下，前台的表单的类型诸如int,string等，都会根据pojo中字段的类型自动转换。所以为我们省去了不少麻烦，但很可惜其中不包括日期类型。</p></li><li><p style="margin-bottom: 1.1em; padding: 0px;">原因&nbsp;<br>因为日期的格式多种多样，spring自身不适合对其进行封装。好在spring给出了便捷的方法给我们自己转换数据类型。</p></li><li><p style="margin-bottom: 1.1em; padding: 0px;">具体实现</p></li></ol><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(63, 63, 63); font-family: &quot;microsoft yahei&quot;; font-size: 15px;">在controller层中，加入以下代码段</p><pre class="prettyprint" name="code" style="white-space: nowrap; position: relative; overflow-y: hidden; margin-bottom: 1.1em; font-family: &quot;Source Code Pro&quot;, monospace; padding: 5px 5px 5px 60px; font-size: 14px; line-height: 1.45; background-color: rgba(128, 128, 128, 0.05); border-width: 0px; border-color: rgb(136, 136, 136); border-radius: 0px;"><code class="hljs java has-numbering" style="display: block; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; font-family: &quot;Source Code Pro&quot;, monospace; white-space: pre; word-wrap: normal;"><span class="hljs-annotation" style="color: rgb(155, 133, 157);">@InitBinder</span>
<span class="hljs-keyword" style="color: rgb(0, 0, 136);">public</span> <span class="hljs-keyword" style="color: rgb(0, 0, 136);">void</span> <span class="hljs-title">initBinder</span>(WebDataBinder binder) {
    SimpleDateFormat dateFormat = <span class="hljs-keyword" style="color: rgb(0, 0, 136);">new</span> SimpleDateFormat(<span class="hljs-string" style="color: rgb(0, 136, 0);">"yyyy-MM-dd"</span>);
    dateFormat.setLenient(<span class="hljs-keyword" style="color: rgb(0, 0, 136);">false</span>);
    binder.registerCustomEditor(Date.class, <span class="hljs-keyword" style="color: rgb(0, 0, 136);">new</span> CustomDateEditor(dateFormat, <span class="hljs-keyword" style="color: rgb(0, 0, 136);">true</span>));<span class="hljs-comment" style="color: rgb(136, 0, 0);">//true:允许输入空值，false:不能为空值</span>
}</code><ul class="pre-numbering" style="position: absolute; width: 50px; background-color: rgb(238, 238, 238); top: 0px; left: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 6px 0px 40px; border-right: 1px solid rgb(221, 221, 221); list-style: none; text-align: right;"><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">1</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">2</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">3</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">4</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">5</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">6</li></ul></pre><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(63, 63, 63); font-family: &quot;microsoft yahei&quot;; font-size: 15px;">可以解决这个问题。但是这个时候Date类型的参数是null的话，还是会报错。采用另外一种方式则更好，为null也不会报错，就是把请求参数封装为一个vo类，在对应的类属性上加上注解，这样</p><pre class="prettyprint" name="code" style="white-space: nowrap; position: relative; overflow-y: hidden; margin-bottom: 1.1em; font-family: &quot;Source Code Pro&quot;, monospace; padding: 5px 5px 5px 60px; font-size: 14px; line-height: 1.45; background-color: rgba(128, 128, 128, 0.05); border-width: 0px; border-color: rgb(136, 136, 136); border-radius: 0px;"><code class="hljs java has-numbering" style="display: block; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; font-family: &quot;Source Code Pro&quot;, monospace; white-space: pre; word-wrap: normal;"><span class="hljs-annotation" style="color: rgb(155, 133, 157);">@DateTimeFormat</span>(iso = ISO.DATE_TIME, pattern = <span class="hljs-string" style="color: rgb(0, 136, 0);">"w:yyyy"</span>)
<span class="hljs-keyword" style="color: rgb(0, 0, 136);">private</span> Date startTime;
或者
<span class="hljs-annotation" style="color: rgb(155, 133, 157);">@DateTimeFormat</span>(pattern=<span class="hljs-string" style="color: rgb(0, 136, 0);">"yyyy-MM-dd HH:mm:ss"</span>)
<span class="hljs-keyword" style="color: rgb(0, 0, 136);">private</span> Date lastLoginDate;</code><ul class="pre-numbering" style="position: absolute; width: 50px; background-color: rgb(238, 238, 238); top: 0px; left: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 6px 0px 40px; border-right: 1px solid rgb(221, 221, 221); list-style: none; text-align: right;"><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">1</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">2</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">3</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">4</li><li style="padding: 0px 5px; list-style: none; margin-left: 0px;">5</li></ul></pre><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(63, 63, 63); font-family: &quot;microsoft yahei&quot;; font-size: 15px;">另外如果使用验证框架，方法参数这样写(@Valid XxxParam param, BindingResult binding) ，就能直接通过BindingResult得到验证结果了。</p>
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getLong(created9_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getTimestamp(gtm_cre10_0_) returned 2017-09-25 21:34:51.0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getTimestamp(gtm_mod11_0_) returned 2017-09-25 21:34:51.0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(hits12_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getLong(modifie13_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getString(slug14_0_) returned null
2019-04-15 20:53:45 -2. ResultSet.getInt(status15_0_) returned 1
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getString(tags16_0_) returned null
2019-04-15 20:53:45 -2. ResultSet.getString(title17_0_) returned Springmvc提交日期类型参数
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getString(type18_0_) returned article
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.next() returned true
2019-04-15 20:53:45 -2. ResultSet.getLong(cid1_0_) returned 110
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(allow_co2_0_) returned 1
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(allow_fe3_0_) returned 1
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(allow_pi4_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getString(author5_0_) returned bootdo-jpa
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getString(categori6_0_) returned null
2019-04-15 20:53:45 -2. ResultSet.getInt(comments7_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getString(content8_0_) returned <ol><li><p style="margin-bottom: 0px; padding: 0px; color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; font-size: 16px;">win</p><p style="margin-bottom: 0px; padding: 0px; color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; font-size: 16px;"></p><div class="dp-highlighter bg_java" style="padding: 1px 0px 0px; font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px; background-color: rgb(231, 229, 220); width: 849.412px; overflow-x: auto; overflow-y: hidden; position: relative; color: rgb(69, 69, 69); margin: 18px 0px !important;"><div class="bar" style="margin: 0px; padding: 0px 0px 0px 45px;"><div class="tools" style="margin: 0px; padding: 3px 8px 10px 10px; font-stretch: normal; font-size: 9px; line-height: normal; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; color: silver; background-color: rgb(248, 248, 248); border-left: 3px solid rgb(108, 226, 108); border-right: 1px solid rgb(231, 229, 220);"><b>[java]</b>&nbsp;<a href="http://blog.csdn.net/qq1115094858/article/details/51873698#" class="ViewSource" title="view plain" style="background-image: url(&quot;images/default/ico_plain.gif&quot;); background-position: left top; background-repeat: no-repeat; color: rgb(202, 12, 22); margin: 0px 10px 0px 0px; padding: 1px; outline: none; border: none; font-size: 9px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">view plain</a><span class="tracking-ad" data-mod="popu_168" style="margin: 0px; padding: 0px;">&nbsp;<a href="http://blog.csdn.net/qq1115094858/article/details/51873698#" class="CopyToClipboard" title="copy" style="background-image: url(&quot;images/default/ico_copy.gif&quot;); background-position: left top; background-repeat: no-repeat; color: rgb(202, 12, 22); margin: 0px 10px 0px 0px; padding: 1px; outline: none; border: none; font-size: 9px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">copy</a><div style="margin: 0px; padding: 0px; position: absolute; left: 294px; top: 296px; width: 16px; height: 16px; z-index: 99;"></div></span><span class="tracking-ad" data-mod="popu_169" style="margin: 0px; padding: 0px;"></span></div></div><ol start="1" class="dp-j" style="padding: 0px; list-style-position: initial; list-style-image: initial; border-top: none; border-right: 1px solid rgb(231, 229, 220); border-bottom: none; border-left: none; border-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-right: 0px !important; margin-bottom: 1px !important; margin-left: 45px !important;"><li class="alt" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; color: inherit; line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Component</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li class="" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; font-weight: bold; border: none; color: rgb(0, 102, 153); background-color: inherit;">class</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;WebConfigurer&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; font-weight: bold; border: none; color: rgb(0, 102, 153); background-color: inherit;">extends</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;WebMvcConfigurerAdapter&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; color: inherit; line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Override</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li class="" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword" style="margin: 0px; padding: 0px; font-weight: bold; border: none; color: rgb(0, 102, 153); background-color: inherit;">public</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; font-weight: bold; border: none; color: rgb(0, 102, 153); background-color: inherit;">void</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;addResourceHandlers(ResourceHandlerRegistry&nbsp;registry)&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; color: inherit; line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;registry.addResourceHandler(<span class="string" style="margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;">"/files/**"</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">).addResourceLocations(</span><span class="string" style="margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;">"file:///E:/var/spring/uploaded_files/"</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">);&nbsp;&nbsp;</span></span></li><li class="" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; color: inherit; line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;</span></li><li class="" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">}&nbsp;&nbsp;</span></li></ol></div><span style="color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; font-size: 16px;">linux</span><br style="color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; font-size: 16px;"><div class="dp-highlighter bg_java" style="padding: 1px 0px 0px; font-family: Consolas, &quot;Courier New&quot;, Courier, mono, serif; font-size: 12px; background-color: rgb(231, 229, 220); width: 849.412px; overflow-x: auto; overflow-y: hidden; position: relative; color: rgb(69, 69, 69); margin: 18px 0px !important;"><div class="bar" style="margin: 0px; padding: 0px 0px 0px 45px;"><div class="tools" style="margin: 0px; padding: 3px 8px 10px 10px; font-stretch: normal; font-size: 9px; line-height: normal; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; color: silver; background-color: rgb(248, 248, 248); border-left: 3px solid rgb(108, 226, 108); border-right: 1px solid rgb(231, 229, 220);"><b>[java]</b>&nbsp;<a href="http://blog.csdn.net/qq1115094858/article/details/51873698#" class="ViewSource" title="view plain" style="background-image: url(&quot;images/default/ico_plain.gif&quot;); background-position: left top; background-repeat: no-repeat; color: rgb(202, 12, 22); margin: 0px 10px 0px 0px; padding: 1px; outline: none; border: none; font-size: 9px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">view plain</a><span class="tracking-ad" data-mod="popu_168" style="margin: 0px; padding: 0px;">&nbsp;<a href="http://blog.csdn.net/qq1115094858/article/details/51873698#" class="CopyToClipboard" title="copy" style="background-image: url(&quot;images/default/ico_copy.gif&quot;); background-position: left top; background-repeat: no-repeat; color: rgb(202, 12, 22); margin: 0px 10px 0px 0px; padding: 1px; outline: none; border: none; font-size: 9px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px;">copy</a><div style="margin: 0px; padding: 0px; position: absolute; left: 294px; top: 528px; width: 16px; height: 16px; z-index: 99;"></div></span><span class="tracking-ad" data-mod="popu_169" style="margin: 0px; padding: 0px;"></span></div></div><ol start="1" class="dp-j" style="padding: 0px; list-style-position: initial; list-style-image: initial; border-top: none; border-right: 1px solid rgb(231, 229, 220); border-bottom: none; border-left: none; border-image: initial; background-color: rgb(255, 255, 255); color: rgb(92, 92, 92); margin-right: 0px !important; margin-bottom: 1px !important; margin-left: 45px !important;"><li class="alt" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; color: inherit; line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Component</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li class="" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="keyword" style="margin: 0px; padding: 0px; font-weight: bold; border: none; color: rgb(0, 102, 153); background-color: inherit;">class</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;WebConfigurer&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; font-weight: bold; border: none; color: rgb(0, 102, 153); background-color: inherit;">extends</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;WebMvcConfigurerAdapter&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; color: inherit; line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="annotation" style="margin: 0px; padding: 0px; border: none; color: rgb(100, 100, 100); background-color: inherit;">@Override</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span></li><li class="" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword" style="margin: 0px; padding: 0px; font-weight: bold; border: none; color: rgb(0, 102, 153); background-color: inherit;">public</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;</span><span class="keyword" style="margin: 0px; padding: 0px; font-weight: bold; border: none; color: rgb(0, 102, 153); background-color: inherit;">void</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;addResourceHandlers(ResourceHandlerRegistry&nbsp;registry)&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; color: inherit; line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;registry.addResourceHandler(<span class="string" style="margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;">"/files/**"</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">).addResourceLocations(</span><span class="string" style="margin: 0px; padding: 0px; border: none; color: blue; background-color: inherit;">"file:///var/spring/uploaded_files"</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">);&nbsp;&nbsp;</span></span></li><li class="" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; color: inherit; line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;</span></li><li class="" style="margin-left: 40px; list-style: decimal; border-top: none; border-right: none; border-bottom: none; border-left: 3px solid rgb(108, 226, 108); border-image: initial; background-color: rgb(248, 248, 248); line-height: 18px; margin-top: 0px !important; margin-right: 0px !important; margin-bottom: 0px !important; padding: 0px 3px 0px 10px !important;"><span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">}&nbsp;&nbsp;</span></li><li></li></ol></div></li></ol>
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getLong(created9_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getTimestamp(gtm_cre10_0_) returned 2017-09-24 09:15:35.0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getTimestamp(gtm_mod11_0_) returned 2017-09-24 09:15:35.0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(hits12_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getLong(modifie13_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getString(slug14_0_) returned null
2019-04-15 20:53:45 -2. ResultSet.getInt(status15_0_) returned 1
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getString(tags16_0_) returned null
2019-04-15 20:53:45 -2. ResultSet.getString(title17_0_) returned spring boot 图片上传后的图片读取路径在win与linux环境配置的差别
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getString(type18_0_) returned article
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.next() returned true
2019-04-15 20:53:45 -2. ResultSet.getLong(cid1_0_) returned 109
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(allow_co2_0_) returned 1
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(allow_fe3_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(allow_pi4_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getString(author5_0_) returned bootdo-jpa
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getString(categori6_0_) returned null
2019-04-15 20:53:45 -2. ResultSet.getInt(comments7_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getString(content8_0_) returned <p><br></p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　EhCache 是一个纯Java的进程内缓存框架，具有快速、精干等特点，是Hibernate中默认的CacheProvider。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　ehcache提供了多种缓存策略，主要分为内存和磁盘两级，所以无需担心容量问题。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　spring-boot是一个快速的集成框架，其设计目的是用来简化新Spring应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置，从而使开发人员不再需要定义样板化的配置。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　由于spring-boot无需任何样板化的配置文件，所以spring-boot集成一些其他框架时会有略微的不同。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　1.spring-boot是一个通过maven管理的jar包的框架，集成ehcache需要的依赖如下</p><div class="cnblogs_code" style="background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); padding: 5px; overflow: auto; margin: 5px 0px; color: rgb(0, 0, 0); font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div><pre style="margin-bottom: 0px; line-height: 1.42857; font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>org.springframework<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
     <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-context-support<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
         <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>net.sf.ehcache<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
      <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>ehcache<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
          <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>2.8.3<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>        </pre><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div></div><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　　　具体pom.xml文件如下</p><div class="cnblogs_code" style="background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); padding: 5px; overflow: auto; margin: 5px 0px; color: rgb(0, 0, 0); font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div><pre style="margin-bottom: 0px; line-height: 1.42857; font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;?</span><span style="color: rgb(255, 0, 255); line-height: 1.5 !important;">xml version="1.0" encoding="UTF-8"</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">?&gt;</span>
<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">project </span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">xmlns</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="http://maven.apache.org/POM/4.0.0"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> xmlns:xsi</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="http://www.w3.org/2001/XMLSchema-instance"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">
    xsi:schemaLocation</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">modelVersion</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>4.0.0<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">modelVersion</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>

    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>com.lclc.boot<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>boot-cache<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>0.0.1-SNAPSHOT<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">&lt;!--</span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;"> Inherit defaults from Spring Boot </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">--&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">parent</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>org.springframework.boot<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-boot-starter-parent<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>1.1.3.RELEASE<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">parent</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependencies</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>org.springframework.boot<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-boot-starter-web<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>org.springframework.boot<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-boot-starter-data-jpa<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>org.springframework.boot<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-boot-starter-thymeleaf<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>mysql<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>mysql-connector-java<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>

        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>com.google.guava<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>guava<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>17.0<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>org.springframework<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-context-support<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>net.sf.ehcache<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>ehcache<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>2.8.3<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">version</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependency</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependencies</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>

    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependencyManagement</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependencies</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependencies</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">dependencyManagement</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>

    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">build</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">plugins</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">plugin</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
                <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>org.springframework.boot<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">groupId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
                <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-boot-maven-plugin<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">artifactId</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">plugin</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">plugins</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">build</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>

    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">repositories</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">repository</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">id</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-snapshots<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">id</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">url</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>http://repo.spring.io/snapshot<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">url</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">snapshots</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
                <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">enabled</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>true<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">enabled</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">snapshots</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">repository</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">repository</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">id</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-milestones<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">id</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">url</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>http://repo.spring.io/milestone<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">url</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">repository</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">repositories</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">pluginRepositories</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">pluginRepository</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">id</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-snapshots<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">id</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">url</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>http://repo.spring.io/snapshot<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">url</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">pluginRepository</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">pluginRepository</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">id</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>spring-milestones<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">id</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">url</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>http://repo.spring.io/milestone<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">url</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
        <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">pluginRepository</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">pluginRepositories</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>

<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">project</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span></pre><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div></div><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">&nbsp;　　2.使用ehcache，我们需要一个ehcache.xml来定义一些cache的属性。</p><div class="cnblogs_code" style="background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); padding: 5px; overflow: auto; margin: 5px 0px; color: rgb(0, 0, 0); font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div><pre style="margin-bottom: 0px; line-height: 1.42857; font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;?</span><span style="color: rgb(255, 0, 255); line-height: 1.5 !important;">xml version="1.0" encoding="UTF-8"</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">?&gt;</span>
<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">ehcache </span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">xmlns:xsi</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="http://www.w3.org/2001/XMLSchema-instance"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> xsi:noNamespaceSchemaLocation</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="http://ehcache.org/ehcache.xsd"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">
  updateCheck</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="false"</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span>
          <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">diskStore </span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">path</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="java.io.tmpdir/Tmp_EhCache"</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">/&gt;</span>
           <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">defaultCache </span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">eternal</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="false"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> maxElementsInMemory</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="1000"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> overflowToDisk</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="false"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> diskPersistent</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="false"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">
    timeToIdleSeconds</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="0"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> timeToLiveSeconds</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="600"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> memoryStoreEvictionPolicy</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="LRU"</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">/&gt;</span>

            <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">cache </span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">name</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="demo"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> eternal</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="false"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> maxElementsInMemory</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="100"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> overflowToDisk</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="false"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> diskPersistent</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="false"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;">
    timeToIdleSeconds</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="0"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> timeToLiveSeconds</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="300"</span><span style="color: rgb(255, 0, 0); line-height: 1.5 !important;"> memoryStoreEvictionPolicy</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">="LRU"</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">/&gt;</span>

<span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&lt;/</span><span style="color: rgb(128, 0, 0); line-height: 1.5 !important;">ehcache</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">&gt;</span></pre><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div></div><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">&nbsp;　　解释下这个xml文件中的标签。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　(1).<span style="color: rgb(128, 0, 0);">diskStore：</span>&nbsp;为缓存路径，ehcache分为内存和磁盘两级，此属性定义磁盘的缓存位置。参数解释如下：　　　　<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 　　　　user.home – 用户主目录<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 　　　 　user.dir&nbsp; – 用户当前工作目录<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;　　　　&nbsp; java.io.tmpdir – 默认临时文件路径</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　(2).<span style="color: rgb(128, 0, 0);">defaultCache：<span style="color: rgb(0, 0, 0);">默认缓存策略，当ehcache找不到定义的缓存时，则使用这个缓存策略。只能定义一个。</span></span></p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;"><span style="color: rgb(128, 0, 0);"><span style="color: rgb(0, 0, 0);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (3).<span style="color: rgb(128, 0, 0);">cache</span>：自定缓存策略，为自定义的缓存策略。参数解释如下：</span></span></p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;"><span style="color: rgb(128, 0, 0);"><span style="color: rgb(0, 0, 0);">　　　 cache元素的属性：&nbsp; &nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name：缓存名称&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; maxElementsInMemory：内存中最大缓存对象数&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; maxElementsOnDisk：硬盘中最大缓存对象数，若是0表示无穷大&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; eternal：true表示对象永不过期，此时会忽略timeToIdleSeconds和timeToLiveSeconds属性，默认为false &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; overflowToDisk：true表示当内存缓存的对象数目达到了maxElementsInMemory界限后，会把溢出的对象写到硬盘缓存中。注意：如果缓存的对象要写入到硬盘中的话，则该对象必须实现了Serializable接口才行。&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; diskSpoolBufferSizeMB：磁盘缓存区大小，默认为30MB。每个Cache都应该有自己的一个缓存区。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; diskPersistent：是否缓存虚拟机重启期数据&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; diskExpiryThreadIntervalSeconds：磁盘失效线程运行时间间隔，默认为120秒&nbsp; &nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; timeToIdleSeconds： 设定允许对象处于空闲状态的最长时间，以秒为单位。当对象自从最近一次被访问后，如果处于空闲状态的时间超过了timeToIdleSeconds属性值，这个对象就会过期，EHCache将把它从缓存中清空。只有当eternal属性为false，该属性才有效。如果该属性值为0，则表示对象可以无限期地处于空闲状态&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; timeToLiveSeconds：设定对象允许存在于缓存中的最长时间，以秒为单位。当对象自从被存放到缓存中后，如果处于缓存中的时间超过了 timeToLiveSeconds属性值，这个对象就会过期，EHCache将把它从缓存中清除。只有当eternal属性为false，该属性才有效。如果该属性值为0，则表示对象可以无限期地存在于缓存中。timeToLiveSeconds必须大于timeToIdleSeconds属性，才有意义&nbsp; &nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; memoryStoreEvictionPolicy：当达到maxElementsInMemory限制时，Ehcache将会根据指定的策略去清理内存。可选策略有：LRU（最近最少使用，默认策略）、FIFO（先进先出）、LFU（最少访问次数）。&nbsp;&nbsp;</span></span></p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">&nbsp;</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;"><span style="color: rgb(128, 0, 0);"><span style="color: rgb(0, 0, 0);">　　3.将ehcache的管理器暴露给spring的上下文容器，</span></span></p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;"><span style="color: rgb(128, 0, 0);"><span style="color: rgb(0, 0, 0);">　　</span></span></p><div class="cnblogs_code" style="background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); padding: 5px; overflow: auto; margin: 5px 0px; color: rgb(0, 0, 0); font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div><pre style="margin-bottom: 0px; line-height: 1.42857; font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">@Configuration
</span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">//</span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;"> 标注启动了缓存</span>
<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">@EnableCaching
</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">class</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> CacheConfiguration {

    </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">/*</span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">
     * ehcache 主要的管理器
     </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">*/</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">
    @Bean(name </span>= "appEhCacheCacheManager"<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">)
    </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> EhCacheCacheManager ehCacheCacheManager(EhCacheManagerFactoryBean bean){
        </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">return</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">new</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> EhCacheCacheManager (bean.getObject ());
    }

    </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">/*</span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">
     * 据shared与否的设置,Spring分别通过CacheManager.create()或new CacheManager()方式来创建一个ehcache基地.
     </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">*/</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">
    @Bean
    </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> EhCacheManagerFactoryBean ehCacheManagerFactoryBean(){
        EhCacheManagerFactoryBean cacheManagerFactoryBean </span>= <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">new</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> EhCacheManagerFactoryBean ();
        cacheManagerFactoryBean.setConfigLocation (</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">new</span> ClassPathResource ("conf/ehcache-app.xml"<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">));
        cacheManagerFactoryBean.setShared (</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">true</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">);
        </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">return</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> cacheManagerFactoryBean;
    }
}</span></pre><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div></div><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">&nbsp;</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">&nbsp;&nbsp; 　　　　<span style="color: rgb(0, 0, 0);">@Configuration</span>：为spring-boot注解，主要标注此为配置类，优先扫描。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">&nbsp; 　　　　<span style="color: rgb(0, 0, 0);">@Bean</span>：向spring容器中加入bean。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　至此所有的配置都做好了，通过spring-boot进行集成框架就是这么简单。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　4.使用ehcache</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　　　使用ehcache主要通过spring的缓存机制，上面我们将spring的缓存机制使用了ehcache进行实现，所以使用方面就完全使用spring缓存机制就行了。<br>　　　　具体牵扯到几个注解：</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　　　@Cacheable：负责将方法的返回值加入到缓存中，参数3<br>　　　　@CacheEvict：负责清除缓存，参数4</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　　　　参数解释：</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　　　value：缓存位置名称，不能为空，如果使用EHCache，就是ehcache.xml中声明的cache的name<br>　　　　key：缓存的key，默认为空，既表示使用方法的参数类型及参数值作为key，支持SpEL<br>　　　　condition：触发条件，只有满足条件的情况才会加入缓存，默认为空，既表示全部都加入缓存，支持SpEL</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　　　allEntries：CacheEvict参数，true表示清除value中的全部缓存，默认为false</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　不多说，直接上代码：</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　</p><div class="cnblogs_code" style="background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); padding: 5px; overflow: auto; margin: 5px 0px; color: rgb(0, 0, 0); font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div><pre style="margin-bottom: 0px; line-height: 1.42857; font-family: &quot;Courier New&quot; !important; font-size: 12px !important;"><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">@Service
</span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">class</span> CacheDemoServiceImpl <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">implements</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> CacheDemoService {

    </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">/**</span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">
     * 缓存的key
     </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">*/</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">static</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">final</span> String THING_ALL_KEY   = "\"thing_all\""<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">;
    </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">/**</span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">
     * value属性表示使用哪个缓存策略，缓存策略在ehcache.xml
     </span><span style="color: rgb(0, 128, 0); line-height: 1.5 !important;">*/</span>
    <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">static</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">final</span> String DEMO_CACHE_NAME = "demo"<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">;
   
    @CacheEvict(value </span>= DEMO_CACHE_NAME,key =<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> THING_ALL_KEY)
    @Override
    </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">void</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> create(Thing thing){
        Long id </span>=<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> getNextId ();
        thing.setId (id);
        data.put (id, thing);
    } 
      
     @Cacheable(value </span>=<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> DEMO_CACHE_NAME,key = "#thing.getId()+'thing'")
    @Override
    </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> Thing findById(Long id){
        System.err.println (</span>"没有走缓存！" +<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> id);
        </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">return</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> data.get (id);
    }

      @Cacheable(value </span>= DEMO_CACHE_NAME,key =<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> THING_ALL_KEY)
    @Override
    </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span> List&lt;Thing&gt;<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> findAll(){
        </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">return</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> Lists.newArrayList (data.values ());
    }
   
   </span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">
      @Override
    @CachePut(value </span>= DEMO_CACHE_NAME,key = "#thing.getId()+'thing'"<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;">)
    @CacheEvict(value </span>= DEMO_CACHE_NAME,key =<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> THING_ALL_KEY)
    </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> Thing update(Thing thing){
        System.out.println (thing);
        data.put (thing.getId (), thing);
        </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">return</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> thing;
    }

    @CacheEvict(value </span>=<span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> DEMO_CACHE_NAME)
    @Override
    </span><span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">public</span> <span style="color: rgb(0, 0, 255); line-height: 1.5 !important;">void</span><span style="color: rgb(0, 0, 0); line-height: 1.5 !important;"> delete(Long id){
        data.remove (id);
    }
   
}</span></pre><div class="cnblogs_code_toolbar" style="margin-top: 5px;"><span class="cnblogs_code_copy" style="padding-right: 5px; line-height: 1.5 !important;"><a title="复制代码" style="color: rgb(86, 182, 233); background-color: rgb(245, 245, 245) !important; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="max-width: 900px; border-width: initial !important; border-style: none !important;"></a></span></div></div><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">&nbsp;</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">　　　　5.只需要通过注解在service层方法上打注解便可以使用缓存，在find**上存入缓存，在delete**,update**上清除缓存。</p><p style="margin-top: 10px; margin-right: auto; margin-left: auto; color: rgb(35, 35, 35); font-family: Verdana, Arial, helvetica, sans-seriff; font-size: 14px;">&nbsp;</p>
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getLong(created9_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getTimestamp(gtm_cre10_0_) returned 2017-09-24 11:15:18.0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getTimestamp(gtm_mod11_0_) returned 2017-09-24 11:15:18.0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(hits12_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getLong(modifie13_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getString(slug14_0_) returned null
2019-04-15 20:53:45 -2. ResultSet.getInt(status15_0_) returned 1
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getString(tags16_0_) returned null
2019-04-15 20:53:45 -2. ResultSet.getString(title17_0_) returned spring-boot整合ehcache实现缓存机制
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getString(type18_0_) returned article
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.next() returned true
2019-04-15 20:53:45 -2. ResultSet.getLong(cid1_0_) returned 108
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(allow_co2_0_) returned 1
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(allow_fe3_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(allow_pi4_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getString(author5_0_) returned bootdo-jpa
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getString(categori6_0_) returned null
2019-04-15 20:53:45 -2. ResultSet.getInt(comments7_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getString(content8_0_) returned <h3 id="pomxml配置-引入依赖包" style="font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; color: rgb(63, 63, 63); margin: 0.8em 0px; font-size: 1.7em; padding: 0px;">pom.xml配置 引入依赖包</h3><pre class="prettyprint" style="font-family: &quot;Source Code Pro&quot;, monospace; font-size: 14px; white-space: nowrap; padding: 5px 5px 5px 60px; margin-bottom: 1.1em; line-height: 1.45; background-color: rgba(128, 128, 128, 0.05); border-color: rgba(128, 128, 128, 0.075); border-radius: 0px; position: relative; overflow-y: hidden;"><code class="hljs xml has-numbering" style="font-family: &quot;Source Code Pro&quot;, monospace; white-space: pre; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; display: block; word-wrap: normal;"><span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">dependency</span>&gt;</span>
    <span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;/<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">groupId</span>&gt;</span>
    <span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">artifactId</span>&gt;</span>spring-boot-starter-cache<span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;/<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">artifactId</span>&gt;</span>
<span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;/<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">dependency</span>&gt;</span>
<span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">dependency</span>&gt;</span>
    <span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">groupId</span>&gt;</span>net.sf.ehcache<span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;/<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">groupId</span>&gt;</span>
    <span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">artifactId</span>&gt;</span>ehcache<span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;/<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">artifactId</span>&gt;</span>
<span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;/<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">dependency</span>&gt;</span></code><ul class="pre-numbering" style="margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 6px 0px 40px; list-style: none; position: absolute; width: 50px; background-color: rgb(238, 238, 238); top: 0px; left: 0px; border-right: 1px solid rgb(221, 221, 221); text-align: right;"><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">1</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">2</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">3</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">4</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">5</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">6</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">7</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">8</li></ul></pre><h3 id="编写配置类设置缓存机制" style="font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; color: rgb(63, 63, 63); margin: 0.8em 0px; font-size: 1.7em; padding: 0px;">编写配置类,设置缓存机制</h3><pre class="prettyprint" style="font-family: &quot;Source Code Pro&quot;, monospace; font-size: 14px; white-space: nowrap; padding: 5px 5px 5px 60px; margin-bottom: 1.1em; line-height: 1.45; background-color: rgba(128, 128, 128, 0.05); border-color: rgba(128, 128, 128, 0.075); border-radius: 0px; position: relative; overflow-y: hidden;"><code class="hljs java has-numbering" style="font-family: &quot;Source Code Pro&quot;, monospace; white-space: pre; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; display: block; word-wrap: normal;"><span class="hljs-annotation" style="margin: 0px; padding: 0px; color: rgb(155, 133, 157);">@Configuration</span>
<span class="hljs-annotation" style="margin: 0px; padding: 0px; color: rgb(155, 133, 157);">@EnableCaching</span>
<span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">public</span> <span class="hljs-class" style="margin: 0px; padding: 0px;"><span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">class</span> <span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">CacheConfiguration</span> {</span>

    <span class="hljs-annotation" style="margin: 0px; padding: 0px; color: rgb(155, 133, 157);">@Bean</span>
    <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">public</span> EhCacheCacheManager <span class="hljs-title" style="margin: 0px; padding: 0px;">ehCacheCacheManager</span>(EhCacheManagerFactoryBean bean) {
        <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">return</span> <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">new</span> EhCacheCacheManager(bean.getObject());
    }

    <span class="hljs-annotation" style="margin: 0px; padding: 0px; color: rgb(155, 133, 157);">@Bean</span>
    <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">public</span> EhCacheManagerFactoryBean <span class="hljs-title" style="margin: 0px; padding: 0px;">ehCacheManagerFactoryBean</span>() {
        EhCacheManagerFactoryBean cacheManagerFactoryBean = <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">new</span> EhCacheManagerFactoryBean();
        cacheManagerFactoryBean.setConfigLocation(<span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">new</span> ClassPathResource(<span class="hljs-string" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"config/ehcache.xml"</span>));
        cacheManagerFactoryBean.setShared(<span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">true</span>);
        <span class="hljs-keyword" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">return</span> cacheManagerFactoryBean;
    }
}</code><ul class="pre-numbering" style="margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 6px 0px 40px; list-style: none; position: absolute; width: 50px; background-color: rgb(238, 238, 238); top: 0px; left: 0px; border-right: 1px solid rgb(221, 221, 221); text-align: right;"><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">1</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">2</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">3</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">4</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">5</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">6</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">7</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">8</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">9</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">10</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">11</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">12</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">13</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">14</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">15</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">16</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">17</li></ul></pre><p style="margin-bottom: 1.1em; padding: 0px; color: rgb(63, 63, 63); font-family: &quot;microsoft yahei&quot;; font-size: 15px;">ehcache.xml配置:</p><pre class="prettyprint" style="font-family: &quot;Source Code Pro&quot;, monospace; font-size: 14px; white-space: nowrap; padding: 5px 5px 5px 60px; margin-bottom: 1.1em; line-height: 1.45; background-color: rgba(128, 128, 128, 0.05); border-color: rgba(128, 128, 128, 0.075); border-radius: 0px; position: relative; overflow-y: hidden;"><code class="hljs xml has-numbering" style="font-family: &quot;Source Code Pro&quot;, monospace; white-space: pre; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; display: block; word-wrap: normal;"><span class="hljs-pi" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">ehcache</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">xmlns:xsi</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">xsi:noNamespaceSchemaLocation</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"http://ehcache.org/ehcache.xsd"</span>
    <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">updateCheck</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"false"</span>&gt;</span>
    <span class="hljs-comment" style="margin: 0px; padding: 0px; color: rgb(136, 0, 0);">&lt;!-- diskStore：为缓存路径，ehcache分为内存和磁盘两级，此属性定义磁盘的缓存位置。
    参数解释如下： user.home – 用户主目录 
    user.dir – 用户当前工作目录 
    java.io.tmpdir – 默认临时文件路径 --&gt;</span>
    <span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">diskStore</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">path</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"java.io.tmpdir/Tmp_EhCache"</span> /&gt;</span>
    <span class="hljs-comment" style="margin: 0px; padding: 0px; color: rgb(136, 0, 0);">&lt;!-- defaultCache：默认缓存策略，当ehcache找不到定义的缓存时，则使用这个缓存策略。只能定义一个。 --&gt;</span>
    <span class="hljs-comment" style="margin: 0px; padding: 0px; color: rgb(136, 0, 0);">&lt;!-- name:缓存名称。 
        maxElementsInMemory:缓存最大数目
        maxElementsOnDisk：硬盘最大缓存个数。 
        eternal:对象是否永久有效，一但设置了，timeout将不起作用。 
        overflowToDisk:是否保存到磁盘，当系统当机时 
        timeToIdleSeconds:设置对象在失效前的允许闲置时间（单位：秒）。仅当eternal=false对象不是永久有效时使 用，可选属性，默认值是0，也就是可闲置时间无穷大。
        timeToLiveSeconds:设置对象在失效前允许存活时间（单位：秒）。最大时间介于创建时间和失效时间之间。仅 当eternal=false对象不是永久有效时使用，默认是0.，也就是对象存活时间无穷大。 
        diskPersistent：是否缓存虚拟机重启期数据Whether the disk store persists between restarts 
        of the Virtual Machine. The default value is false. 
        diskSpoolBufferSizeMB：这个参数设置DiskStore（磁盘缓存）的缓存区大小。默认是30MB。每个Cache都应该 有自己的一个缓冲区。 
        diskExpiryThreadIntervalSeconds：磁盘失效线程运行时间间隔，默认是120秒。 
        memoryStoreEvictionPolicy：当达到maxElementsInMemory限制时，Ehcache将会根据指定的策略去清理内 存。默认策略是LRU（最近最少使用）。
        你可以设置为FIFO（先进先出）或是LFU（较少使用）。 
        clearOnFlush：内存数量最大时是否清除。
        memoryStoreEvictionPolicy:可选策略有：LRU（最近最少使用，默认策略）、FIFO（先进先出）、LFU（最少 访问次数）。 
         FIFO，first in first out，这个是大家最熟的，先进先出。
         LFU， Less Frequently Used，就是上面例子中使用的策略，直白一点就是讲一直以来最少被使用的。如上面 所讲，缓存的元素有一个hit属性，hit值最小的将会被清出缓存。 
         LRU，Least Recently Used，最近最少使用的，缓存的元素有一个时间戳，当缓存容量满了，而又需要腾出地 方来缓存新的元素的时候，
         那么现有缓存元素中时间戳离当前时间最远的元素将被清出缓存。 --&gt;</span>
    <span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">defaultCache</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">eternal</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"false"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">maxElementsInMemory</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"1000"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">overflowToDisk</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"false"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">diskPersistent</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"false"</span>
        <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">timeToIdleSeconds</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"0"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">timeToLiveSeconds</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"600"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">memoryStoreEvictionPolicy</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"LRU"</span> /&gt;</span>
    <span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">cache</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">name</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"snailAuthCache"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">eternal</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"false"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">maxElementsInMemory</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"10000"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">overflowToDisk</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"false"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">diskPersistent</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"false"</span>
        <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">timeToIdleSeconds</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"0"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">timeToLiveSeconds</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"0"</span> <span class="hljs-attribute" style="margin: 0px; padding: 0px; color: rgb(102, 0, 102);">memoryStoreEvictionPolicy</span>=<span class="hljs-value" style="margin: 0px; padding: 0px; color: rgb(0, 136, 0);">"LFU"</span> /&gt;</span>
<span class="hljs-tag" style="margin: 0px; padding: 0px; color: rgb(0, 102, 102);">&lt;/<span class="hljs-title" style="margin: 0px; padding: 0px; color: rgb(0, 0, 136);">ehcache</span>&gt;</span></code><ul class="pre-numbering" style="margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 6px 0px 40px; list-style: none; position: absolute; width: 50px; background-color: rgb(238, 238, 238); top: 0px; left: 0px; border-right: 1px solid rgb(221, 221, 221); text-align: right;"><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">1</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">2</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">3</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">4</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">5</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">6</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">7</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">8</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">9</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">10</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">11</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">12</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">13</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">14</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">15</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">16</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">17</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">18</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">19</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">20</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">21</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">22</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">23</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">24</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">25</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">26</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">27</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">28</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">29</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">30</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">31</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">32</li><li style="margin: 0px; padding: 0px 5px; list-style: none; color: rgb(153, 153, 153);">33</li></ul><div class="save_code tracking-ad" data-mod="popu_249" style="margin: 0px; padding: 0px; position: absolute; height: 60px; right: 30px; top: 5px; color: rgb(255, 255, 255); cursor: pointer; z-index: 2;"><a style="color: rgb(202, 12, 22); margin: 0px; padding: 0px; outline: none;"><img src="http://static.blog.csdn.net/images/save_snippets.png" style="outline: none; max-width: 100%;"></a></div></pre><h3 id="测试" style="font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; color: rgb(63, 63, 63); margin: 0.8em 0px; font-size: 1.7em; padding: 0px;"><br></h3>
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getLong(created9_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getTimestamp(gtm_cre10_0_) returned 2017-09-22 17:48:29.0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getTimestamp(gtm_mod11_0_) returned 2017-09-22 17:48:29.0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(hits12_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getLong(modifie13_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getString(slug14_0_) returned null
2019-04-15 20:53:45 -2. ResultSet.getInt(status15_0_) returned 1
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getString(tags16_0_) returned null
2019-04-15 20:53:45 -2. ResultSet.getString(title17_0_) returned spring boot ehcache整合
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getString(type18_0_) returned article
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.next() returned true
2019-04-15 20:53:45 -2. ResultSet.getLong(cid1_0_) returned 100
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(allow_co2_0_) returned 1
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(allow_fe3_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(allow_pi4_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getString(author5_0_) returned bootdo-jpa
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getString(categori6_0_) returned null
2019-04-15 20:53:45 -2. ResultSet.getInt(comments7_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getString(content8_0_) returned <p style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; margin-bottom: 16px; color: rgb(61, 70, 77); font-family: &quot;Pingfang SC&quot;, STHeiti, &quot;Lantinghei SC&quot;, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; font-size: 16px; background-color: rgb(248, 248, 248);">添加依赖</p><pre class="hljs xml" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; padding: 2px; background: rgb(63, 63, 63); color: rgb(220, 220, 220); border-radius: 3px; line-height: 1.4; word-wrap: normal; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace;"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);">&lt;<span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);">dependency</span>&gt;</span><code class="hljs xml" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; display: block; overflow-x: auto; padding: 10px; background: rgb(63, 63, 63); color: rgb(220, 220, 220); border-radius: 4px; font-size: 13px; line-height: 1.4; word-wrap: normal; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace;"> 
   <span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&lt;</span><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);">groupId</span></span></span><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&gt;</span></span>com.github.theborakompanioni<span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&lt;/</span><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);">groupId</span></span></span><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&gt;</span></span>
    <span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&lt;</span><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);">artifactId</span></span></span><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&gt;</span></span>thymeleaf-extras-shiro<span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&lt;/</span><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);">artifactId</span></span></span><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&gt;</span></span>
    <span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&lt;</span><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);">version</span></span></span><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&gt;</span></span></code>1.2.1<code class="hljs xml" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; display: block; overflow-x: auto; padding: 10px; background: rgb(63, 63, 63); color: rgb(220, 220, 220); border-radius: 4px; font-size: 13px; line-height: 1.4; word-wrap: normal; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace;"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&lt;/</span><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);">version</span></span></span><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&gt;</span></span> 
<span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&lt;/</span><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);"><span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);">dependency</span></span></span><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">&gt;</span></span></code></pre><p style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; margin-bottom: 16px; color: rgb(61, 70, 77); font-family: &quot;Pingfang SC&quot;, STHeiti, &quot;Lantinghei SC&quot;, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; font-size: 16px; background-color: rgb(248, 248, 248);">&nbsp;</p><p style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; margin-bottom: 16px; color: rgb(61, 70, 77); font-family: &quot;Pingfang SC&quot;, STHeiti, &quot;Lantinghei SC&quot;, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; font-size: 16px; background-color: rgb(248, 248, 248);">在shiro的configuration中配置</p><pre class="hljs java" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; padding: 2px; background: rgb(63, 63, 63); color: rgb(220, 220, 220); border-radius: 3px; line-height: 1.4; word-wrap: normal; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace;"><span class="hljs-meta" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(127, 159, 127);">@Bean</span>
    <span class="hljs-function" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;"><span class="hljs-keyword" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);">public</span> ShiroDialect <span class="hljs-title" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);">shiroDialect</span><span class="hljs-params" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">()</span> </span>{
        <span class="hljs-keyword" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);">return</span> <span class="hljs-keyword" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);">new</span> ShiroDialect();
    }</pre><p style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; margin-bottom: 16px; color: rgb(61, 70, 77); font-family: &quot;Pingfang SC&quot;, STHeiti, &quot;Lantinghei SC&quot;, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; font-size: 16px; background-color: rgb(248, 248, 248);">&nbsp;</p><p style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; margin-bottom: 16px; color: rgb(61, 70, 77); font-family: &quot;Pingfang SC&quot;, STHeiti, &quot;Lantinghei SC&quot;, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; font-size: 16px; background-color: rgb(248, 248, 248);">在html中加入xmlns</p><pre class="hljs xml" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; padding: 2px; background: rgb(63, 63, 63); color: rgb(220, 220, 220); border-radius: 3px; line-height: 1.4; word-wrap: normal; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace;"><span class="hljs-tag" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);">&lt;<span class="hljs-name" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(239, 239, 143);">html</span> <span class="hljs-attr" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">lang</span>=<span class="hljs-string" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(204, 147, 147);">"zh_CN"</span> <span class="hljs-attr" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">xmlns:th</span>=<span class="hljs-string" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(204, 147, 147);">"http://www.thymeleaf.org"</span>
      <span class="hljs-attr" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;">xmlns:shiro</span>=<span class="hljs-string" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(204, 147, 147);">"http://www.pollix.at/thymeleaf/shiro"</span>&gt;</span></pre><p style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; margin-bottom: 16px; color: rgb(61, 70, 77); font-family: &quot;Pingfang SC&quot;, STHeiti, &quot;Lantinghei SC&quot;, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; font-size: 16px; background-color: rgb(248, 248, 248);">例子</p><pre class="hljs scala" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; padding: 2px; background: rgb(63, 63, 63); color: rgb(220, 220, 220); border-radius: 3px; line-height: 1.4; word-wrap: normal; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace;">&lt;button shiro:hasPermission=<span class="hljs-string" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(204, 147, 147);">"sys:user:add"</span> <span class="hljs-class" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;"><span class="hljs-keyword" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);">type</span></span>=<span class="hljs-string" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(204, 147, 147);">"button"</span> <span class="hljs-class" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;"><span class="hljs-keyword" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);">class</span></span>=<span class="hljs-string" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(204, 147, 147);">"btn &nbsp;btn-primary"</span> onclick=<span class="hljs-string" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(204, 147, 147);">"add()"</span>&gt;
&nbsp;&nbsp; &lt;i <span class="hljs-class" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent;"><span class="hljs-keyword" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(227, 206, 171);">class</span></span>=<span class="hljs-string" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(204, 147, 147);">"fa fa-plus"</span> aria-hidden=<span class="hljs-string" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; color: rgb(204, 147, 147);">"true"</span>&gt;&lt;/i&gt;添加
&lt;/button&gt;</pre>
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getLong(created9_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getTimestamp(gtm_cre10_0_) returned 2017-09-22 13:24:30.0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getTimestamp(gtm_mod11_0_) returned 2017-09-22 13:24:30.0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(hits12_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getLong(modifie13_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getString(slug14_0_) returned null
2019-04-15 20:53:45 -2. ResultSet.getInt(status15_0_) returned 1
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getString(tags16_0_) returned null
2019-04-15 20:53:45 -2. ResultSet.getString(title17_0_) returned springboot thymeleaf和shiro 整合——按钮可见性
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getString(type18_0_) returned article
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.next() returned true
2019-04-15 20:53:45 -2. ResultSet.getLong(cid1_0_) returned 75
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(allow_co2_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(allow_fe3_0_) returned 1
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(allow_pi4_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getString(author5_0_) returned bootdo-jpa
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getString(categori6_0_) returned null
2019-04-15 20:53:45 -2. ResultSet.getInt(comments7_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getString(content8_0_) returned <h3 style="color: rgb(17, 17, 17); font-family: &quot;PingFang SC&quot;, &quot;Helvetica Neue&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, Sathu, EucrosiaUPC, sans-serif;">项目介绍</h3><ul style="margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px 30px; list-style-position: initial; list-style-image: initial; color: rgb(17, 17, 17); font-family: &quot;PingFang SC&quot;, &quot;Helvetica Neue&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, Sathu, EucrosiaUPC, sans-serif; font-size: 16px;"><li><p>面向学习型的开源框架，简洁高效，减少过渡封装，展现技术本质</p></li><li><p>Springboot作为基础框架，使用SpringDataJPA作为持久层框架</p></li><li><p>使用官方推荐的thymeleaf做为模板引擎，shiro作为安全框架,主流技术，“一网打尽”</p></li><li><p>基于注解的sql写法，零XML，极简配置，一键前后台代码生成</p></li></ul><p style="color: rgb(17, 17, 17); font-family: &quot;PingFang SC&quot;, &quot;Helvetica Neue&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, Sathu, EucrosiaUPC, sans-serif; font-size: 16px;"><span style="font-weight: bolder;">演示地址</span>&nbsp;<a href="http://47.93.239.129/" style="outline: 0px; color: rgb(68, 102, 187);">http://47.93.239.129</a></p><h3 style="color: rgb(17, 17, 17); font-family: &quot;PingFang SC&quot;, &quot;Helvetica Neue&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, Sathu, EucrosiaUPC, sans-serif;">功能简介</h3><p style="color: rgb(17, 17, 17); font-family: &quot;PingFang SC&quot;, &quot;Helvetica Neue&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, Sathu, EucrosiaUPC, sans-serif; font-size: 16px;">1. 用户管理<br>2. 角色管理<br>3. 部门管理<br>4. 菜单管理<br>5. 系统日志<br>6. 代码生成<br>7. 内容管理</p><h3 style="color: rgb(17, 17, 17); font-family: &quot;PingFang SC&quot;, &quot;Helvetica Neue&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, Sathu, EucrosiaUPC, sans-serif;">所用框架</h3><p style="color: rgb(17, 17, 17); font-family: &quot;PingFang SC&quot;, &quot;Helvetica Neue&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, Sathu, EucrosiaUPC, sans-serif; font-size: 16px;"><span style="font-weight: bolder;">前端</span><br>1. Bootstrap<br>2. jQuery<br>3. bootstrap-table<br>4. layer<br>5. jsTree&nbsp;<br>6. summernote<br>7. jquery-validate<br>8. jquery-treegrid</p><p style="color: rgb(17, 17, 17); font-family: &quot;PingFang SC&quot;, &quot;Helvetica Neue&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, Sathu, EucrosiaUPC, sans-serif; font-size: 16px;"><span style="font-weight: bolder;">后端</span><br>1. SpringBoot&nbsp;<br>2. SpringDataJPA<br>3. Thymeleaf<br>4. Shiro<br>5. druid<br>6. jpa-spec</p><p style="color: rgb(17, 17, 17); font-family: &quot;PingFang SC&quot;, &quot;Helvetica Neue&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, Sathu, EucrosiaUPC, sans-serif; font-size: 16px;"><span style="font-weight: bolder;">项目截图</span></p><p style="color: rgb(17, 17, 17); font-family: &quot;PingFang SC&quot;, &quot;Helvetica Neue&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, Sathu, EucrosiaUPC, sans-serif; font-size: 16px;"><img height="400" src="https://static.oschina.net/uploads/space/2017/0912/182421_5LaN_3244087.png" width="650" style="border-width: initial; border-style: none; outline: 0px; width: 882px; max-width: -webkit-fit-content; height: auto;"></p>
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getLong(created9_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getTimestamp(gtm_cre10_0_) returned 2017-09-22 14:44:44.0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getTimestamp(gtm_mod11_0_) returned 2017-09-22 14:44:44.0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getInt(hits12_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getLong(modifie13_0_) returned 0
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned true
2019-04-15 20:53:45 -2. ResultSet.getString(slug14_0_) returned null
2019-04-15 20:53:45 -2. ResultSet.getInt(status15_0_) returned 1
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getString(tags16_0_) returned null
2019-04-15 20:53:45 -2. ResultSet.getString(title17_0_) returned 基于 Springboot 和 SpringDataJPA 的后台管理系统 bootdo-jpa
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.getString(type18_0_) returned article
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.close() returned 
2019-04-15 20:53:45 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:45 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:45 -2. Connection.isClosed() returned false
2019-04-15 20:53:45 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:53:45 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:53:45 -2. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:53:45 -2. Connection.prepareStatement(select count(contentdo0_.cid) as col_0_0_ from blog_content contentdo0_ where contentdo0_.type=?) returned net.sf.log4jdbc.PreparedStatementSpy@5f39cd40
2019-04-15 20:53:45 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:53:45 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:45 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:45 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:53:45 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:53:45 -2. PreparedStatement.setString(1, "article") returned 
2019-04-15 20:53:45 -2. Connection.getAutoCommit() returned false
2019-04-15 20:53:45 -select count(contentdo0_.cid) as col_0_0_ from blog_content contentdo0_ where contentdo0_.type='article' 

2019-04-15 20:53:45 -select count(contentdo0_.cid) as col_0_0_ from blog_content contentdo0_ where contentdo0_.type='article' 
 {executed in 1 msec}
2019-04-15 20:53:45 -2. ResultSet.new ResultSet returned 
2019-04-15 20:53:45 -2. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@14d16b87
2019-04-15 20:53:45 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@19058b53 - Field level information: 
	com.mysql.jdbc.Field@84716fe[catalog=,tableName=,originalTableName=,columnName=col_0_0_,originalColumnName=,mysqlType=8(FIELD_TYPE_LONGLONG),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
2019-04-15 20:53:45 -2. ResultSet.next() returned true
2019-04-15 20:53:45 -2. ResultSet.getLong(col_0_0_) returned 10
2019-04-15 20:53:45 -2. ResultSet.wasNull() returned false
2019-04-15 20:53:45 -2. ResultSet.next() returned false
2019-04-15 20:53:45 -2. ResultSet.close() returned 
2019-04-15 20:53:45 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:53:45 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:53:45 -2. Connection.isClosed() returned false
2019-04-15 20:53:45 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:53:45 -2. Connection.commit() returned 
2019-04-15 20:53:45 -2. Connection.setAutoCommit(true) returned 
2019-04-15 20:53:45 -2. Connection.isReadOnly() returned true
2019-04-15 20:53:45 -2. Connection.setReadOnly(false) returned 
2019-04-15 20:53:45 -耗时 : 34
2019-04-15 20:53:45 -2. Connection.isClosed() returned false
2019-04-15 20:53:45 -2. Connection.clearWarnings() returned 
2019-04-15 20:53:45 -2. Connection.clearWarnings() returned 
2019-04-15 20:53:48 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 2, completed tasks = 9]
2019-04-15 20:55:30 -请求地址 : http://localhost:8080/activiti/process
2019-04-15 20:55:30 -HTTP METHOD : GET
2019-04-15 20:55:30 -CLASS_METHOD : com.bootdo_jpa.activiti.controller.ProcessController.process
2019-04-15 20:55:30 -参数 : []
2019-04-15 20:55:30 -耗时 : 0
2019-04-15 20:55:30 -2. Connection.isClosed() returned false
2019-04-15 20:55:30 -2. Connection.isClosed() returned false
2019-04-15 20:55:30 -2. Statement.new Statement returned 
2019-04-15 20:55:30 -2. Connection.createStatement() returned net.sf.log4jdbc.StatementSpy@66be6c7b
2019-04-15 20:55:30 -2. Connection.getAutoCommit() returned true
2019-04-15 20:55:30 -select 'x' 

2019-04-15 20:55:30 -select 'x' 
 {executed in 0 msec}
2019-04-15 20:55:30 -2. ResultSet.new ResultSet returned 
2019-04-15 20:55:30 -2. Statement.executeQuery(select 'x') returned net.sf.log4jdbc.ResultSetSpy@3b4822e5
2019-04-15 20:55:30 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@12610519 - Field level information: 
	com.mysql.jdbc.Field@727ec121[catalog=,tableName=,originalTableName=,columnName=x,originalColumnName=,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.close() returned 
2019-04-15 20:55:30 -2. Statement.close() returned 
2019-04-15 20:55:30 -2. Connection.setReadOnly(true) returned 
2019-04-15 20:55:30 -2. Connection.getAutoCommit() returned true
2019-04-15 20:55:30 -2. Connection.setAutoCommit(false) returned 
2019-04-15 20:55:30 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:55:30 -2. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:55:30 -2. Connection.prepareStatement(select distinct m.perms 		from sys_menu m  		left join sys_role_menu rm on m.menu_id = rm.menu_id 		left join sys_user_role ur on rm.role_id = ur.role_id  		where ur.user_id = ?) returned net.sf.log4jdbc.PreparedStatementSpy@1d93ffb8
2019-04-15 20:55:30 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:55:30 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:55:30 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:55:30 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:55:30 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:55:30 -2. PreparedStatement.setLong(1, 1) returned 
2019-04-15 20:55:30 -2. Connection.getAutoCommit() returned false
2019-04-15 20:55:30 -2. Connection.getAutoCommit() returned false
2019-04-15 20:55:30 -select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id 
left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = 1 

2019-04-15 20:55:30 -select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id 
left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = 1 
 {executed in 3 msec}
2019-04-15 20:55:30 -2. ResultSet.new ResultSet returned 
2019-04-15 20:55:30 -2. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@3b3d6de
2019-04-15 20:55:30 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@51e2fba7 - Field level information: 
	com.mysql.jdbc.Field@530eb01c[catalog=bootdo_jpa,tableName=m,originalTableName=sys_menu,columnName=perms,originalColumnName=perms,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
2019-04-15 20:55:30 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@4a948d32 - Field level information: 
	com.mysql.jdbc.Field@530eb01c[catalog=bootdo_jpa,tableName=m,originalTableName=sys_menu,columnName=perms,originalColumnName=perms,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned 
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned act:process
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned activiti:model
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned sys:log:clear
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned sys:log:remove
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned sys:log:list
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned oa:notify:batchRemove
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned oa:notify:remove
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned oa:notify:edit
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned oa:notify:add
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned common:taskScheduleJob
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned common:generator
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned blog:bContent:add
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned blog:bContent:batchRemove
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned blog:bContent:remove
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned blog:bContent:edit
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned system:sysDept:edit
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned system:sysDept:remove
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned system:sysDept:add
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned sys:role:batchRemove
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned sys:role:remove
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned sys:role:edit
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned sys:role:add
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned sys:user:resetPwd
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned sys:user:disable
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned sys:user:batchRemove
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned sys:user:remove
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned sys:user:edit
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned sys:user:add
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned sys:menu:batchRemove
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned sys:menu:remove
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned sys:menu:edit
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned sys:menu:add
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned common:dict:batchRemove
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned common:dict:remove
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned common:dict:edit
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned common:dict:add
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned common:sysFile:sysFile
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned common:log
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned oa:notify:notify
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned blog:bContent:bContent
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned system:sysDept:sysDept
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned sys:role:role
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned sys:user:user
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned sys:menu:menu
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned null
2019-04-15 20:55:30 -2. ResultSet.next() returned true
2019-04-15 20:55:30 -2. ResultSet.getString(perms) returned common:dict:dict
2019-04-15 20:55:30 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:30 -2. ResultSet.next() returned false
2019-04-15 20:55:30 -2. ResultSet.close() returned 
2019-04-15 20:55:30 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:55:30 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:55:30 -2. Connection.isClosed() returned false
2019-04-15 20:55:30 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:55:30 -2. Connection.commit() returned 
2019-04-15 20:55:30 -2. Connection.setAutoCommit(true) returned 
2019-04-15 20:55:30 -2. Connection.isReadOnly() returned true
2019-04-15 20:55:30 -2. Connection.setReadOnly(false) returned 
2019-04-15 20:55:30 -2. Connection.isClosed() returned false
2019-04-15 20:55:30 -2. Connection.clearWarnings() returned 
2019-04-15 20:55:30 -2. Connection.clearWarnings() returned 
2019-04-15 20:55:30 -请求地址 : http://localhost:8080/activiti/process/list
2019-04-15 20:55:30 -HTTP METHOD : GET
2019-04-15 20:55:30 -CLASS_METHOD : com.bootdo_jpa.activiti.controller.ProcessController.list
2019-04-15 20:55:30 -参数 : [0, 10]
2019-04-15 20:55:30 -2. Connection.isClosed() returned false
2019-04-15 20:55:30 -2. Connection.getAutoCommit() returned true
2019-04-15 20:55:30 -2. Connection.setAutoCommit(false) returned 
2019-04-15 20:55:31 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:55:31 -2. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:55:31 -2. Connection.prepareStatement(select distinct RES.* 
       
    from ACT_RE_PROCDEF RES
     
      
   
     order by RES.ID_ asc 
    LIMIT ? OFFSET ?) returned net.sf.log4jdbc.PreparedStatementSpy@632ee530
2019-04-15 20:55:31 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:55:31 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:55:31 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:55:31 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:55:31 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:55:31 -2. PreparedStatement.setInt(1, 10) returned 
2019-04-15 20:55:31 -2. PreparedStatement.setInt(2, 0) returned 
2019-04-15 20:55:31 -2. Connection.getAutoCommit() returned false
2019-04-15 20:55:31 -2. Connection.getAutoCommit() returned false
2019-04-15 20:55:31 -select distinct RES.* from ACT_RE_PROCDEF RES order by RES.ID_ asc LIMIT 10 OFFSET 0 

2019-04-15 20:55:31 -select distinct RES.* from ACT_RE_PROCDEF RES order by RES.ID_ asc LIMIT 10 OFFSET 0 
 {executed in 10 msec}
2019-04-15 20:55:31 -2. PreparedStatement.execute() returned true
2019-04-15 20:55:31 -2. PreparedStatement.getUpdateCount() returned -1
2019-04-15 20:55:31 -2. ResultSet.new ResultSet returned 
2019-04-15 20:55:31 -2. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@12d0b5de
2019-04-15 20:55:31 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@3a46a3f0 - Field level information: 
	com.mysql.jdbc.Field@4802d880[catalog=bootdo_jpa,tableName=RES,originalTableName=act_re_procdef,columnName=ID_,originalColumnName=ID_,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= PRIMARY_KEY BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@5c91b3d5[catalog=bootdo_jpa,tableName=RES,originalTableName=act_re_procdef,columnName=REV_,originalColumnName=REV_,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@4b7893dc[catalog=bootdo_jpa,tableName=RES,originalTableName=act_re_procdef,columnName=CATEGORY_,originalColumnName=CATEGORY_,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@442ee060[catalog=bootdo_jpa,tableName=RES,originalTableName=act_re_procdef,columnName=NAME_,originalColumnName=NAME_,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@1ab6f6bd[catalog=bootdo_jpa,tableName=RES,originalTableName=act_re_procdef,columnName=KEY_,originalColumnName=KEY_,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY MULTI_KEY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@4be8e125[catalog=bootdo_jpa,tableName=RES,originalTableName=act_re_procdef,columnName=VERSION_,originalColumnName=VERSION_,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@44817df7[catalog=bootdo_jpa,tableName=RES,originalTableName=act_re_procdef,columnName=DEPLOYMENT_ID_,originalColumnName=DEPLOYMENT_ID_,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@779fa8e7[catalog=bootdo_jpa,tableName=RES,originalTableName=act_re_procdef,columnName=RESOURCE_NAME_,originalColumnName=RESOURCE_NAME_,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@5a31abb7[catalog=bootdo_jpa,tableName=RES,originalTableName=act_re_procdef,columnName=DGRM_RESOURCE_NAME_,originalColumnName=DGRM_RESOURCE_NAME_,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@56dc881d[catalog=bootdo_jpa,tableName=RES,originalTableName=act_re_procdef,columnName=DESCRIPTION_,originalColumnName=DESCRIPTION_,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@197d29f4[catalog=bootdo_jpa,tableName=RES,originalTableName=act_re_procdef,columnName=HAS_START_FORM_KEY_,originalColumnName=HAS_START_FORM_KEY_,mysqlType=1(FIELD_TYPE_TINY),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@13af72ac[catalog=bootdo_jpa,tableName=RES,originalTableName=act_re_procdef,columnName=HAS_GRAPHICAL_NOTATION_,originalColumnName=HAS_GRAPHICAL_NOTATION_,mysqlType=1(FIELD_TYPE_TINY),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@44141f7d[catalog=bootdo_jpa,tableName=RES,originalTableName=act_re_procdef,columnName=SUSPENSION_STATE_,originalColumnName=SUSPENSION_STATE_,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@763aeb82[catalog=bootdo_jpa,tableName=RES,originalTableName=act_re_procdef,columnName=TENANT_ID_,originalColumnName=TENANT_ID_,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
2019-04-15 20:55:31 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@6784e38 - Field level information: 
	com.mysql.jdbc.Field@4802d880[catalog=bootdo_jpa,tableName=RES,originalTableName=act_re_procdef,columnName=ID_,originalColumnName=ID_,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= PRIMARY_KEY BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@5c91b3d5[catalog=bootdo_jpa,tableName=RES,originalTableName=act_re_procdef,columnName=REV_,originalColumnName=REV_,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@4b7893dc[catalog=bootdo_jpa,tableName=RES,originalTableName=act_re_procdef,columnName=CATEGORY_,originalColumnName=CATEGORY_,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@442ee060[catalog=bootdo_jpa,tableName=RES,originalTableName=act_re_procdef,columnName=NAME_,originalColumnName=NAME_,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@1ab6f6bd[catalog=bootdo_jpa,tableName=RES,originalTableName=act_re_procdef,columnName=KEY_,originalColumnName=KEY_,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY MULTI_KEY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@4be8e125[catalog=bootdo_jpa,tableName=RES,originalTableName=act_re_procdef,columnName=VERSION_,originalColumnName=VERSION_,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@44817df7[catalog=bootdo_jpa,tableName=RES,originalTableName=act_re_procdef,columnName=DEPLOYMENT_ID_,originalColumnName=DEPLOYMENT_ID_,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@779fa8e7[catalog=bootdo_jpa,tableName=RES,originalTableName=act_re_procdef,columnName=RESOURCE_NAME_,originalColumnName=RESOURCE_NAME_,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@5a31abb7[catalog=bootdo_jpa,tableName=RES,originalTableName=act_re_procdef,columnName=DGRM_RESOURCE_NAME_,originalColumnName=DGRM_RESOURCE_NAME_,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@56dc881d[catalog=bootdo_jpa,tableName=RES,originalTableName=act_re_procdef,columnName=DESCRIPTION_,originalColumnName=DESCRIPTION_,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@197d29f4[catalog=bootdo_jpa,tableName=RES,originalTableName=act_re_procdef,columnName=HAS_START_FORM_KEY_,originalColumnName=HAS_START_FORM_KEY_,mysqlType=1(FIELD_TYPE_TINY),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@13af72ac[catalog=bootdo_jpa,tableName=RES,originalTableName=act_re_procdef,columnName=HAS_GRAPHICAL_NOTATION_,originalColumnName=HAS_GRAPHICAL_NOTATION_,mysqlType=1(FIELD_TYPE_TINY),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@44141f7d[catalog=bootdo_jpa,tableName=RES,originalTableName=act_re_procdef,columnName=SUSPENSION_STATE_,originalColumnName=SUSPENSION_STATE_,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@763aeb82[catalog=bootdo_jpa,tableName=RES,originalTableName=act_re_procdef,columnName=TENANT_ID_,originalColumnName=TENANT_ID_,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
2019-04-15 20:55:31 -2. ResultSet.getType() returned 1003
2019-04-15 20:55:31 -2. ResultSet.next() returned true
2019-04-15 20:55:31 -2. ResultSet.getString(ID_) returned process:1:145004
2019-04-15 20:55:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:31 -2. ResultSet.getInt(REV_) returned 1
2019-04-15 20:55:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:31 -2. ResultSet.getString(CATEGORY_) returned http://www.activiti.org/processdef
2019-04-15 20:55:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:31 -2. ResultSet.getString(NAME_) returned null
2019-04-15 20:55:31 -2. ResultSet.wasNull() returned true
2019-04-15 20:55:31 -2. ResultSet.getString(KEY_) returned process
2019-04-15 20:55:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:31 -2. ResultSet.getInt(VERSION_) returned 1
2019-04-15 20:55:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:31 -2. ResultSet.getString(DEPLOYMENT_ID_) returned 145001
2019-04-15 20:55:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:31 -2. ResultSet.getString(RESOURCE_NAME_) returned new-process.bpmn20.xml
2019-04-15 20:55:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:31 -2. ResultSet.getString(TENANT_ID_) returned 
2019-04-15 20:55:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:31 -2. ResultSet.getString(DGRM_RESOURCE_NAME_) returned new-process.process.png
2019-04-15 20:55:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:31 -2. ResultSet.getString(DESCRIPTION_) returned null
2019-04-15 20:55:31 -2. ResultSet.wasNull() returned true
2019-04-15 20:55:31 -2. ResultSet.getBoolean(HAS_START_FORM_KEY_) returned false
2019-04-15 20:55:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:31 -2. ResultSet.getBoolean(HAS_GRAPHICAL_NOTATION_) returned true
2019-04-15 20:55:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:31 -2. ResultSet.getInt(SUSPENSION_STATE_) returned 1
2019-04-15 20:55:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:31 -2. ResultSet.next() returned true
2019-04-15 20:55:31 -2. ResultSet.getString(ID_) returned salary:3:135067
2019-04-15 20:55:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:31 -2. ResultSet.getInt(REV_) returned 1
2019-04-15 20:55:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:31 -2. ResultSet.getString(CATEGORY_) returned http://www.activiti.org/test
2019-04-15 20:55:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:31 -2. ResultSet.getString(NAME_) returned 流程审批测试流程
2019-04-15 20:55:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:31 -2. ResultSet.getString(KEY_) returned salary
2019-04-15 20:55:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:31 -2. ResultSet.getInt(VERSION_) returned 3
2019-04-15 20:55:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:31 -2. ResultSet.getString(DEPLOYMENT_ID_) returned 135064
2019-04-15 20:55:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:31 -2. ResultSet.getString(RESOURCE_NAME_) returned 流程审批测试流程.bpmn20.xml
2019-04-15 20:55:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:31 -2. ResultSet.getString(TENANT_ID_) returned 
2019-04-15 20:55:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:31 -2. ResultSet.getString(DGRM_RESOURCE_NAME_) returned 流程审批测试流程.salary.png
2019-04-15 20:55:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:31 -2. ResultSet.getString(DESCRIPTION_) returned null
2019-04-15 20:55:31 -2. ResultSet.wasNull() returned true
2019-04-15 20:55:31 -2. ResultSet.getBoolean(HAS_START_FORM_KEY_) returned true
2019-04-15 20:55:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:31 -2. ResultSet.getBoolean(HAS_GRAPHICAL_NOTATION_) returned true
2019-04-15 20:55:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:31 -2. ResultSet.getInt(SUSPENSION_STATE_) returned 1
2019-04-15 20:55:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:31 -2. ResultSet.next() returned false
2019-04-15 20:55:31 -2. ResultSet.close() returned 
2019-04-15 20:55:31 -2. Connection.getMetaData() returned com.mysql.jdbc.JDBC4DatabaseMetaData@6fab7df1
2019-04-15 20:55:31 -2. PreparedStatement.getMoreResults() returned false
2019-04-15 20:55:31 -2. PreparedStatement.getUpdateCount() returned -1
2019-04-15 20:55:31 -2. Connection.isClosed() returned false
2019-04-15 20:55:31 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:55:31 -2. Connection.commit() returned 
2019-04-15 20:55:31 -2. Connection.setAutoCommit(true) returned 
2019-04-15 20:55:31 -2. Connection.getAutoCommit() returned true
2019-04-15 20:55:31 -2. Connection.setAutoCommit(false) returned 
2019-04-15 20:55:31 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:55:31 -2. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:55:31 -2. Connection.prepareStatement(select distinct count(RES.ID_)
       
    from ACT_RE_PROCDEF RES) returned net.sf.log4jdbc.PreparedStatementSpy@528e4673
2019-04-15 20:55:31 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:55:31 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:55:31 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:55:31 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:55:31 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:55:31 -2. Connection.getAutoCommit() returned false
2019-04-15 20:55:31 -2. Connection.getAutoCommit() returned false
2019-04-15 20:55:31 -select distinct count(RES.ID_) from ACT_RE_PROCDEF RES 

2019-04-15 20:55:31 -select distinct count(RES.ID_) from ACT_RE_PROCDEF RES 
 {executed in 0 msec}
2019-04-15 20:55:31 -2. PreparedStatement.execute() returned true
2019-04-15 20:55:31 -2. PreparedStatement.getUpdateCount() returned -1
2019-04-15 20:55:31 -2. ResultSet.new ResultSet returned 
2019-04-15 20:55:31 -2. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@53b636e7
2019-04-15 20:55:31 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@4fb5949d - Field level information: 
	com.mysql.jdbc.Field@7b453c6f[catalog=,tableName=,originalTableName=,columnName=count(RES.ID_),originalColumnName=,mysqlType=8(FIELD_TYPE_LONGLONG),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
2019-04-15 20:55:31 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@5b5850aa - Field level information: 
	com.mysql.jdbc.Field@7b453c6f[catalog=,tableName=,originalTableName=,columnName=count(RES.ID_),originalColumnName=,mysqlType=8(FIELD_TYPE_LONGLONG),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
2019-04-15 20:55:31 -2. ResultSet.getType() returned 1003
2019-04-15 20:55:31 -2. ResultSet.next() returned true
2019-04-15 20:55:31 -2. ResultSet.getLong(count(RES.ID_)) returned 2
2019-04-15 20:55:31 -2. ResultSet.wasNull() returned false
2019-04-15 20:55:31 -2. ResultSet.next() returned false
2019-04-15 20:55:31 -2. ResultSet.close() returned 
2019-04-15 20:55:31 -2. Connection.getMetaData() returned com.mysql.jdbc.JDBC4DatabaseMetaData@5ac92efe
2019-04-15 20:55:31 -2. PreparedStatement.getMoreResults() returned false
2019-04-15 20:55:31 -2. PreparedStatement.getUpdateCount() returned -1
2019-04-15 20:55:31 -2. Connection.isClosed() returned false
2019-04-15 20:55:31 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:55:31 -2. Connection.commit() returned 
2019-04-15 20:55:31 -2. Connection.setAutoCommit(true) returned 
2019-04-15 20:55:31 -耗时 : 45
2019-04-15 20:55:31 -2. Connection.isClosed() returned false
2019-04-15 20:55:31 -2. Connection.clearWarnings() returned 
2019-04-15 20:55:31 -2. Connection.clearWarnings() returned 
2019-04-15 20:56:15 -请求地址 : http://localhost:8080/sys/user/personal
2019-04-15 20:56:15 -HTTP METHOD : GET
2019-04-15 20:56:15 -CLASS_METHOD : com.bootdo_jpa.system.controller.UserController.personal
2019-04-15 20:56:15 -参数 : [{}]
2019-04-15 20:56:15 -2. Connection.isClosed() returned false
2019-04-15 20:56:15 -2. Connection.getAutoCommit() returned true
2019-04-15 20:56:15 -2. Connection.setAutoCommit(false) returned 
2019-04-15 20:56:15 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:56:15 -2. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:56:15 -2. Connection.prepareStatement(select role_id from sys_user_role where user_id = ?) returned net.sf.log4jdbc.PreparedStatementSpy@3012b05f
2019-04-15 20:56:15 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:56:15 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:56:15 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:56:15 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:56:15 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:56:15 -2. PreparedStatement.setLong(1, 1) returned 
2019-04-15 20:56:15 -2. Connection.getAutoCommit() returned false
2019-04-15 20:56:15 -2. Connection.getAutoCommit() returned false
2019-04-15 20:56:15 -select role_id from sys_user_role where user_id = 1 

2019-04-15 20:56:15 -select role_id from sys_user_role where user_id = 1 
 {executed in 1 msec}
2019-04-15 20:56:15 -2. ResultSet.new ResultSet returned 
2019-04-15 20:56:15 -2. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@7935474a
2019-04-15 20:56:15 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@478088fd - Field level information: 
	com.mysql.jdbc.Field@62b5581a[catalog=bootdo_jpa,tableName=sys_user_role,originalTableName=sys_user_role,columnName=role_id,originalColumnName=role_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
2019-04-15 20:56:15 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@c13c63b - Field level information: 
	com.mysql.jdbc.Field@62b5581a[catalog=bootdo_jpa,tableName=sys_user_role,originalTableName=sys_user_role,columnName=role_id,originalColumnName=role_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
2019-04-15 20:56:15 -2. ResultSet.next() returned true
2019-04-15 20:56:15 -2. ResultSet.getBigDecimal(role_id) returned 1
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.next() returned false
2019-04-15 20:56:15 -2. ResultSet.close() returned 
2019-04-15 20:56:15 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:56:15 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:56:15 -2. Connection.isClosed() returned false
2019-04-15 20:56:15 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:56:15 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:56:15 -2. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:56:15 -2. Connection.prepareStatement(select userdo0_.user_id as user_id1_14_0_, userdo0_.birth as birth2_14_0_, userdo0_.city as city3_14_0_, userdo0_.dept_id as dept_id4_14_0_, userdo0_.district as district5_14_0_, userdo0_.email as email6_14_0_, userdo0_.gmt_create as gmt_crea7_14_0_, userdo0_.gmt_modified as gmt_modi8_14_0_, userdo0_.hobby as hobby9_14_0_, userdo0_.live_address as live_ad10_14_0_, userdo0_.mobile as mobile11_14_0_, userdo0_.name as name12_14_0_, userdo0_.password as passwor13_14_0_, userdo0_.pic_id as pic_id14_14_0_, userdo0_.province as provinc15_14_0_, userdo0_.sex as sex16_14_0_, userdo0_.status as status17_14_0_, userdo0_.user_id_create as user_id18_14_0_, userdo0_.username as usernam19_14_0_ from sys_user userdo0_ where userdo0_.user_id=?) returned net.sf.log4jdbc.PreparedStatementSpy@7aa9444
2019-04-15 20:56:15 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:56:15 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:56:15 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:56:15 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:56:15 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:56:15 -2. PreparedStatement.setLong(1, 1) returned 
2019-04-15 20:56:15 -2. Connection.getAutoCommit() returned false
2019-04-15 20:56:15 -select userdo0_.user_id as user_id1_14_0_, userdo0_.birth as birth2_14_0_, userdo0_.city as 
city3_14_0_, userdo0_.dept_id as dept_id4_14_0_, userdo0_.district as district5_14_0_, userdo0_.email 
as email6_14_0_, userdo0_.gmt_create as gmt_crea7_14_0_, userdo0_.gmt_modified as gmt_modi8_14_0_, 
userdo0_.hobby as hobby9_14_0_, userdo0_.live_address as live_ad10_14_0_, userdo0_.mobile as 
mobile11_14_0_, userdo0_.name as name12_14_0_, userdo0_.password as passwor13_14_0_, userdo0_.pic_id 
as pic_id14_14_0_, userdo0_.province as provinc15_14_0_, userdo0_.sex as sex16_14_0_, userdo0_.status 
as status17_14_0_, userdo0_.user_id_create as user_id18_14_0_, userdo0_.username as usernam19_14_0_ 
from sys_user userdo0_ where userdo0_.user_id=1 

2019-04-15 20:56:15 -select userdo0_.user_id as user_id1_14_0_, userdo0_.birth as birth2_14_0_, userdo0_.city as 
city3_14_0_, userdo0_.dept_id as dept_id4_14_0_, userdo0_.district as district5_14_0_, userdo0_.email 
as email6_14_0_, userdo0_.gmt_create as gmt_crea7_14_0_, userdo0_.gmt_modified as gmt_modi8_14_0_, 
userdo0_.hobby as hobby9_14_0_, userdo0_.live_address as live_ad10_14_0_, userdo0_.mobile as 
mobile11_14_0_, userdo0_.name as name12_14_0_, userdo0_.password as passwor13_14_0_, userdo0_.pic_id 
as pic_id14_14_0_, userdo0_.province as provinc15_14_0_, userdo0_.sex as sex16_14_0_, userdo0_.status 
as status17_14_0_, userdo0_.user_id_create as user_id18_14_0_, userdo0_.username as usernam19_14_0_ 
from sys_user userdo0_ where userdo0_.user_id=1 
 {executed in 1 msec}
2019-04-15 20:56:15 -2. ResultSet.new ResultSet returned 
2019-04-15 20:56:15 -2. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@345862eb
2019-04-15 20:56:15 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@403ab204 - Field level information: 
	com.mysql.jdbc.Field@136116f3[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=user_id1_14_0_,originalColumnName=user_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags= AUTO_INCREMENT PRIMARY_KEY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@773d6e5e[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=birth2_14_0_,originalColumnName=birth,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@851568[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=city3_14_0_,originalColumnName=city,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@153a3dee[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=dept_id4_14_0_,originalColumnName=dept_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@e777734[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=district5_14_0_,originalColumnName=district,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@12a4a73a[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=email6_14_0_,originalColumnName=email,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@3a22ce53[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=gmt_crea7_14_0_,originalColumnName=gmt_create,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@7eb351b4[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=gmt_modi8_14_0_,originalColumnName=gmt_modified,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@4bc84781[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=hobby9_14_0_,originalColumnName=hobby,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@7ce2b4b5[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=live_ad10_14_0_,originalColumnName=live_address,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@509ebd2c[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=mobile11_14_0_,originalColumnName=mobile,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@3444787a[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=name12_14_0_,originalColumnName=name,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@3d39d53c[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=passwor13_14_0_,originalColumnName=password,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@54178932[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=pic_id14_14_0_,originalColumnName=pic_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@71c52941[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=provinc15_14_0_,originalColumnName=province,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@66d518ab[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=sex16_14_0_,originalColumnName=sex,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@15b6b178[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=status17_14_0_,originalColumnName=status,mysqlType=1(FIELD_TYPE_TINY),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@7d00e4e5[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=user_id18_14_0_,originalColumnName=user_id_create,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@25574525[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=usernam19_14_0_,originalColumnName=username,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
2019-04-15 20:56:15 -2. ResultSet.next() returned true
2019-04-15 20:56:15 -2. ResultSet.getTimestamp(birth2_14_0_) returned 2017-12-14 00:00:00.0
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getString(city3_14_0_) returned 北京市市辖区
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getLong(dept_id4_14_0_) returned 6
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getString(district5_14_0_) returned 东城区
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getString(email6_14_0_) returned admin@example.com
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getTimestamp(gmt_crea7_14_0_) returned 2017-08-15 21:40:39.0
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getTimestamp(gmt_modi8_14_0_) returned 2017-08-15 21:41:00.0
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getString(hobby9_14_0_) returned 122;121;
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getString(live_ad10_14_0_) returned ccc
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getString(mobile11_14_0_) returned 17699999999
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getString(name12_14_0_) returned 超级管理员
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getString(passwor13_14_0_) returned 27bd386e70f280e24c2f4f2a549b82cf
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getLong(pic_id14_14_0_) returned 138
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getString(provinc15_14_0_) returned 北京市
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getLong(sex16_14_0_) returned 96
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getInt(status17_14_0_) returned 1
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getLong(user_id18_14_0_) returned 1
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getString(usernam19_14_0_) returned admin
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.next() returned false
2019-04-15 20:56:15 -2. ResultSet.close() returned 
2019-04-15 20:56:15 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:56:15 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:56:15 -2. Connection.isClosed() returned false
2019-04-15 20:56:15 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:56:15 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:56:15 -2. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:56:15 -2. Connection.prepareStatement(select deptdo0_.dept_id as dept_id1_6_0_, deptdo0_.del_flag as del_flag2_6_0_, deptdo0_.name as name3_6_0_, deptdo0_.order_num as order_nu4_6_0_, deptdo0_.parent_id as parent_i5_6_0_ from sys_dept deptdo0_ where deptdo0_.dept_id=?) returned net.sf.log4jdbc.PreparedStatementSpy@2ea8b736
2019-04-15 20:56:15 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:56:15 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:56:15 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:56:15 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:56:15 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:56:15 -2. PreparedStatement.setLong(1, 6) returned 
2019-04-15 20:56:15 -2. Connection.getAutoCommit() returned false
2019-04-15 20:56:15 -select deptdo0_.dept_id as dept_id1_6_0_, deptdo0_.del_flag as del_flag2_6_0_, deptdo0_.name 
as name3_6_0_, deptdo0_.order_num as order_nu4_6_0_, deptdo0_.parent_id as parent_i5_6_0_ from 
sys_dept deptdo0_ where deptdo0_.dept_id=6 

2019-04-15 20:56:15 -select deptdo0_.dept_id as dept_id1_6_0_, deptdo0_.del_flag as del_flag2_6_0_, deptdo0_.name 
as name3_6_0_, deptdo0_.order_num as order_nu4_6_0_, deptdo0_.parent_id as parent_i5_6_0_ from 
sys_dept deptdo0_ where deptdo0_.dept_id=6 
 {executed in 1 msec}
2019-04-15 20:56:15 -2. ResultSet.new ResultSet returned 
2019-04-15 20:56:15 -2. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@647424bb
2019-04-15 20:56:15 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@18d379e8 - Field level information: 
	com.mysql.jdbc.Field@73a97cc3[catalog=bootdo_jpa,tableName=deptdo0_,originalTableName=sys_dept,columnName=dept_id1_6_0_,originalColumnName=dept_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags= AUTO_INCREMENT PRIMARY_KEY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@3668c731[catalog=bootdo_jpa,tableName=deptdo0_,originalTableName=sys_dept,columnName=del_flag2_6_0_,originalColumnName=del_flag,mysqlType=1(FIELD_TYPE_TINY),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@737c7cbb[catalog=bootdo_jpa,tableName=deptdo0_,originalTableName=sys_dept,columnName=name3_6_0_,originalColumnName=name,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@70634705[catalog=bootdo_jpa,tableName=deptdo0_,originalTableName=sys_dept,columnName=order_nu4_6_0_,originalColumnName=order_num,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@489472ae[catalog=bootdo_jpa,tableName=deptdo0_,originalTableName=sys_dept,columnName=parent_i5_6_0_,originalColumnName=parent_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
2019-04-15 20:56:15 -2. ResultSet.next() returned true
2019-04-15 20:56:15 -2. ResultSet.getInt(del_flag2_6_0_) returned 1
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getString(name3_6_0_) returned 研发部
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getInt(order_nu4_6_0_) returned 1
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getLong(parent_i5_6_0_) returned 0
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.next() returned false
2019-04-15 20:56:15 -2. ResultSet.close() returned 
2019-04-15 20:56:15 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:56:15 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:56:15 -2. Connection.isClosed() returned false
2019-04-15 20:56:15 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:56:15 -2. Connection.commit() returned 
2019-04-15 20:56:15 -2. Connection.setAutoCommit(true) returned 
2019-04-15 20:56:15 -2. Connection.setReadOnly(true) returned 
2019-04-15 20:56:15 -2. Connection.getAutoCommit() returned true
2019-04-15 20:56:15 -2. Connection.setAutoCommit(false) returned 
2019-04-15 20:56:15 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:56:15 -2. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:56:15 -2. Connection.prepareStatement(select dictdo0_.id as id1_7_, dictdo0_.create_by as create_b2_7_, dictdo0_.create_date as create_d3_7_, dictdo0_.del_flag as del_flag4_7_, dictdo0_.description as descript5_7_, dictdo0_.name as name6_7_, dictdo0_.parent_id as parent_i7_7_, dictdo0_.remarks as remarks8_7_, dictdo0_.sort as sort9_7_, dictdo0_.type as type10_7_, dictdo0_.update_by as update_11_7_, dictdo0_.update_date as update_12_7_, dictdo0_.value as value13_7_ from sys_dict dictdo0_ where dictdo0_.type=?) returned net.sf.log4jdbc.PreparedStatementSpy@2e91a681
2019-04-15 20:56:15 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:56:15 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:56:15 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:56:15 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:56:15 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:56:15 -2. PreparedStatement.setString(1, "hobby") returned 
2019-04-15 20:56:15 -2. Connection.getAutoCommit() returned false
2019-04-15 20:56:15 -2. Connection.getAutoCommit() returned false
2019-04-15 20:56:15 -select dictdo0_.id as id1_7_, dictdo0_.create_by as create_b2_7_, dictdo0_.create_date as create_d3_7_, 
dictdo0_.del_flag as del_flag4_7_, dictdo0_.description as descript5_7_, dictdo0_.name as name6_7_, 
dictdo0_.parent_id as parent_i7_7_, dictdo0_.remarks as remarks8_7_, dictdo0_.sort as sort9_7_, 
dictdo0_.type as type10_7_, dictdo0_.update_by as update_11_7_, dictdo0_.update_date as update_12_7_, 
dictdo0_.value as value13_7_ from sys_dict dictdo0_ where dictdo0_.type='hobby' 

2019-04-15 20:56:15 -select dictdo0_.id as id1_7_, dictdo0_.create_by as create_b2_7_, dictdo0_.create_date as create_d3_7_, 
dictdo0_.del_flag as del_flag4_7_, dictdo0_.description as descript5_7_, dictdo0_.name as name6_7_, 
dictdo0_.parent_id as parent_i7_7_, dictdo0_.remarks as remarks8_7_, dictdo0_.sort as sort9_7_, 
dictdo0_.type as type10_7_, dictdo0_.update_by as update_11_7_, dictdo0_.update_date as update_12_7_, 
dictdo0_.value as value13_7_ from sys_dict dictdo0_ where dictdo0_.type='hobby' 
 {executed in 1 msec}
2019-04-15 20:56:15 -2. ResultSet.new ResultSet returned 
2019-04-15 20:56:15 -2. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@3e6b13da
2019-04-15 20:56:15 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@3355b97a - Field level information: 
	com.mysql.jdbc.Field@1053a43f[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=id1_7_,originalColumnName=id,mysqlType=8(FIELD_TYPE_LONGLONG),flags= AUTO_INCREMENT PRIMARY_KEY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@26a4699f[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=create_b2_7_,originalColumnName=create_by,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@40b74b52[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=create_d3_7_,originalColumnName=create_date,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@5e37b457[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=del_flag4_7_,originalColumnName=del_flag,mysqlType=254(FIELD_TYPE_STRING),flags= BINARY MULTI_KEY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@53c891f2[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=descript5_7_,originalColumnName=description,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@56a5f285[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=name6_7_,originalColumnName=name,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY MULTI_KEY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@2cb2ced8[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=parent_i7_7_,originalColumnName=parent_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@4fc44215[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=remarks8_7_,originalColumnName=remarks,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@58140d1e[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=sort9_7_,originalColumnName=sort,mysqlType=246( Unknown MySQL Type # 246),flags=, charsetIndex=63, charsetName=ISO-8859-1]
	com.mysql.jdbc.Field@215cfd43[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=type10_7_,originalColumnName=type,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@1ba223be[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=update_11_7_,originalColumnName=update_by,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@761b0e35[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=update_12_7_,originalColumnName=update_date,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@e1f9115[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=value13_7_,originalColumnName=value,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY MULTI_KEY, charsetIndex=83, charsetName=utf8]
2019-04-15 20:56:15 -2. ResultSet.next() returned true
2019-04-15 20:56:15 -2. ResultSet.getLong(id1_7_) returned 121
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getInt(create_b2_7_) returned 0
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned true
2019-04-15 20:56:15 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:56:15 -2. ResultSet.getString(del_flag4_7_) returned 
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getString(descript5_7_) returned 爱好
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getString(name6_7_) returned 编码
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned true
2019-04-15 20:56:15 -2. ResultSet.getString(remarks8_7_) returned 
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getBigDecimal(sort9_7_) returned null
2019-04-15 20:56:15 -2. ResultSet.getString(type10_7_) returned hobby
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getLong(update_11_7_) returned 0
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned true
2019-04-15 20:56:15 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:56:15 -2. ResultSet.getString(value13_7_) returned code
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.next() returned true
2019-04-15 20:56:15 -2. ResultSet.getLong(id1_7_) returned 122
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getInt(create_b2_7_) returned 0
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned true
2019-04-15 20:56:15 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:56:15 -2. ResultSet.getString(del_flag4_7_) returned 
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getString(descript5_7_) returned 爱好
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getString(name6_7_) returned 绘画
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned true
2019-04-15 20:56:15 -2. ResultSet.getString(remarks8_7_) returned 
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getBigDecimal(sort9_7_) returned null
2019-04-15 20:56:15 -2. ResultSet.getString(type10_7_) returned hobby
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getLong(update_11_7_) returned 0
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned true
2019-04-15 20:56:15 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:56:15 -2. ResultSet.getString(value13_7_) returned painting
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.next() returned false
2019-04-15 20:56:15 -2. ResultSet.close() returned 
2019-04-15 20:56:15 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:56:15 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:56:15 -2. Connection.isClosed() returned false
2019-04-15 20:56:15 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:56:15 -2. Connection.commit() returned 
2019-04-15 20:56:15 -2. Connection.setAutoCommit(true) returned 
2019-04-15 20:56:15 -2. Connection.isReadOnly() returned true
2019-04-15 20:56:15 -2. Connection.setReadOnly(false) returned 
2019-04-15 20:56:15 -2. Connection.setReadOnly(true) returned 
2019-04-15 20:56:15 -2. Connection.getAutoCommit() returned true
2019-04-15 20:56:15 -2. Connection.setAutoCommit(false) returned 
2019-04-15 20:56:15 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:56:15 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:56:15 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:56:15 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:56:15 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:56:15 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:56:15 -2. PreparedStatement.setString(1, "sex") returned 
2019-04-15 20:56:15 -2. Connection.getAutoCommit() returned false
2019-04-15 20:56:15 -2. Connection.getAutoCommit() returned false
2019-04-15 20:56:15 -select dictdo0_.id as id1_7_, dictdo0_.create_by as create_b2_7_, dictdo0_.create_date as create_d3_7_, 
dictdo0_.del_flag as del_flag4_7_, dictdo0_.description as descript5_7_, dictdo0_.name as name6_7_, 
dictdo0_.parent_id as parent_i7_7_, dictdo0_.remarks as remarks8_7_, dictdo0_.sort as sort9_7_, 
dictdo0_.type as type10_7_, dictdo0_.update_by as update_11_7_, dictdo0_.update_date as update_12_7_, 
dictdo0_.value as value13_7_ from sys_dict dictdo0_ where dictdo0_.type='sex' 

2019-04-15 20:56:15 -select dictdo0_.id as id1_7_, dictdo0_.create_by as create_b2_7_, dictdo0_.create_date as create_d3_7_, 
dictdo0_.del_flag as del_flag4_7_, dictdo0_.description as descript5_7_, dictdo0_.name as name6_7_, 
dictdo0_.parent_id as parent_i7_7_, dictdo0_.remarks as remarks8_7_, dictdo0_.sort as sort9_7_, 
dictdo0_.type as type10_7_, dictdo0_.update_by as update_11_7_, dictdo0_.update_date as update_12_7_, 
dictdo0_.value as value13_7_ from sys_dict dictdo0_ where dictdo0_.type='sex' 
 {executed in 1 msec}
2019-04-15 20:56:15 -2. ResultSet.new ResultSet returned 
2019-04-15 20:56:15 -2. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@20d31138
2019-04-15 20:56:15 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@60630c2c - Field level information: 
	com.mysql.jdbc.Field@791a886[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=id1_7_,originalColumnName=id,mysqlType=8(FIELD_TYPE_LONGLONG),flags= AUTO_INCREMENT PRIMARY_KEY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@1dae61b2[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=create_b2_7_,originalColumnName=create_by,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@25cce9ee[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=create_d3_7_,originalColumnName=create_date,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@5db68317[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=del_flag4_7_,originalColumnName=del_flag,mysqlType=254(FIELD_TYPE_STRING),flags= BINARY MULTI_KEY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@57e9c5bf[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=descript5_7_,originalColumnName=description,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@39248d01[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=name6_7_,originalColumnName=name,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY MULTI_KEY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@7be58052[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=parent_i7_7_,originalColumnName=parent_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@12a20a02[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=remarks8_7_,originalColumnName=remarks,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@bfff1d4[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=sort9_7_,originalColumnName=sort,mysqlType=246( Unknown MySQL Type # 246),flags=, charsetIndex=63, charsetName=ISO-8859-1]
	com.mysql.jdbc.Field@162e292f[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=type10_7_,originalColumnName=type,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@411edca8[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=update_11_7_,originalColumnName=update_by,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@43ee2c93[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=update_12_7_,originalColumnName=update_date,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@37eb146b[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=value13_7_,originalColumnName=value,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY MULTI_KEY, charsetIndex=83, charsetName=utf8]
2019-04-15 20:56:15 -2. ResultSet.next() returned true
2019-04-15 20:56:15 -2. ResultSet.getLong(id1_7_) returned 96
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getInt(create_b2_7_) returned 1
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:56:15 -2. ResultSet.getString(del_flag4_7_) returned 0
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getString(descript5_7_) returned 性别
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getString(name6_7_) returned 男
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getString(remarks8_7_) returned null
2019-04-15 20:56:15 -2. ResultSet.getBigDecimal(sort9_7_) returned 10
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getString(type10_7_) returned sex
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getLong(update_11_7_) returned 1
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:56:15 -2. ResultSet.getString(value13_7_) returned 1
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.next() returned true
2019-04-15 20:56:15 -2. ResultSet.getLong(id1_7_) returned 97
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getInt(create_b2_7_) returned 1
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:56:15 -2. ResultSet.getString(del_flag4_7_) returned 0
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getString(descript5_7_) returned 性别
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getString(name6_7_) returned 女
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getString(remarks8_7_) returned null
2019-04-15 20:56:15 -2. ResultSet.getBigDecimal(sort9_7_) returned 20
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getString(type10_7_) returned sex
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getLong(update_11_7_) returned 1
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:56:15 -2. ResultSet.getString(value13_7_) returned 2
2019-04-15 20:56:15 -2. ResultSet.wasNull() returned false
2019-04-15 20:56:15 -2. ResultSet.next() returned false
2019-04-15 20:56:15 -2. ResultSet.close() returned 
2019-04-15 20:56:15 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:56:15 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:56:15 -2. Connection.isClosed() returned false
2019-04-15 20:56:15 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:56:15 -2. Connection.commit() returned 
2019-04-15 20:56:15 -2. Connection.setAutoCommit(true) returned 
2019-04-15 20:56:15 -2. Connection.isReadOnly() returned true
2019-04-15 20:56:15 -2. Connection.setReadOnly(false) returned 
2019-04-15 20:56:15 -耗时 : 37
2019-04-15 20:56:15 -2. Connection.isClosed() returned false
2019-04-15 20:56:15 -2. Connection.clearWarnings() returned 
2019-04-15 20:56:15 -2. Connection.clearWarnings() returned 
2019-04-15 20:57:12 -请求地址 : http://localhost:8080/sys/user/personal
2019-04-15 20:57:12 -HTTP METHOD : GET
2019-04-15 20:57:12 -CLASS_METHOD : com.bootdo_jpa.system.controller.UserController.personal
2019-04-15 20:57:12 -参数 : [{}]
2019-04-15 20:57:12 -2. Connection.isClosed() returned false
2019-04-15 20:57:12 -2. Connection.getAutoCommit() returned true
2019-04-15 20:57:12 -2. Connection.setAutoCommit(false) returned 
2019-04-15 20:57:12 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:57:12 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:57:12 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:57:12 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:57:12 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:57:12 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:57:12 -2. PreparedStatement.setLong(1, 1) returned 
2019-04-15 20:57:12 -2. Connection.getAutoCommit() returned false
2019-04-15 20:57:12 -2. Connection.getAutoCommit() returned false
2019-04-15 20:57:12 -select role_id from sys_user_role where user_id = 1 

2019-04-15 20:57:12 -select role_id from sys_user_role where user_id = 1 
 {executed in 0 msec}
2019-04-15 20:57:12 -2. ResultSet.new ResultSet returned 
2019-04-15 20:57:12 -2. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@26e24369
2019-04-15 20:57:12 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@41e74838 - Field level information: 
	com.mysql.jdbc.Field@4df58abe[catalog=bootdo_jpa,tableName=sys_user_role,originalTableName=sys_user_role,columnName=role_id,originalColumnName=role_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
2019-04-15 20:57:12 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@d3ac5fc - Field level information: 
	com.mysql.jdbc.Field@4df58abe[catalog=bootdo_jpa,tableName=sys_user_role,originalTableName=sys_user_role,columnName=role_id,originalColumnName=role_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
2019-04-15 20:57:12 -2. ResultSet.next() returned true
2019-04-15 20:57:12 -2. ResultSet.getBigDecimal(role_id) returned 1
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.next() returned false
2019-04-15 20:57:12 -2. ResultSet.close() returned 
2019-04-15 20:57:12 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:57:12 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:57:12 -2. Connection.isClosed() returned false
2019-04-15 20:57:12 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:57:12 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:57:12 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:57:12 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:57:12 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:57:12 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:57:12 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:57:12 -2. PreparedStatement.setLong(1, 1) returned 
2019-04-15 20:57:12 -2. Connection.getAutoCommit() returned false
2019-04-15 20:57:12 -select userdo0_.user_id as user_id1_14_0_, userdo0_.birth as birth2_14_0_, userdo0_.city as 
city3_14_0_, userdo0_.dept_id as dept_id4_14_0_, userdo0_.district as district5_14_0_, userdo0_.email 
as email6_14_0_, userdo0_.gmt_create as gmt_crea7_14_0_, userdo0_.gmt_modified as gmt_modi8_14_0_, 
userdo0_.hobby as hobby9_14_0_, userdo0_.live_address as live_ad10_14_0_, userdo0_.mobile as 
mobile11_14_0_, userdo0_.name as name12_14_0_, userdo0_.password as passwor13_14_0_, userdo0_.pic_id 
as pic_id14_14_0_, userdo0_.province as provinc15_14_0_, userdo0_.sex as sex16_14_0_, userdo0_.status 
as status17_14_0_, userdo0_.user_id_create as user_id18_14_0_, userdo0_.username as usernam19_14_0_ 
from sys_user userdo0_ where userdo0_.user_id=1 

2019-04-15 20:57:12 -select userdo0_.user_id as user_id1_14_0_, userdo0_.birth as birth2_14_0_, userdo0_.city as 
city3_14_0_, userdo0_.dept_id as dept_id4_14_0_, userdo0_.district as district5_14_0_, userdo0_.email 
as email6_14_0_, userdo0_.gmt_create as gmt_crea7_14_0_, userdo0_.gmt_modified as gmt_modi8_14_0_, 
userdo0_.hobby as hobby9_14_0_, userdo0_.live_address as live_ad10_14_0_, userdo0_.mobile as 
mobile11_14_0_, userdo0_.name as name12_14_0_, userdo0_.password as passwor13_14_0_, userdo0_.pic_id 
as pic_id14_14_0_, userdo0_.province as provinc15_14_0_, userdo0_.sex as sex16_14_0_, userdo0_.status 
as status17_14_0_, userdo0_.user_id_create as user_id18_14_0_, userdo0_.username as usernam19_14_0_ 
from sys_user userdo0_ where userdo0_.user_id=1 
 {executed in 0 msec}
2019-04-15 20:57:12 -2. ResultSet.new ResultSet returned 
2019-04-15 20:57:12 -2. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@17546e97
2019-04-15 20:57:12 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@4c9a5ca4 - Field level information: 
	com.mysql.jdbc.Field@563476e[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=user_id1_14_0_,originalColumnName=user_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags= AUTO_INCREMENT PRIMARY_KEY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@2394a097[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=birth2_14_0_,originalColumnName=birth,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@170052a4[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=city3_14_0_,originalColumnName=city,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@961439c[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=dept_id4_14_0_,originalColumnName=dept_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@16a63de9[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=district5_14_0_,originalColumnName=district,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@10b0b7b2[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=email6_14_0_,originalColumnName=email,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@5b04272[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=gmt_crea7_14_0_,originalColumnName=gmt_create,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@64e9cfb[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=gmt_modi8_14_0_,originalColumnName=gmt_modified,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@2120b0ae[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=hobby9_14_0_,originalColumnName=hobby,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@34388e1f[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=live_ad10_14_0_,originalColumnName=live_address,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@331ce938[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=mobile11_14_0_,originalColumnName=mobile,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@414702e4[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=name12_14_0_,originalColumnName=name,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@65467fa2[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=passwor13_14_0_,originalColumnName=password,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@157e4d63[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=pic_id14_14_0_,originalColumnName=pic_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@41ff33dd[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=provinc15_14_0_,originalColumnName=province,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@38565924[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=sex16_14_0_,originalColumnName=sex,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@6ebb8ae3[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=status17_14_0_,originalColumnName=status,mysqlType=1(FIELD_TYPE_TINY),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@949c702[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=user_id18_14_0_,originalColumnName=user_id_create,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@31106c2d[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=usernam19_14_0_,originalColumnName=username,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
2019-04-15 20:57:12 -2. ResultSet.next() returned true
2019-04-15 20:57:12 -2. ResultSet.getTimestamp(birth2_14_0_) returned 2017-12-14 00:00:00.0
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getString(city3_14_0_) returned 北京市市辖区
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getLong(dept_id4_14_0_) returned 6
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getString(district5_14_0_) returned 东城区
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getString(email6_14_0_) returned admin@example.com
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getTimestamp(gmt_crea7_14_0_) returned 2017-08-15 21:40:39.0
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getTimestamp(gmt_modi8_14_0_) returned 2017-08-15 21:41:00.0
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getString(hobby9_14_0_) returned 122;121;
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getString(live_ad10_14_0_) returned ccc
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getString(mobile11_14_0_) returned 17699999999
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getString(name12_14_0_) returned 超级管理员
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getString(passwor13_14_0_) returned 27bd386e70f280e24c2f4f2a549b82cf
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getLong(pic_id14_14_0_) returned 138
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getString(provinc15_14_0_) returned 北京市
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getLong(sex16_14_0_) returned 96
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getInt(status17_14_0_) returned 1
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getLong(user_id18_14_0_) returned 1
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getString(usernam19_14_0_) returned admin
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.next() returned false
2019-04-15 20:57:12 -2. ResultSet.close() returned 
2019-04-15 20:57:12 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:57:12 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:57:12 -2. Connection.isClosed() returned false
2019-04-15 20:57:12 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:57:12 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:57:12 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:57:12 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:57:12 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:57:12 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:57:12 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:57:12 -2. PreparedStatement.setLong(1, 6) returned 
2019-04-15 20:57:12 -2. Connection.getAutoCommit() returned false
2019-04-15 20:57:12 -select deptdo0_.dept_id as dept_id1_6_0_, deptdo0_.del_flag as del_flag2_6_0_, deptdo0_.name 
as name3_6_0_, deptdo0_.order_num as order_nu4_6_0_, deptdo0_.parent_id as parent_i5_6_0_ from 
sys_dept deptdo0_ where deptdo0_.dept_id=6 

2019-04-15 20:57:12 -select deptdo0_.dept_id as dept_id1_6_0_, deptdo0_.del_flag as del_flag2_6_0_, deptdo0_.name 
as name3_6_0_, deptdo0_.order_num as order_nu4_6_0_, deptdo0_.parent_id as parent_i5_6_0_ from 
sys_dept deptdo0_ where deptdo0_.dept_id=6 
 {executed in 1 msec}
2019-04-15 20:57:12 -2. ResultSet.new ResultSet returned 
2019-04-15 20:57:12 -2. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@6b5eca82
2019-04-15 20:57:12 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@3d794b57 - Field level information: 
	com.mysql.jdbc.Field@19258eff[catalog=bootdo_jpa,tableName=deptdo0_,originalTableName=sys_dept,columnName=dept_id1_6_0_,originalColumnName=dept_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags= AUTO_INCREMENT PRIMARY_KEY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@14f437f4[catalog=bootdo_jpa,tableName=deptdo0_,originalTableName=sys_dept,columnName=del_flag2_6_0_,originalColumnName=del_flag,mysqlType=1(FIELD_TYPE_TINY),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@963e532[catalog=bootdo_jpa,tableName=deptdo0_,originalTableName=sys_dept,columnName=name3_6_0_,originalColumnName=name,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@7eb724ba[catalog=bootdo_jpa,tableName=deptdo0_,originalTableName=sys_dept,columnName=order_nu4_6_0_,originalColumnName=order_num,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@4bd00fe5[catalog=bootdo_jpa,tableName=deptdo0_,originalTableName=sys_dept,columnName=parent_i5_6_0_,originalColumnName=parent_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
2019-04-15 20:57:12 -2. ResultSet.next() returned true
2019-04-15 20:57:12 -2. ResultSet.getInt(del_flag2_6_0_) returned 1
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getString(name3_6_0_) returned 研发部
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getInt(order_nu4_6_0_) returned 1
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getLong(parent_i5_6_0_) returned 0
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.next() returned false
2019-04-15 20:57:12 -2. ResultSet.close() returned 
2019-04-15 20:57:12 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:57:12 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:57:12 -2. Connection.isClosed() returned false
2019-04-15 20:57:12 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:57:12 -2. Connection.commit() returned 
2019-04-15 20:57:12 -2. Connection.setAutoCommit(true) returned 
2019-04-15 20:57:12 -2. Connection.setReadOnly(true) returned 
2019-04-15 20:57:12 -2. Connection.getAutoCommit() returned true
2019-04-15 20:57:12 -2. Connection.setAutoCommit(false) returned 
2019-04-15 20:57:12 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:57:12 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:57:12 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:57:12 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:57:12 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:57:12 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:57:12 -2. PreparedStatement.setString(1, "hobby") returned 
2019-04-15 20:57:12 -2. Connection.getAutoCommit() returned false
2019-04-15 20:57:12 -2. Connection.getAutoCommit() returned false
2019-04-15 20:57:12 -select dictdo0_.id as id1_7_, dictdo0_.create_by as create_b2_7_, dictdo0_.create_date as create_d3_7_, 
dictdo0_.del_flag as del_flag4_7_, dictdo0_.description as descript5_7_, dictdo0_.name as name6_7_, 
dictdo0_.parent_id as parent_i7_7_, dictdo0_.remarks as remarks8_7_, dictdo0_.sort as sort9_7_, 
dictdo0_.type as type10_7_, dictdo0_.update_by as update_11_7_, dictdo0_.update_date as update_12_7_, 
dictdo0_.value as value13_7_ from sys_dict dictdo0_ where dictdo0_.type='hobby' 

2019-04-15 20:57:12 -select dictdo0_.id as id1_7_, dictdo0_.create_by as create_b2_7_, dictdo0_.create_date as create_d3_7_, 
dictdo0_.del_flag as del_flag4_7_, dictdo0_.description as descript5_7_, dictdo0_.name as name6_7_, 
dictdo0_.parent_id as parent_i7_7_, dictdo0_.remarks as remarks8_7_, dictdo0_.sort as sort9_7_, 
dictdo0_.type as type10_7_, dictdo0_.update_by as update_11_7_, dictdo0_.update_date as update_12_7_, 
dictdo0_.value as value13_7_ from sys_dict dictdo0_ where dictdo0_.type='hobby' 
 {executed in 0 msec}
2019-04-15 20:57:12 -2. ResultSet.new ResultSet returned 
2019-04-15 20:57:12 -2. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@6cb2c346
2019-04-15 20:57:12 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@136cf5a4 - Field level information: 
	com.mysql.jdbc.Field@d13806[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=id1_7_,originalColumnName=id,mysqlType=8(FIELD_TYPE_LONGLONG),flags= AUTO_INCREMENT PRIMARY_KEY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@7c0e47c8[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=create_b2_7_,originalColumnName=create_by,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@6dc03fc[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=create_d3_7_,originalColumnName=create_date,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@72690756[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=del_flag4_7_,originalColumnName=del_flag,mysqlType=254(FIELD_TYPE_STRING),flags= BINARY MULTI_KEY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@7b710015[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=descript5_7_,originalColumnName=description,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@75cf28b4[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=name6_7_,originalColumnName=name,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY MULTI_KEY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@136a0612[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=parent_i7_7_,originalColumnName=parent_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@2983e09e[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=remarks8_7_,originalColumnName=remarks,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@5a812c13[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=sort9_7_,originalColumnName=sort,mysqlType=246( Unknown MySQL Type # 246),flags=, charsetIndex=63, charsetName=ISO-8859-1]
	com.mysql.jdbc.Field@5607357f[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=type10_7_,originalColumnName=type,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@151ee33b[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=update_11_7_,originalColumnName=update_by,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@232f6616[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=update_12_7_,originalColumnName=update_date,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@701d37d4[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=value13_7_,originalColumnName=value,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY MULTI_KEY, charsetIndex=83, charsetName=utf8]
2019-04-15 20:57:12 -2. ResultSet.next() returned true
2019-04-15 20:57:12 -2. ResultSet.getLong(id1_7_) returned 121
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getInt(create_b2_7_) returned 0
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned true
2019-04-15 20:57:12 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:57:12 -2. ResultSet.getString(del_flag4_7_) returned 
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getString(descript5_7_) returned 爱好
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getString(name6_7_) returned 编码
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned true
2019-04-15 20:57:12 -2. ResultSet.getString(remarks8_7_) returned 
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getBigDecimal(sort9_7_) returned null
2019-04-15 20:57:12 -2. ResultSet.getString(type10_7_) returned hobby
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getLong(update_11_7_) returned 0
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned true
2019-04-15 20:57:12 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:57:12 -2. ResultSet.getString(value13_7_) returned code
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.next() returned true
2019-04-15 20:57:12 -2. ResultSet.getLong(id1_7_) returned 122
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getInt(create_b2_7_) returned 0
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned true
2019-04-15 20:57:12 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:57:12 -2. ResultSet.getString(del_flag4_7_) returned 
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getString(descript5_7_) returned 爱好
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getString(name6_7_) returned 绘画
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned true
2019-04-15 20:57:12 -2. ResultSet.getString(remarks8_7_) returned 
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getBigDecimal(sort9_7_) returned null
2019-04-15 20:57:12 -2. ResultSet.getString(type10_7_) returned hobby
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getLong(update_11_7_) returned 0
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned true
2019-04-15 20:57:12 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:57:12 -2. ResultSet.getString(value13_7_) returned painting
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.next() returned false
2019-04-15 20:57:12 -2. ResultSet.close() returned 
2019-04-15 20:57:12 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:57:12 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:57:12 -2. Connection.isClosed() returned false
2019-04-15 20:57:12 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:57:12 -2. Connection.commit() returned 
2019-04-15 20:57:12 -2. Connection.setAutoCommit(true) returned 
2019-04-15 20:57:12 -2. Connection.isReadOnly() returned true
2019-04-15 20:57:12 -2. Connection.setReadOnly(false) returned 
2019-04-15 20:57:12 -2. Connection.setReadOnly(true) returned 
2019-04-15 20:57:12 -2. Connection.getAutoCommit() returned true
2019-04-15 20:57:12 -2. Connection.setAutoCommit(false) returned 
2019-04-15 20:57:12 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:57:12 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:57:12 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:57:12 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:57:12 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:57:12 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:57:12 -2. PreparedStatement.setString(1, "sex") returned 
2019-04-15 20:57:12 -2. Connection.getAutoCommit() returned false
2019-04-15 20:57:12 -2. Connection.getAutoCommit() returned false
2019-04-15 20:57:12 -select dictdo0_.id as id1_7_, dictdo0_.create_by as create_b2_7_, dictdo0_.create_date as create_d3_7_, 
dictdo0_.del_flag as del_flag4_7_, dictdo0_.description as descript5_7_, dictdo0_.name as name6_7_, 
dictdo0_.parent_id as parent_i7_7_, dictdo0_.remarks as remarks8_7_, dictdo0_.sort as sort9_7_, 
dictdo0_.type as type10_7_, dictdo0_.update_by as update_11_7_, dictdo0_.update_date as update_12_7_, 
dictdo0_.value as value13_7_ from sys_dict dictdo0_ where dictdo0_.type='sex' 

2019-04-15 20:57:12 -select dictdo0_.id as id1_7_, dictdo0_.create_by as create_b2_7_, dictdo0_.create_date as create_d3_7_, 
dictdo0_.del_flag as del_flag4_7_, dictdo0_.description as descript5_7_, dictdo0_.name as name6_7_, 
dictdo0_.parent_id as parent_i7_7_, dictdo0_.remarks as remarks8_7_, dictdo0_.sort as sort9_7_, 
dictdo0_.type as type10_7_, dictdo0_.update_by as update_11_7_, dictdo0_.update_date as update_12_7_, 
dictdo0_.value as value13_7_ from sys_dict dictdo0_ where dictdo0_.type='sex' 
 {executed in 0 msec}
2019-04-15 20:57:12 -2. ResultSet.new ResultSet returned 
2019-04-15 20:57:12 -2. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@372465c5
2019-04-15 20:57:12 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@3fe2148d - Field level information: 
	com.mysql.jdbc.Field@596ed2d2[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=id1_7_,originalColumnName=id,mysqlType=8(FIELD_TYPE_LONGLONG),flags= AUTO_INCREMENT PRIMARY_KEY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@15bc0e11[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=create_b2_7_,originalColumnName=create_by,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@1224b2e[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=create_d3_7_,originalColumnName=create_date,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@2ecb61fb[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=del_flag4_7_,originalColumnName=del_flag,mysqlType=254(FIELD_TYPE_STRING),flags= BINARY MULTI_KEY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@19cdeb2[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=descript5_7_,originalColumnName=description,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@74a58416[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=name6_7_,originalColumnName=name,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY MULTI_KEY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@674dca97[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=parent_i7_7_,originalColumnName=parent_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@12fcab3c[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=remarks8_7_,originalColumnName=remarks,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@75f29e9f[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=sort9_7_,originalColumnName=sort,mysqlType=246( Unknown MySQL Type # 246),flags=, charsetIndex=63, charsetName=ISO-8859-1]
	com.mysql.jdbc.Field@2d2f3103[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=type10_7_,originalColumnName=type,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@24bf4f43[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=update_11_7_,originalColumnName=update_by,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@536da5a3[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=update_12_7_,originalColumnName=update_date,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@320acf37[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=value13_7_,originalColumnName=value,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY MULTI_KEY, charsetIndex=83, charsetName=utf8]
2019-04-15 20:57:12 -2. ResultSet.next() returned true
2019-04-15 20:57:12 -2. ResultSet.getLong(id1_7_) returned 96
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getInt(create_b2_7_) returned 1
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:57:12 -2. ResultSet.getString(del_flag4_7_) returned 0
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getString(descript5_7_) returned 性别
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getString(name6_7_) returned 男
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getString(remarks8_7_) returned null
2019-04-15 20:57:12 -2. ResultSet.getBigDecimal(sort9_7_) returned 10
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getString(type10_7_) returned sex
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getLong(update_11_7_) returned 1
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:57:12 -2. ResultSet.getString(value13_7_) returned 1
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.next() returned true
2019-04-15 20:57:12 -2. ResultSet.getLong(id1_7_) returned 97
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getInt(create_b2_7_) returned 1
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:57:12 -2. ResultSet.getString(del_flag4_7_) returned 0
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getString(descript5_7_) returned 性别
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getString(name6_7_) returned 女
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getString(remarks8_7_) returned null
2019-04-15 20:57:12 -2. ResultSet.getBigDecimal(sort9_7_) returned 20
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getString(type10_7_) returned sex
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getLong(update_11_7_) returned 1
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:57:12 -2. ResultSet.getString(value13_7_) returned 2
2019-04-15 20:57:12 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:12 -2. ResultSet.next() returned false
2019-04-15 20:57:12 -2. ResultSet.close() returned 
2019-04-15 20:57:12 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:57:12 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:57:12 -2. Connection.isClosed() returned false
2019-04-15 20:57:12 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:57:12 -2. Connection.commit() returned 
2019-04-15 20:57:12 -2. Connection.setAutoCommit(true) returned 
2019-04-15 20:57:12 -2. Connection.isReadOnly() returned true
2019-04-15 20:57:12 -2. Connection.setReadOnly(false) returned 
2019-04-15 20:57:12 -耗时 : 22
2019-04-15 20:57:12 -2. Connection.isClosed() returned false
2019-04-15 20:57:12 -2. Connection.clearWarnings() returned 
2019-04-15 20:57:12 -2. Connection.clearWarnings() returned 
2019-04-15 20:57:43 -2. Connection.isClosed() returned false
2019-04-15 20:57:43 -2. Connection.setReadOnly(true) returned 
2019-04-15 20:57:43 -2. Connection.getAutoCommit() returned true
2019-04-15 20:57:43 -2. Connection.setAutoCommit(false) returned 
2019-04-15 20:57:43 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:57:43 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:57:43 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:57:43 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:57:43 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:57:43 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:57:43 -2. PreparedStatement.setLong(1, 1) returned 
2019-04-15 20:57:43 -2. Connection.getAutoCommit() returned false
2019-04-15 20:57:43 -2. Connection.getAutoCommit() returned false
2019-04-15 20:57:43 -select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id 
left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = 1 

2019-04-15 20:57:43 -select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id 
left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = 1 
 {executed in 1 msec}
2019-04-15 20:57:43 -2. ResultSet.new ResultSet returned 
2019-04-15 20:57:43 -2. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@15060273
2019-04-15 20:57:43 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@64cfb129 - Field level information: 
	com.mysql.jdbc.Field@34bef3fc[catalog=bootdo_jpa,tableName=m,originalTableName=sys_menu,columnName=perms,originalColumnName=perms,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
2019-04-15 20:57:43 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@37ce69f2 - Field level information: 
	com.mysql.jdbc.Field@34bef3fc[catalog=bootdo_jpa,tableName=m,originalTableName=sys_menu,columnName=perms,originalColumnName=perms,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned 
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned act:process
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned activiti:model
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned sys:log:clear
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned sys:log:remove
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned sys:log:list
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned oa:notify:batchRemove
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned oa:notify:remove
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned oa:notify:edit
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned oa:notify:add
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned common:taskScheduleJob
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned common:generator
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned blog:bContent:add
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned blog:bContent:batchRemove
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned blog:bContent:remove
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned blog:bContent:edit
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned system:sysDept:edit
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned system:sysDept:remove
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned system:sysDept:add
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned sys:role:batchRemove
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned sys:role:remove
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned sys:role:edit
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned sys:role:add
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned sys:user:resetPwd
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned sys:user:disable
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned sys:user:batchRemove
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned sys:user:remove
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned sys:user:edit
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned sys:user:add
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned sys:menu:batchRemove
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned sys:menu:remove
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned sys:menu:edit
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned sys:menu:add
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned common:dict:batchRemove
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned common:dict:remove
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned common:dict:edit
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned common:dict:add
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned common:sysFile:sysFile
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned common:log
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned oa:notify:notify
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned blog:bContent:bContent
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned system:sysDept:sysDept
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned sys:role:role
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned sys:user:user
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned sys:menu:menu
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned null
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(perms) returned common:dict:dict
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned false
2019-04-15 20:57:43 -2. ResultSet.close() returned 
2019-04-15 20:57:43 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:57:43 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:57:43 -2. Connection.isClosed() returned false
2019-04-15 20:57:43 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:57:43 -2. Connection.commit() returned 
2019-04-15 20:57:43 -2. Connection.setAutoCommit(true) returned 
2019-04-15 20:57:43 -2. Connection.isReadOnly() returned true
2019-04-15 20:57:43 -2. Connection.setReadOnly(false) returned 
2019-04-15 20:57:43 -请求地址 : http://localhost:8080/common/dict
2019-04-15 20:57:43 -HTTP METHOD : GET
2019-04-15 20:57:43 -CLASS_METHOD : com.bootdo_jpa.common.controller.DictController.dict
2019-04-15 20:57:43 -参数 : []
2019-04-15 20:57:43 -耗时 : 0
2019-04-15 20:57:43 -2. Connection.isClosed() returned false
2019-04-15 20:57:43 -2. Connection.clearWarnings() returned 
2019-04-15 20:57:43 -2. Connection.clearWarnings() returned 
2019-04-15 20:57:43 -请求地址 : http://localhost:8080/common/dict/type
2019-04-15 20:57:43 -HTTP METHOD : GET
2019-04-15 20:57:43 -CLASS_METHOD : com.bootdo_jpa.common.controller.DictController.listType
2019-04-15 20:57:43 -参数 : []
2019-04-15 20:57:43 -2. Connection.isClosed() returned false
2019-04-15 20:57:43 -2. Connection.setReadOnly(true) returned 
2019-04-15 20:57:43 -2. Connection.getAutoCommit() returned true
2019-04-15 20:57:43 -2. Connection.setAutoCommit(false) returned 
2019-04-15 20:57:43 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:57:43 -2. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:57:43 -2. Connection.prepareStatement(select distinct dictdo0_.type as col_0_0_, dictdo0_.description as col_1_0_ from sys_dict dictdo0_) returned net.sf.log4jdbc.PreparedStatementSpy@703f1080
2019-04-15 20:57:43 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:57:43 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:57:43 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:57:43 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:57:43 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:57:43 -2. Connection.getAutoCommit() returned false
2019-04-15 20:57:43 -2. Connection.getAutoCommit() returned false
2019-04-15 20:57:43 -select distinct dictdo0_.type as col_0_0_, dictdo0_.description as col_1_0_ from sys_dict dictdo0_ 

2019-04-15 20:57:43 -select distinct dictdo0_.type as col_0_0_, dictdo0_.description as col_1_0_ from sys_dict dictdo0_ 
 {executed in 0 msec}
2019-04-15 20:57:43 -2. ResultSet.new ResultSet returned 
2019-04-15 20:57:43 -2. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@48c41a5b
2019-04-15 20:57:43 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@780e99b - Field level information: 
	com.mysql.jdbc.Field@f3352fb[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=col_0_0_,originalColumnName=type,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@323e7698[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=col_1_0_,originalColumnName=description,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(col_0_0_) returned del_flag
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(col_1_0_) returned 删除标记
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(col_0_0_) returned show_hide
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(col_1_0_) returned 显示/隐藏
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(col_0_0_) returned yes_no
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(col_1_0_) returned 是/否
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(col_0_0_) returned color
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(col_1_0_) returned 颜色值
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(col_0_0_) returned theme
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(col_1_0_) returned 主题方案
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(col_0_0_) returned sys_area_type
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(col_1_0_) returned 区域类型
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(col_0_0_) returned sys_office_type
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(col_1_0_) returned 机构类型
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(col_0_0_) returned sys_office_common
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(col_1_0_) returned 快捷通用部门
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(col_0_0_) returned sys_office_grade
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(col_1_0_) returned 机构等级
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(col_0_0_) returned sys_data_scope
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(col_1_0_) returned 数据范围
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(col_0_0_) returned sys_user_type
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(col_1_0_) returned 用户类型
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(col_0_0_) returned cms_theme
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(col_1_0_) returned 站点主题
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(col_0_0_) returned cms_module
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(col_1_0_) returned 栏目模型
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(col_0_0_) returned cms_show_modes
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(col_1_0_) returned 展现方式
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(col_0_0_) returned cms_del_flag
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(col_1_0_) returned 内容状态
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(col_0_0_) returned cms_posid
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(col_1_0_) returned 推荐位
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(col_0_0_) returned cms_guestbook
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(col_1_0_) returned 留言板分类
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(col_0_0_) returned oa_leave_type
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(col_1_0_) returned 请假类型
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(col_0_0_) returned sys_log_type
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(col_1_0_) returned 日志类型
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(col_0_0_) returned act_type
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(col_1_0_) returned 流程类型
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(col_0_0_) returned act_category
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(col_1_0_) returned 流程分类
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(col_0_0_) returned gen_category
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(col_1_0_) returned 代码生成分类
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(col_0_0_) returned gen_query_type
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(col_1_0_) returned 查询方式
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(col_0_0_) returned gen_show_type
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(col_1_0_) returned 字段生成方案
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(col_0_0_) returned gen_java_type
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(col_1_0_) returned Java类型
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(col_0_0_) returned sex
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(col_1_0_) returned 性别
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(col_0_0_) returned oa_notify_type
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(col_1_0_) returned 通知通告类型
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(col_0_0_) returned oa_notify_status
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(col_1_0_) returned 通知通告状态
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(col_0_0_) returned oa_notify_read
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(col_1_0_) returned 通知通告状态
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(col_0_0_) returned blog_type
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(col_1_0_) returned 博客类型
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(col_0_0_) returned hobby
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(col_1_0_) returned 爱好
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned false
2019-04-15 20:57:43 -2. ResultSet.close() returned 
2019-04-15 20:57:43 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:57:43 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:57:43 -2. Connection.isClosed() returned false
2019-04-15 20:57:43 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:57:43 -2. PreparedStatement.close() returned 
2019-04-15 20:57:43 -2. Connection.commit() returned 
2019-04-15 20:57:43 -2. Connection.setAutoCommit(true) returned 
2019-04-15 20:57:43 -2. Connection.isReadOnly() returned true
2019-04-15 20:57:43 -2. Connection.setReadOnly(false) returned 
2019-04-15 20:57:43 -耗时 : 6
2019-04-15 20:57:43 -2. Connection.isClosed() returned false
2019-04-15 20:57:43 -2. Connection.clearWarnings() returned 
2019-04-15 20:57:43 -2. Connection.clearWarnings() returned 
2019-04-15 20:57:43 -请求地址 : http://localhost:8080/common/dict/list
2019-04-15 20:57:43 -HTTP METHOD : GET
2019-04-15 20:57:43 -CLASS_METHOD : com.bootdo_jpa.common.controller.DictController.list
2019-04-15 20:57:43 -参数 : [{limit=10, offset=0}]
2019-04-15 20:57:43 -2. Connection.isClosed() returned false
2019-04-15 20:57:43 -2. Connection.setReadOnly(true) returned 
2019-04-15 20:57:43 -2. Connection.getAutoCommit() returned true
2019-04-15 20:57:43 -2. Connection.setAutoCommit(false) returned 
2019-04-15 20:57:43 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:57:43 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:57:43 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:57:43 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:57:43 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:57:43 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:57:43 -2. PreparedStatement.setBoolean(1, true) returned 
2019-04-15 20:57:43 -2. PreparedStatement.setInt(2, 10) returned 
2019-04-15 20:57:43 -2. Connection.getAutoCommit() returned false
2019-04-15 20:57:43 -2. Connection.getAutoCommit() returned false
2019-04-15 20:57:43 -select dictdo0_.id as id1_7_, dictdo0_.create_by as create_b2_7_, dictdo0_.create_date as create_d3_7_, 
dictdo0_.del_flag as del_flag4_7_, dictdo0_.description as descript5_7_, dictdo0_.name as name6_7_, 
dictdo0_.parent_id as parent_i7_7_, dictdo0_.remarks as remarks8_7_, dictdo0_.sort as sort9_7_, 
dictdo0_.type as type10_7_, dictdo0_.update_by as update_11_7_, dictdo0_.update_date as update_12_7_, 
dictdo0_.value as value13_7_ from sys_dict dictdo0_ where 1=1 order by dictdo0_.id desc limit 
10 

2019-04-15 20:57:43 -select dictdo0_.id as id1_7_, dictdo0_.create_by as create_b2_7_, dictdo0_.create_date as create_d3_7_, 
dictdo0_.del_flag as del_flag4_7_, dictdo0_.description as descript5_7_, dictdo0_.name as name6_7_, 
dictdo0_.parent_id as parent_i7_7_, dictdo0_.remarks as remarks8_7_, dictdo0_.sort as sort9_7_, 
dictdo0_.type as type10_7_, dictdo0_.update_by as update_11_7_, dictdo0_.update_date as update_12_7_, 
dictdo0_.value as value13_7_ from sys_dict dictdo0_ where 1=1 order by dictdo0_.id desc limit 
10 
 {executed in 1 msec}
2019-04-15 20:57:43 -2. ResultSet.new ResultSet returned 
2019-04-15 20:57:43 -2. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@d4d0e87
2019-04-15 20:57:43 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@1d9c9ce3 - Field level information: 
	com.mysql.jdbc.Field@e896467[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=id1_7_,originalColumnName=id,mysqlType=8(FIELD_TYPE_LONGLONG),flags= AUTO_INCREMENT PRIMARY_KEY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@7de8093b[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=create_b2_7_,originalColumnName=create_by,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@18341937[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=create_d3_7_,originalColumnName=create_date,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@61b6e556[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=del_flag4_7_,originalColumnName=del_flag,mysqlType=254(FIELD_TYPE_STRING),flags= BINARY MULTI_KEY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@24d90f5b[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=descript5_7_,originalColumnName=description,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@19c57b2a[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=name6_7_,originalColumnName=name,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY MULTI_KEY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@21803484[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=parent_i7_7_,originalColumnName=parent_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@774af9b7[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=remarks8_7_,originalColumnName=remarks,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@1b0583d2[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=sort9_7_,originalColumnName=sort,mysqlType=246( Unknown MySQL Type # 246),flags=, charsetIndex=63, charsetName=ISO-8859-1]
	com.mysql.jdbc.Field@29aba7b3[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=type10_7_,originalColumnName=type,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@9af9216[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=update_11_7_,originalColumnName=update_by,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@290855d5[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=update_12_7_,originalColumnName=update_date,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@1ea45835[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=value13_7_,originalColumnName=value,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY MULTI_KEY, charsetIndex=83, charsetName=utf8]
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getLong(id1_7_) returned 122
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getInt(create_b2_7_) returned 0
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned true
2019-04-15 20:57:43 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:57:43 -2. ResultSet.getString(del_flag4_7_) returned 
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(descript5_7_) returned 爱好
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(name6_7_) returned 绘画
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(remarks8_7_) returned 
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getBigDecimal(sort9_7_) returned null
2019-04-15 20:57:43 -2. ResultSet.getString(type10_7_) returned hobby
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getLong(update_11_7_) returned 0
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned true
2019-04-15 20:57:43 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:57:43 -2. ResultSet.getString(value13_7_) returned painting
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getLong(id1_7_) returned 121
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getInt(create_b2_7_) returned 0
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned true
2019-04-15 20:57:43 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:57:43 -2. ResultSet.getString(del_flag4_7_) returned 
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(descript5_7_) returned 爱好
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(name6_7_) returned 编码
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(remarks8_7_) returned 
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getBigDecimal(sort9_7_) returned null
2019-04-15 20:57:43 -2. ResultSet.getString(type10_7_) returned hobby
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getLong(update_11_7_) returned 0
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned true
2019-04-15 20:57:43 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:57:43 -2. ResultSet.getString(value13_7_) returned code
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getLong(id1_7_) returned 120
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getInt(create_b2_7_) returned 0
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned true
2019-04-15 20:57:43 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:57:43 -2. ResultSet.getString(del_flag4_7_) returned 
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(descript5_7_) returned 博客类型
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(name6_7_) returned 文章
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(remarks8_7_) returned 
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getBigDecimal(sort9_7_) returned null
2019-04-15 20:57:43 -2. ResultSet.getString(type10_7_) returned blog_type
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getLong(update_11_7_) returned 0
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned true
2019-04-15 20:57:43 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:57:43 -2. ResultSet.getString(value13_7_) returned article
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getLong(id1_7_) returned 119
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getInt(create_b2_7_) returned 0
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned true
2019-04-15 20:57:43 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:57:43 -2. ResultSet.getString(del_flag4_7_) returned 
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(descript5_7_) returned 博客类型
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(name6_7_) returned 交流
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(remarks8_7_) returned 
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getBigDecimal(sort9_7_) returned null
2019-04-15 20:57:43 -2. ResultSet.getString(type10_7_) returned blog_type
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getLong(update_11_7_) returned 0
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned true
2019-04-15 20:57:43 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:57:43 -2. ResultSet.getString(value13_7_) returned communication
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getLong(id1_7_) returned 118
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getInt(create_b2_7_) returned 0
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned true
2019-04-15 20:57:43 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:57:43 -2. ResultSet.getString(del_flag4_7_) returned 
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(descript5_7_) returned 博客类型
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(name6_7_) returned 关于
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(remarks8_7_) returned 全url是:/blog/open/page/about
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getBigDecimal(sort9_7_) returned null
2019-04-15 20:57:43 -2. ResultSet.getString(type10_7_) returned blog_type
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getLong(update_11_7_) returned 0
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned true
2019-04-15 20:57:43 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:57:43 -2. ResultSet.getString(value13_7_) returned about
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getLong(id1_7_) returned 113
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getInt(create_b2_7_) returned 0
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned true
2019-04-15 20:57:43 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:57:43 -2. ResultSet.getString(del_flag4_7_) returned 
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(descript5_7_) returned 删除标记
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(name6_7_) returned 删除
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned true
2019-04-15 20:57:43 -2. ResultSet.getString(remarks8_7_) returned 
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getBigDecimal(sort9_7_) returned null
2019-04-15 20:57:43 -2. ResultSet.getString(type10_7_) returned del_flag
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getLong(update_11_7_) returned 0
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned true
2019-04-15 20:57:43 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:57:43 -2. ResultSet.getString(value13_7_) returned 0
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getLong(id1_7_) returned 112
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getInt(create_b2_7_) returned 1
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:57:43 -2. ResultSet.getString(del_flag4_7_) returned 0
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(descript5_7_) returned 通知通告状态
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(name6_7_) returned 草稿
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(remarks8_7_) returned 
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getBigDecimal(sort9_7_) returned 10
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(type10_7_) returned oa_notify_status
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getLong(update_11_7_) returned 1
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:57:43 -2. ResultSet.getString(value13_7_) returned 0
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getLong(id1_7_) returned 111
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getInt(create_b2_7_) returned 1
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:57:43 -2. ResultSet.getString(del_flag4_7_) returned 0
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(descript5_7_) returned 通知通告状态
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(name6_7_) returned 已读
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(remarks8_7_) returned null
2019-04-15 20:57:43 -2. ResultSet.getBigDecimal(sort9_7_) returned 20
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(type10_7_) returned oa_notify_read
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getLong(update_11_7_) returned 1
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:57:43 -2. ResultSet.getString(value13_7_) returned 1
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getLong(id1_7_) returned 110
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getInt(create_b2_7_) returned 1
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:57:43 -2. ResultSet.getString(del_flag4_7_) returned 0
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(descript5_7_) returned 通知通告状态
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(name6_7_) returned 未读
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(remarks8_7_) returned null
2019-04-15 20:57:43 -2. ResultSet.getBigDecimal(sort9_7_) returned 10
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(type10_7_) returned oa_notify_read
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getLong(update_11_7_) returned 1
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:57:43 -2. ResultSet.getString(value13_7_) returned 0
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getLong(id1_7_) returned 109
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getInt(create_b2_7_) returned 1
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:57:43 -2. ResultSet.getString(del_flag4_7_) returned 0
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(descript5_7_) returned 通知通告状态
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(name6_7_) returned 发布
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(remarks8_7_) returned null
2019-04-15 20:57:43 -2. ResultSet.getBigDecimal(sort9_7_) returned 20
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getString(type10_7_) returned oa_notify_status
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getLong(update_11_7_) returned 1
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:57:43 -2. ResultSet.getString(value13_7_) returned 1
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.close() returned 
2019-04-15 20:57:43 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:57:43 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:57:43 -2. Connection.isClosed() returned false
2019-04-15 20:57:43 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:57:43 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:57:43 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:57:43 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:57:43 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:57:43 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:57:43 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:57:43 -2. PreparedStatement.setBoolean(1, true) returned 
2019-04-15 20:57:43 -2. Connection.getAutoCommit() returned false
2019-04-15 20:57:43 -select count(dictdo0_.id) as col_0_0_ from sys_dict dictdo0_ where 1=1 

2019-04-15 20:57:43 -select count(dictdo0_.id) as col_0_0_ from sys_dict dictdo0_ where 1=1 
 {executed in 1 msec}
2019-04-15 20:57:43 -2. ResultSet.new ResultSet returned 
2019-04-15 20:57:43 -2. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@1c6620e1
2019-04-15 20:57:43 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@6bdfbfb6 - Field level information: 
	com.mysql.jdbc.Field@25ecd03e[catalog=,tableName=,originalTableName=,columnName=col_0_0_,originalColumnName=,mysqlType=8(FIELD_TYPE_LONGLONG),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
2019-04-15 20:57:43 -2. ResultSet.next() returned true
2019-04-15 20:57:43 -2. ResultSet.getLong(col_0_0_) returned 114
2019-04-15 20:57:43 -2. ResultSet.wasNull() returned false
2019-04-15 20:57:43 -2. ResultSet.next() returned false
2019-04-15 20:57:43 -2. ResultSet.close() returned 
2019-04-15 20:57:43 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:57:43 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:57:43 -2. Connection.isClosed() returned false
2019-04-15 20:57:43 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:57:43 -2. Connection.commit() returned 
2019-04-15 20:57:43 -2. Connection.setAutoCommit(true) returned 
2019-04-15 20:57:43 -2. Connection.isReadOnly() returned true
2019-04-15 20:57:43 -2. Connection.setReadOnly(false) returned 
2019-04-15 20:57:43 -耗时 : 11
2019-04-15 20:57:43 -2. Connection.isClosed() returned false
2019-04-15 20:57:43 -2. Connection.clearWarnings() returned 
2019-04-15 20:57:43 -2. Connection.clearWarnings() returned 
2019-04-15 20:58:22 -Starting BootdoJpaApplication on B705_34 with PID 14396 (C:\Users\DZKD_B705\Desktop\bootdojpa\target\classes started by DZKD_B705 in C:\Users\DZKD_B705\Desktop\bootdojpa)
2019-04-15 20:58:22 -The following profiles are active: dev
2019-04-15 20:58:22 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@54bff557: startup date [Mon Apr 15 20:58:22 CST 2019]; root of context hierarchy
2019-04-15 20:58:22 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-15 20:58:23 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-15 20:58:23 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.activiti.dao.SalaryRepository.
2019-04-15 20:58:23 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.blog.dao.ContentRepository.
2019-04-15 20:58:23 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.ColumnsRepository.
2019-04-15 20:58:23 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.DictRepository.
2019-04-15 20:58:23 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.FileRepository.
2019-04-15 20:58:23 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.LogRepository.
2019-04-15 20:58:23 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.TablesRepository.
2019-04-15 20:58:23 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.common.dao.TaskRepository.
2019-04-15 20:58:23 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.oa.dao.NotifyRecordRepository.
2019-04-15 20:58:23 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.oa.dao.NotifyRepository.
2019-04-15 20:58:23 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.DeptRepository.
2019-04-15 20:58:23 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.MenuRepository.
2019-04-15 20:58:23 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.RoleMenuRepository.
2019-04-15 20:58:23 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.RoleRepository.
2019-04-15 20:58:23 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.UserRepository.
2019-04-15 20:58:23 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.bootdo_jpa.system.dao.UserRoleRepository.
2019-04-15 20:58:23 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$335b598f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:58:23 -Bean 'shiroConfig' of type [com.bootdo_jpa.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$7366cad2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:58:23 -Bean 'userRealm' of type [com.bootdo_jpa.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:58:23 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/C:/Users/DZKD_B705/.m2/repository/net/sf/ehcache/ehcache/2.10.5/ehcache-2.10.5.jar!/ehcache-failsafe.xml
2019-04-15 20:58:24 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:58:24 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:58:24 -Cache with name 'com.bootdo_jpa.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-15 20:58:24 -Added EhCache named [com.bootdo_jpa.system.shiro.UserRealm.authorizationCache]
2019-04-15 20:58:24 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:58:24 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:58:24 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:58:24 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-15 20:58:24 -Tomcat initialized with port(s): 8080 (http)
2019-04-15 20:58:24 -Initializing ProtocolHandler ["http-nio-8080"]
2019-04-15 20:58:24 -Starting service [Tomcat]
2019-04-15 20:58:24 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-15 20:58:24 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\java\jdk\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\python\Scripts\;D:\python\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;D:\java\jdk\bin;D:\java\jdk\jre\bin;C:\Program Files\Microsoft SQL Server\110\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\IDE\PrivateAssemblies\;C:\Program Files (x86)\Microsoft SQL Server\110\DTS\Binn\;C:\strawberry\c\bin;C:\strawberry\perl\bin;D:\mysql\bin;E:\Anaconda3;E:\Anaconda3\Library\mingw-w64\bin;E:\Anaconda3\Library\usr\bin;E:\Anaconda3\Library\bin;E:\Anaconda3\Scripts;C:\Users\DZKD_B705\AppData\Local\Microsoft\WindowsApps;D:\IDEA\bin;;D:\PyCharm\bin;;.]
2019-04-15 20:58:24 -Initializing Spring embedded WebApplicationContext
2019-04-15 20:58:24 -Root WebApplicationContext: initialization completed in 2266 ms
2019-04-15 20:58:24 -Servlet statViewServlet mapped to [/druid/*]
2019-04-15 20:58:24 -Servlet dispatcherServlet mapped to [/]
2019-04-15 20:58:24 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-15 20:58:24 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-15 20:58:24 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-15 20:58:24 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-15 20:58:24 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-15 20:58:24 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-15 20:58:25 -1. Connection opened
2019-04-15 20:58:25 -1. Connection.new Connection returned 
2019-04-15 20:58:25 -1. Connection.getAutoCommit() returned true
2019-04-15 20:58:25 -1. Connection.isClosed() returned false
2019-04-15 20:58:25 -1. Statement.new Statement returned 
2019-04-15 20:58:25 -1. Connection.createStatement() returned net.sf.log4jdbc.StatementSpy@33eb6758
2019-04-15 20:58:25 -1. Connection.getAutoCommit() returned true
2019-04-15 20:58:25 -select 'x' 

2019-04-15 20:58:25 -select 'x' 
 {executed in 0 msec}
2019-04-15 20:58:25 -1. ResultSet.new ResultSet returned 
2019-04-15 20:58:25 -1. Statement.executeQuery(select 'x') returned net.sf.log4jdbc.ResultSetSpy@62c72501
2019-04-15 20:58:25 -1. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@6bedd4e4 - Field level information: 
	com.mysql.jdbc.Field@4570d7b6[catalog=,tableName=,originalTableName=,columnName=x,originalColumnName=,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
2019-04-15 20:58:25 -1. ResultSet.next() returned true
2019-04-15 20:58:25 -1. ResultSet.close() returned 
2019-04-15 20:58:25 -1. Statement.close() returned 
2019-04-15 20:58:25 -1. Connection.getAutoCommit() returned true
2019-04-15 20:58:25 -1. Connection.getHoldability() returned 2
2019-04-15 20:58:25 -1. Connection.isReadOnly() returned false
2019-04-15 20:58:25 -1. Connection.getTransactionIsolation() returned 4
2019-04-15 20:58:25 -{dataSource-1} inited
2019-04-15 20:58:25 -1. Connection.isClosed() returned false
2019-04-15 20:58:25 -1. Connection.getMetaData() returned com.mysql.jdbc.JDBC4DatabaseMetaData@750a04ec
2019-04-15 20:58:25 -1. Connection.clearWarnings() returned 
2019-04-15 20:58:25 -Building JPA container EntityManagerFactory for persistence unit 'default'
2019-04-15 20:58:25 -HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2019-04-15 20:58:25 -HHH000412: Hibernate Core {5.2.17.Final}
2019-04-15 20:58:25 -HHH000206: hibernate.properties not found
2019-04-15 20:58:25 -HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2019-04-15 20:58:25 -1. Connection.isClosed() returned false
2019-04-15 20:58:25 -1. Connection.getMetaData() returned com.mysql.jdbc.JDBC4DatabaseMetaData@65c17e38
2019-04-15 20:58:25 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2019-04-15 20:58:25 -1. Connection.clearWarnings() returned 
2019-04-15 20:58:26 -1. Connection.isClosed() returned false
2019-04-15 20:58:26 -1. Connection.getAutoCommit() returned true
2019-04-15 20:58:26 -1. Connection.getMetaData() returned com.mysql.jdbc.JDBC4DatabaseMetaData@64dfb31d
2019-04-15 20:58:26 -1. Connection.clearWarnings() returned 
2019-04-15 20:58:26 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2019-04-15 20:58:27 -1. Connection.isClosed() returned false
2019-04-15 20:58:27 -1. Connection.getMetaData() returned com.mysql.jdbc.JDBC4DatabaseMetaData@5cf2f5d6
2019-04-15 20:58:27 -1. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:58:27 -1. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:58:27 -1. Connection.prepareStatement(select * from ACT_GE_PROPERTY where NAME_ = ?) returned net.sf.log4jdbc.PreparedStatementSpy@15371de2
2019-04-15 20:58:27 -1. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:58:27 -1. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:58:27 -1. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:58:27 -1. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:58:27 -1. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:58:27 -1. PreparedStatement.setString(1, "schema.version") returned 
2019-04-15 20:58:27 -1. Connection.getAutoCommit() returned true
2019-04-15 20:58:27 -1. Connection.getAutoCommit() returned true
2019-04-15 20:58:27 -select * from ACT_GE_PROPERTY where NAME_ = 'schema.version' 

2019-04-15 20:58:27 -select * from ACT_GE_PROPERTY where NAME_ = 'schema.version' 
 {executed in 1 msec}
2019-04-15 20:58:27 -1. PreparedStatement.execute() returned true
2019-04-15 20:58:27 -1. PreparedStatement.getUpdateCount() returned -1
2019-04-15 20:58:27 -1. ResultSet.new ResultSet returned 
2019-04-15 20:58:27 -1. PreparedStatement.getResultSet() returned net.sf.log4jdbc.ResultSetSpy@5b0e9e0c
2019-04-15 20:58:27 -1. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@54234569 - Field level information: 
	com.mysql.jdbc.Field@21ea1d9d[catalog=bootdo_jpa,tableName=ACT_GE_PROPERTY,originalTableName=act_ge_property,columnName=NAME_,originalColumnName=NAME_,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= PRIMARY_KEY BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@19f497aa[catalog=bootdo_jpa,tableName=ACT_GE_PROPERTY,originalTableName=act_ge_property,columnName=VALUE_,originalColumnName=VALUE_,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@36a58466[catalog=bootdo_jpa,tableName=ACT_GE_PROPERTY,originalTableName=act_ge_property,columnName=REV_,originalColumnName=REV_,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
2019-04-15 20:58:27 -1. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@4a453f8d - Field level information: 
	com.mysql.jdbc.Field@21ea1d9d[catalog=bootdo_jpa,tableName=ACT_GE_PROPERTY,originalTableName=act_ge_property,columnName=NAME_,originalColumnName=NAME_,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= PRIMARY_KEY BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@19f497aa[catalog=bootdo_jpa,tableName=ACT_GE_PROPERTY,originalTableName=act_ge_property,columnName=VALUE_,originalColumnName=VALUE_,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@36a58466[catalog=bootdo_jpa,tableName=ACT_GE_PROPERTY,originalTableName=act_ge_property,columnName=REV_,originalColumnName=REV_,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
2019-04-15 20:58:27 -1. ResultSet.getType() returned 1003
2019-04-15 20:58:27 -1. ResultSet.next() returned true
2019-04-15 20:58:27 -1. ResultSet.getString(NAME_) returned schema.version
2019-04-15 20:58:27 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:27 -1. ResultSet.getString(VALUE_) returned 5.22.0.0
2019-04-15 20:58:27 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:27 -1. ResultSet.getInt(REV_) returned 1
2019-04-15 20:58:27 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:27 -1. ResultSet.next() returned false
2019-04-15 20:58:27 -1. ResultSet.close() returned 
2019-04-15 20:58:27 -1. Connection.getMetaData() returned com.mysql.jdbc.JDBC4DatabaseMetaData@241d1052
2019-04-15 20:58:27 -1. PreparedStatement.getMoreResults() returned false
2019-04-15 20:58:27 -1. PreparedStatement.getUpdateCount() returned -1
2019-04-15 20:58:27 -1. Connection.isClosed() returned false
2019-04-15 20:58:27 -1. PreparedStatement.clearParameters() returned 
2019-04-15 20:58:27 -1. Connection.getMetaData() returned com.mysql.jdbc.JDBC4DatabaseMetaData@3006bfb
2019-04-15 20:58:27 -1. Connection.getMetaData() returned com.mysql.jdbc.JDBC4DatabaseMetaData@5402612e
2019-04-15 20:58:27 -1. Connection.clearWarnings() returned 
2019-04-15 20:58:27 -ProcessEngine default created
2019-04-15 20:58:28 -HHH000397: Using ASTQueryTranslatorFactory
2019-04-15 20:58:28 -1. Connection.isClosed() returned false
2019-04-15 20:58:28 -1. Connection.getMetaData() returned com.mysql.jdbc.JDBC4DatabaseMetaData@1ead3c67
2019-04-15 20:58:28 -1. Connection.clearWarnings() returned 
2019-04-15 20:58:28 -Using default implementation for ThreadExecutor
2019-04-15 20:58:28 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-15 20:58:28 -Quartz Scheduler v.2.3.0 created.
2019-04-15 20:58:28 -RAMJobStore initialized.
2019-04-15 20:58:28 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-15 20:58:28 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-15 20:58:28 -Quartz scheduler version: 2.3.0
2019-04-15 20:58:28 -JobFactory set to: com.bootdo_jpa.common.quartz.factory.JobFactory@3636f2a7
2019-04-15 20:58:28 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-15 20:58:28 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-15 20:58:29 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-15 20:58:29 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-15 20:58:29 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-15 20:58:29 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-15 20:58:29 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@54bff557: startup date [Mon Apr 15 20:58:22 CST 2019]; root of context hierarchy
2019-04-15 20:58:29 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2019-04-15 20:58:30 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.activiti.controller.ModelController.remove(java.lang.String)
2019-04-15 20:58:30 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.activiti.controller.ModelController.list(int,int)
2019-04-15 20:58:30 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.activiti.controller.ModelController.batchRemove(java.lang.String[])
2019-04-15 20:58:30 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo_jpa.activiti.controller.ModelController.model()
2019-04-15 20:58:30 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo_jpa.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2019-04-15 20:58:30 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo_jpa.activiti.controller.ModelController.getEditorJson(java.lang.String)
2019-04-15 20:58:30 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2019-04-15 20:58:30 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo_jpa.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-04-15 20:58:30 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo_jpa.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-04-15 20:58:30 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo_jpa.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-15 20:58:30 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo_jpa.activiti.controller.ModelController.getStencilset()
2019-04-15 20:58:30 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo_jpa.activiti.controller.ProcessController.add()
2019-04-15 20:58:30 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.activiti.controller.ProcessController.remove(java.lang.String)
2019-04-15 20:58:30 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.activiti.controller.ProcessController.list(int,int)
2019-04-15 20:58:30 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2019-04-15 20:58:30 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo_jpa.activiti.controller.ProcessController.process()
2019-04-15 20:58:30 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2019-04-15 20:58:30 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2019-04-15 20:58:30 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo_jpa.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-15 20:58:30 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo_jpa.activiti.controller.SalaryController.add()
2019-04-15 20:58:30 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.activiti.controller.SalaryController.remove(java.lang.Long)
2019-04-15 20:58:30 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.activiti.controller.SalaryController.remove(java.lang.Long[])
2019-04-15 20:58:30 -Mapped "{[/act/salary/update]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.activiti.controller.SalaryController.update(com.bootdo_jpa.activiti.domain.SalaryDO)
2019-04-15 20:58:30 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:58:30 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2019-04-15 20:58:30 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo_jpa.activiti.controller.SalaryController.Salary()
2019-04-15 20:58:30 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.activiti.controller.SalaryController.saveOrUpdate(com.bootdo_jpa.activiti.domain.SalaryDO)
2019-04-15 20:58:30 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo_jpa.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-04-15 20:58:30 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.activiti.controller.TaskController.list(int,int)
2019-04-15 20:58:30 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo_jpa.activiti.controller.TaskController.gotoTask()
2019-04-15 20:58:30 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo_jpa.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-04-15 20:58:30 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo_jpa.activiti.vo.TaskVO> com.bootdo_jpa.activiti.controller.TaskController.todoList()
2019-04-15 20:58:30 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo_jpa.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-15 20:58:30 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo_jpa.activiti.controller.TaskController.todo()
2019-04-15 20:58:30 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2019-04-15 20:58:30 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2019-04-15 20:58:30 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.blog.controller.BlogController.openList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:58:30 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo_jpa.blog.controller.BlogController.blog()
2019-04-15 20:58:30 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo_jpa.blog.controller.ContentController.add()
2019-04-15 20:58:30 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.blog.controller.ContentController.remove(java.lang.Long)
2019-04-15 20:58:30 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.blog.controller.ContentController.remove(java.lang.Long[])
2019-04-15 20:58:30 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.blog.controller.ContentController.update(com.bootdo_jpa.blog.domain.ContentDO)
2019-04-15 20:58:30 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:58:30 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.blog.controller.ContentController.save(com.bootdo_jpa.blog.domain.ContentDO)
2019-04-15 20:58:30 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-15 20:58:30 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo_jpa.blog.controller.ContentController.bContent()
2019-04-15 20:58:30 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.DictController.add()
2019-04-15 20:58:30 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.DictController.remove(java.lang.Long)
2019-04-15 20:58:30 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.DictController.remove(java.lang.Long[])
2019-04-15 20:58:30 -Mapped "{[/common/dict/update]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.DictController.update(com.bootdo_jpa.common.domain.DictDO)
2019-04-15 20:58:30 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:58:30 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.DictController.save(com.bootdo_jpa.common.domain.DictDO)
2019-04-15 20:58:30 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo_jpa.common.domain.DictDO> com.bootdo_jpa.common.controller.DictController.listType()
2019-04-15 20:58:30 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-15 20:58:30 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.DictController.dict()
2019-04-15 20:58:30 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-15 20:58:30 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo_jpa.common.domain.DictDO> com.bootdo_jpa.common.controller.DictController.listByType(java.lang.String)
2019-04-15 20:58:30 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.FileController.add()
2019-04-15 20:58:30 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-15 20:58:30 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.FileController.remove(java.lang.Long[])
2019-04-15 20:58:30 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.FileController.update(com.bootdo_jpa.common.domain.FileDO)
2019-04-15 20:58:30 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:58:30 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.FileController.save(com.bootdo_jpa.common.domain.FileDO)
2019-04-15 20:58:30 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.FileController.info(java.lang.Long)
2019-04-15 20:58:30 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-15 20:58:30 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-15 20:58:30 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-15 20:58:30 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:58:30 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<com.bootdo_jpa.common.domain.TablesDO> com.bootdo_jpa.common.controller.GeneratorController.list()
2019-04-15 20:58:30 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo_jpa.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-15 20:58:30 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.GeneratorController.generator()
2019-04-15 20:58:30 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo_jpa.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-15 20:58:30 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo_jpa.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-15 20:58:30 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.JobController.add()
2019-04-15 20:58:30 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.JobController.remove(java.lang.Long)
2019-04-15 20:58:30 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.JobController.remove(java.lang.Long[])
2019-04-15 20:58:30 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.JobController.update(com.bootdo_jpa.common.domain.TaskDO)
2019-04-15 20:58:30 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:58:30 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.JobController.save(com.bootdo_jpa.common.domain.TaskDO)
2019-04-15 20:58:30 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.JobController.info(java.lang.Long)
2019-04-15 20:58:30 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-15 20:58:30 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-15 20:58:30 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.JobController.taskScheduleJob()
2019-04-15 20:58:30 -Mapped "{[/common/log/remove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.LogController.remove(java.lang.Long)
2019-04-15 20:58:30 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo_jpa.common.controller.LogController.log()
2019-04-15 20:58:30 -Mapped "{[/common/log/list],methods=[GET]}" onto public com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:58:30 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-15 20:58:30 -Mapped "{[/error]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-15 20:58:30 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo_jpa.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-15 20:58:30 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo_jpa.oa.controller.NotifyController.add()
2019-04-15 20:58:30 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-15 20:58:30 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-15 20:58:30 -Mapped "{[/oa/notify/update]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.oa.controller.NotifyController.update(com.bootdo_jpa.oa.domain.NotifyDO)
2019-04-15 20:58:30 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-15 20:58:30 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:58:30 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.oa.controller.NotifyController.save(com.bootdo_jpa.oa.domain.NotifyDO)
2019-04-15 20:58:30 -Mapped "{[/oa/notify/message],methods=[GET]}" onto public com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.oa.controller.NotifyController.message()
2019-04-15 20:58:30 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-15 20:58:30 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo_jpa.oa.controller.NotifyController.selefNotify()
2019-04-15 20:58:30 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo_jpa.oa.controller.NotifyController.oaNotify()
2019-04-15 20:58:30 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto public com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:58:30 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-15 20:58:30 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.DeptController.remove(java.lang.Long)
2019-04-15 20:58:30 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.DeptController.remove(java.lang.Long[])
2019-04-15 20:58:30 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.DeptController.update(com.bootdo_jpa.system.domain.DeptDO)
2019-04-15 20:58:30 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo_jpa.system.domain.DeptDO> com.bootdo_jpa.system.controller.DeptController.list()
2019-04-15 20:58:30 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.DeptController.save(com.bootdo_jpa.system.domain.DeptDO)
2019-04-15 20:58:30 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo_jpa.common.domain.Tree<com.bootdo_jpa.system.domain.DeptDO> com.bootdo_jpa.system.controller.DeptController.tree()
2019-04-15 20:58:30 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-15 20:58:30 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.DeptController.treeView()
2019-04-15 20:58:30 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.DeptController.dept()
2019-04-15 20:58:30 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-15 20:58:30 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.LoginController.main()
2019-04-15 20:58:30 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-15 20:58:30 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo_jpa.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-15 20:58:30 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-15 20:58:30 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.LoginController.logout()
2019-04-15 20:58:30 -Mapped "{[/login],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-15 20:58:30 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto public java.lang.String com.bootdo_jpa.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-15 20:58:30 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.MenuController.remove(java.lang.Long)
2019-04-15 20:58:30 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.MenuController.update(com.bootdo_jpa.system.domain.MenuDO)
2019-04-15 20:58:30 -Mapped "{[/sys/menu/list]}" onto public java.util.List<com.bootdo_jpa.system.domain.MenuDO> com.bootdo_jpa.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:58:30 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.MenuController.save(com.bootdo_jpa.system.domain.MenuDO)
2019-04-15 20:58:30 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo_jpa.common.domain.Tree<com.bootdo_jpa.system.domain.MenuDO> com.bootdo_jpa.system.controller.MenuController.tree(java.lang.Long)
2019-04-15 20:58:30 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo_jpa.common.domain.Tree<com.bootdo_jpa.system.domain.MenuDO> com.bootdo_jpa.system.controller.MenuController.tree()
2019-04-15 20:58:30 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto public java.lang.String com.bootdo_jpa.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-15 20:58:30 -Mapped "{[/sys/menu],methods=[GET]}" onto public java.lang.String com.bootdo_jpa.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-15 20:58:30 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.RoleController.add()
2019-04-15 20:58:30 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.RoleController.update(com.bootdo_jpa.system.domain.RoleDO)
2019-04-15 20:58:30 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo_jpa.system.domain.RoleDO> com.bootdo_jpa.system.controller.RoleController.list()
2019-04-15 20:58:30 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.RoleController.save(java.lang.Long)
2019-04-15 20:58:30 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.RoleController.save(com.bootdo_jpa.system.domain.RoleDO)
2019-04-15 20:58:30 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-15 20:58:30 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.RoleController.role()
2019-04-15 20:58:30 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-15 20:58:30 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo_jpa.system.domain.UserOnline> com.bootdo_jpa.system.controller.SessionController.list()
2019-04-15 20:58:30 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-15 20:58:30 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo_jpa.system.controller.SessionController.online()
2019-04-15 20:58:30 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo_jpa.system.controller.SessionController.sessionList()
2019-04-15 20:58:30 -Mapped "{[/sys/user/exit],methods=[POST]}" onto public boolean com.bootdo_jpa.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:58:30 -Mapped "{[/sys/user/add],methods=[GET]}" onto public java.lang.String com.bootdo_jpa.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-15 20:58:30 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.UserController.remove(java.lang.Long)
2019-04-15 20:58:30 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.UserController.update(com.bootdo_jpa.system.domain.UserDO)
2019-04-15 20:58:30 -Mapped "{[/sys/user/list],methods=[GET]}" onto public com.bootdo_jpa.common.utils.PageUtils com.bootdo_jpa.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-15 20:58:30 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.UserController.save(com.bootdo_jpa.system.domain.UserDO)
2019-04-15 20:58:30 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-15 20:58:30 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo_jpa.common.domain.Tree<com.bootdo_jpa.system.domain.DeptDO> com.bootdo_jpa.system.controller.UserController.tree()
2019-04-15 20:58:30 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-15 20:58:30 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-15 20:58:30 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.UserController.treeView()
2019-04-15 20:58:30 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-15 20:58:30 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-15 20:58:30 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.UserController.adminResetPwd(com.bootdo_jpa.system.vo.UserVO)
2019-04-15 20:58:30 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.UserController.updatePeronal(com.bootdo_jpa.system.domain.UserDO)
2019-04-15 20:58:30 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo_jpa.common.utils.R com.bootdo_jpa.system.controller.UserController.resetPwd(com.bootdo_jpa.system.vo.UserVO)
2019-04-15 20:58:30 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo_jpa.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-15 20:58:30 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-15 20:58:30 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-15 20:58:30 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-15 20:58:30 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-15 20:58:30 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-15 20:58:30 -Registering beans for JMX exposure on startup
2019-04-15 20:58:30 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-15 20:58:30 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-15 20:58:30 -Starting beans in phase 2147483647
2019-04-15 20:58:30 -Starting Quartz Scheduler now
2019-04-15 20:58:30 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-15 20:58:30 -Starting...
2019-04-15 20:58:30 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-15 20:58:30 -Started.
2019-04-15 20:58:30 -Starting ProtocolHandler ["http-nio-8080"]
2019-04-15 20:58:30 -Using a shared selector for servlet write/read
2019-04-15 20:58:30 -Tomcat started on port(s): 8080 (http) with context path ''
2019-04-15 20:58:30 -Started BootdoJpaApplication in 9.185 seconds (JVM running for 9.914)
2019-04-15 20:58:30 -1. Connection.isClosed() returned false
2019-04-15 20:58:30 -1. Connection.getAutoCommit() returned true
2019-04-15 20:58:30 -1. Connection.setAutoCommit(false) returned 
2019-04-15 20:58:30 -1. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:58:30 -1. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:58:30 -1. Connection.prepareStatement(select taskdo0_.id as id1_13_, taskdo0_.bean_class as bean_cla2_13_, taskdo0_.create_by as create_b3_13_, taskdo0_.create_date as create_d4_13_, taskdo0_.cron_expression as cron_exp5_13_, taskdo0_.description as descript6_13_, taskdo0_.is_concurrent as is_concu7_13_, taskdo0_.job_group as job_grou8_13_, taskdo0_.job_name as job_name9_13_, taskdo0_.job_status as job_sta10_13_, taskdo0_.method_name as method_11_13_, taskdo0_.spring_bean as spring_12_13_, taskdo0_.update_by as update_13_13_, taskdo0_.update_date as update_14_13_ from sys_task taskdo0_) returned net.sf.log4jdbc.PreparedStatementSpy@72998021
2019-04-15 20:58:30 -1. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:58:30 -1. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:58:30 -1. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:58:30 -1. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:58:30 -1. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:58:30 -1. Connection.getAutoCommit() returned false
2019-04-15 20:58:30 -1. Connection.getAutoCommit() returned false
2019-04-15 20:58:30 -select taskdo0_.id as id1_13_, taskdo0_.bean_class as bean_cla2_13_, taskdo0_.create_by as 
create_b3_13_, taskdo0_.create_date as create_d4_13_, taskdo0_.cron_expression as cron_exp5_13_, 
taskdo0_.description as descript6_13_, taskdo0_.is_concurrent as is_concu7_13_, taskdo0_.job_group 
as job_grou8_13_, taskdo0_.job_name as job_name9_13_, taskdo0_.job_status as job_sta10_13_, 
taskdo0_.method_name as method_11_13_, taskdo0_.spring_bean as spring_12_13_, taskdo0_.update_by 
as update_13_13_, taskdo0_.update_date as update_14_13_ from sys_task taskdo0_ 

2019-04-15 20:58:30 -select taskdo0_.id as id1_13_, taskdo0_.bean_class as bean_cla2_13_, taskdo0_.create_by as 
create_b3_13_, taskdo0_.create_date as create_d4_13_, taskdo0_.cron_expression as cron_exp5_13_, 
taskdo0_.description as descript6_13_, taskdo0_.is_concurrent as is_concu7_13_, taskdo0_.job_group 
as job_grou8_13_, taskdo0_.job_name as job_name9_13_, taskdo0_.job_status as job_sta10_13_, 
taskdo0_.method_name as method_11_13_, taskdo0_.spring_bean as spring_12_13_, taskdo0_.update_by 
as update_13_13_, taskdo0_.update_date as update_14_13_ from sys_task taskdo0_ 
 {executed in 0 msec}
2019-04-15 20:58:30 -1. ResultSet.new ResultSet returned 
2019-04-15 20:58:30 -1. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@4d22265c
2019-04-15 20:58:30 -1. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@1f7b8d59 - Field level information: 
	com.mysql.jdbc.Field@28551755[catalog=bootdo_jpa,tableName=taskdo0_,originalTableName=sys_task,columnName=id1_13_,originalColumnName=id,mysqlType=8(FIELD_TYPE_LONGLONG),flags= AUTO_INCREMENT PRIMARY_KEY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@7ec68821[catalog=bootdo_jpa,tableName=taskdo0_,originalTableName=sys_task,columnName=bean_cla2_13_,originalColumnName=bean_class,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@220a5163[catalog=bootdo_jpa,tableName=taskdo0_,originalTableName=sys_task,columnName=create_b3_13_,originalColumnName=create_by,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@6158113e[catalog=bootdo_jpa,tableName=taskdo0_,originalTableName=sys_task,columnName=create_d4_13_,originalColumnName=create_date,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@61375dff[catalog=bootdo_jpa,tableName=taskdo0_,originalTableName=sys_task,columnName=cron_exp5_13_,originalColumnName=cron_expression,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@2bfa5678[catalog=bootdo_jpa,tableName=taskdo0_,originalTableName=sys_task,columnName=descript6_13_,originalColumnName=description,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@5b8b9b2d[catalog=bootdo_jpa,tableName=taskdo0_,originalTableName=sys_task,columnName=is_concu7_13_,originalColumnName=is_concurrent,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@7a7bb083[catalog=bootdo_jpa,tableName=taskdo0_,originalTableName=sys_task,columnName=job_grou8_13_,originalColumnName=job_group,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@2178d296[catalog=bootdo_jpa,tableName=taskdo0_,originalTableName=sys_task,columnName=job_name9_13_,originalColumnName=job_name,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@58c80957[catalog=bootdo_jpa,tableName=taskdo0_,originalTableName=sys_task,columnName=job_sta10_13_,originalColumnName=job_status,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@5f1db390[catalog=bootdo_jpa,tableName=taskdo0_,originalTableName=sys_task,columnName=method_11_13_,originalColumnName=method_name,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@78c5ef58[catalog=bootdo_jpa,tableName=taskdo0_,originalTableName=sys_task,columnName=spring_12_13_,originalColumnName=spring_bean,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@1fce6eb4[catalog=bootdo_jpa,tableName=taskdo0_,originalTableName=sys_task,columnName=update_13_13_,originalColumnName=update_by,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@7d44eab[catalog=bootdo_jpa,tableName=taskdo0_,originalTableName=sys_task,columnName=update_14_13_,originalColumnName=update_date,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
2019-04-15 20:58:30 -1. ResultSet.next() returned true
2019-04-15 20:58:30 -1. ResultSet.getLong(id1_13_) returned 2
2019-04-15 20:58:30 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:30 -1. ResultSet.getString(bean_cla2_13_) returned com.bootdo-jpa.common.task.WelcomeJob
2019-04-15 20:58:30 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:30 -1. ResultSet.getString(create_b3_13_) returned null
2019-04-15 20:58:30 -1. ResultSet.getTimestamp(create_d4_13_) returned 2017-05-19 18:30:56.0
2019-04-15 20:58:30 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:30 -1. ResultSet.getString(cron_exp5_13_) returned 0/10 * * * * ?
2019-04-15 20:58:30 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:30 -1. ResultSet.getString(descript6_13_) returned 
2019-04-15 20:58:30 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:30 -1. ResultSet.getString(is_concu7_13_) returned 1
2019-04-15 20:58:30 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:30 -1. ResultSet.getString(job_grou8_13_) returned group1
2019-04-15 20:58:30 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:30 -1. ResultSet.getString(job_name9_13_) returned welcomJob
2019-04-15 20:58:30 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:30 -1. ResultSet.getString(job_sta10_13_) returned 0
2019-04-15 20:58:30 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:30 -1. ResultSet.getString(method_11_13_) returned run1
2019-04-15 20:58:30 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:30 -1. ResultSet.getString(spring_12_13_) returned 
2019-04-15 20:58:30 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:30 -1. ResultSet.getString(update_13_13_) returned 4028ea815a3d2a8c015a3d2f8d2a0002
2019-04-15 20:58:30 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:30 -1. ResultSet.getTimestamp(update_14_13_) returned 2017-05-19 18:31:07.0
2019-04-15 20:58:30 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:30 -1. ResultSet.next() returned false
2019-04-15 20:58:30 -1. ResultSet.close() returned 
2019-04-15 20:58:30 -1. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:58:30 -1. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:58:30 -1. Connection.isClosed() returned false
2019-04-15 20:58:30 -1. PreparedStatement.clearParameters() returned 
2019-04-15 20:58:30 -1. Connection.commit() returned 
2019-04-15 20:58:30 -1. Connection.setAutoCommit(true) returned 
2019-04-15 20:58:30 -1. Connection.isClosed() returned false
2019-04-15 20:58:30 -1. Connection.clearWarnings() returned 
2019-04-15 20:58:30 -1. Connection.clearWarnings() returned 
2019-04-15 20:58:34 -A cookie header was received [1555251430,1555253855,1555254110; Idea-4fde7523=9492d8e9-03e1-4672-9c34-0f8df203a415; JSESSIONID=bd452e8b-23e2-441a-9205-d5b8ebcd1d9a] that contained an invalid cookie. That cookie will be ignored.Note: further occurrences of this error will be logged at DEBUG level.
2019-04-15 20:58:34 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-15 20:58:34 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-15 20:58:34 -FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
2019-04-15 20:58:34 -Enabling session validation scheduler...
2019-04-15 20:58:34 -请求地址 : http://localhost:8080/login;JSESSIONID=d3be1474-409b-4e38-8d3f-c4eacd8e35c3
2019-04-15 20:58:34 -HTTP METHOD : GET
2019-04-15 20:58:34 -CLASS_METHOD : com.bootdo_jpa.system.controller.LoginController.login
2019-04-15 20:58:34 -参数 : [{}]
2019-04-15 20:58:34 -耗时 : 2
2019-04-15 20:58:35 -请求地址 : http://localhost:8080/getVerify
2019-04-15 20:58:35 -HTTP METHOD : GET
2019-04-15 20:58:35 -CLASS_METHOD : com.bootdo_jpa.system.controller.LoginController.getVerify
2019-04-15 20:58:35 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3be986c5, org.apache.shiro.web.servlet.ShiroHttpServletResponse@352e7fc8]
2019-04-15 20:58:35 -8288
2019-04-15 20:58:35 -耗时 : 215
2019-04-15 20:58:40 -请求地址 : http://localhost:8080/login
2019-04-15 20:58:40 -HTTP METHOD : POST
2019-04-15 20:58:40 -CLASS_METHOD : com.bootdo_jpa.system.controller.LoginController.ajaxLogin
2019-04-15 20:58:40 -参数 : [admin, 111111, 8288, org.apache.shiro.web.servlet.ShiroHttpServletRequest@544460ba]
2019-04-15 20:58:40 -1. Connection.isClosed() returned false
2019-04-15 20:58:40 -1. Connection.setReadOnly(true) returned 
2019-04-15 20:58:40 -1. Connection.getAutoCommit() returned true
2019-04-15 20:58:40 -1. Connection.setAutoCommit(false) returned 
2019-04-15 20:58:40 -1. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:58:40 -1. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:58:40 -1. Connection.prepareStatement(select userdo0_.user_id as user_id1_14_, userdo0_.birth as birth2_14_, userdo0_.city as city3_14_, userdo0_.dept_id as dept_id4_14_, userdo0_.district as district5_14_, userdo0_.email as email6_14_, userdo0_.gmt_create as gmt_crea7_14_, userdo0_.gmt_modified as gmt_modi8_14_, userdo0_.hobby as hobby9_14_, userdo0_.live_address as live_ad10_14_, userdo0_.mobile as mobile11_14_, userdo0_.name as name12_14_, userdo0_.password as passwor13_14_, userdo0_.pic_id as pic_id14_14_, userdo0_.province as provinc15_14_, userdo0_.sex as sex16_14_, userdo0_.status as status17_14_, userdo0_.user_id_create as user_id18_14_, userdo0_.username as usernam19_14_ from sys_user userdo0_ where userdo0_.username=?) returned net.sf.log4jdbc.PreparedStatementSpy@2e1ec11a
2019-04-15 20:58:40 -1. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:58:40 -1. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:58:40 -1. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:58:40 -1. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:58:40 -1. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:58:40 -1. PreparedStatement.setString(1, "admin") returned 
2019-04-15 20:58:40 -1. Connection.getAutoCommit() returned false
2019-04-15 20:58:40 -1. Connection.getAutoCommit() returned false
2019-04-15 20:58:40 -select userdo0_.user_id as user_id1_14_, userdo0_.birth as birth2_14_, userdo0_.city as city3_14_, 
userdo0_.dept_id as dept_id4_14_, userdo0_.district as district5_14_, userdo0_.email as email6_14_, 
userdo0_.gmt_create as gmt_crea7_14_, userdo0_.gmt_modified as gmt_modi8_14_, userdo0_.hobby 
as hobby9_14_, userdo0_.live_address as live_ad10_14_, userdo0_.mobile as mobile11_14_, userdo0_.name 
as name12_14_, userdo0_.password as passwor13_14_, userdo0_.pic_id as pic_id14_14_, userdo0_.province 
as provinc15_14_, userdo0_.sex as sex16_14_, userdo0_.status as status17_14_, userdo0_.user_id_create 
as user_id18_14_, userdo0_.username as usernam19_14_ from sys_user userdo0_ where userdo0_.username='admin' 

2019-04-15 20:58:40 -select userdo0_.user_id as user_id1_14_, userdo0_.birth as birth2_14_, userdo0_.city as city3_14_, 
userdo0_.dept_id as dept_id4_14_, userdo0_.district as district5_14_, userdo0_.email as email6_14_, 
userdo0_.gmt_create as gmt_crea7_14_, userdo0_.gmt_modified as gmt_modi8_14_, userdo0_.hobby 
as hobby9_14_, userdo0_.live_address as live_ad10_14_, userdo0_.mobile as mobile11_14_, userdo0_.name 
as name12_14_, userdo0_.password as passwor13_14_, userdo0_.pic_id as pic_id14_14_, userdo0_.province 
as provinc15_14_, userdo0_.sex as sex16_14_, userdo0_.status as status17_14_, userdo0_.user_id_create 
as user_id18_14_, userdo0_.username as usernam19_14_ from sys_user userdo0_ where userdo0_.username='admin' 
 {executed in 1 msec}
2019-04-15 20:58:40 -1. ResultSet.new ResultSet returned 
2019-04-15 20:58:40 -1. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@1d431ca5
2019-04-15 20:58:40 -1. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@6dc15fd1 - Field level information: 
	com.mysql.jdbc.Field@5755addd[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=user_id1_14_,originalColumnName=user_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags= AUTO_INCREMENT PRIMARY_KEY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@5718d882[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=birth2_14_,originalColumnName=birth,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@523b50f0[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=city3_14_,originalColumnName=city,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@35e3b2b1[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=dept_id4_14_,originalColumnName=dept_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@4fa2da95[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=district5_14_,originalColumnName=district,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@5e6fd72b[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=email6_14_,originalColumnName=email,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@565ba0c6[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=gmt_crea7_14_,originalColumnName=gmt_create,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@7e85e686[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=gmt_modi8_14_,originalColumnName=gmt_modified,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@272afdb1[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=hobby9_14_,originalColumnName=hobby,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@75ca0f0[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=live_ad10_14_,originalColumnName=live_address,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@c8a7d4d[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=mobile11_14_,originalColumnName=mobile,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@5dea1b8c[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=name12_14_,originalColumnName=name,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@2d5db2f5[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=passwor13_14_,originalColumnName=password,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@4f64dc8e[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=pic_id14_14_,originalColumnName=pic_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@105bb03a[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=provinc15_14_,originalColumnName=province,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@1de0efc6[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=sex16_14_,originalColumnName=sex,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@5d6a3c95[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=status17_14_,originalColumnName=status,mysqlType=1(FIELD_TYPE_TINY),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@34031b1a[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=user_id18_14_,originalColumnName=user_id_create,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@7994b7c0[catalog=bootdo_jpa,tableName=userdo0_,originalTableName=sys_user,columnName=usernam19_14_,originalColumnName=username,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
2019-04-15 20:58:40 -1. ResultSet.next() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(user_id1_14_) returned 1
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(birth2_14_) returned 2017-12-14 00:00:00.0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(city3_14_) returned 北京市市辖区
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getLong(dept_id4_14_) returned 6
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(district5_14_) returned 东城区
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(email6_14_) returned admin@example.com
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_crea7_14_) returned 2017-08-15 21:40:39.0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_modi8_14_) returned 2017-08-15 21:41:00.0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(hobby9_14_) returned 122;121;
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(live_ad10_14_) returned ccc
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(mobile11_14_) returned 17699999999
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(name12_14_) returned 超级管理员
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(passwor13_14_) returned 27bd386e70f280e24c2f4f2a549b82cf
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getLong(pic_id14_14_) returned 138
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(provinc15_14_) returned 北京市
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getLong(sex16_14_) returned 96
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(status17_14_) returned 1
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getLong(user_id18_14_) returned 1
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(usernam19_14_) returned admin
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.next() returned false
2019-04-15 20:58:40 -1. ResultSet.close() returned 
2019-04-15 20:58:40 -1. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:58:40 -1. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:58:40 -1. Connection.isClosed() returned false
2019-04-15 20:58:40 -1. PreparedStatement.clearParameters() returned 
2019-04-15 20:58:40 -1. Connection.commit() returned 
2019-04-15 20:58:40 -1. Connection.setAutoCommit(true) returned 
2019-04-15 20:58:40 -1. Connection.isReadOnly() returned true
2019-04-15 20:58:40 -1. Connection.setReadOnly(false) returned 
2019-04-15 20:58:40 -耗时 : 27
2019-04-15 20:58:40 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-15 20:58:40 -2. Connection opened
2019-04-15 20:58:40 -2. Connection.new Connection returned 
2019-04-15 20:58:40 -2. Connection.getAutoCommit() returned true
2019-04-15 20:58:40 -2. Connection.isClosed() returned false
2019-04-15 20:58:40 -2. Statement.new Statement returned 
2019-04-15 20:58:40 -2. Connection.createStatement() returned net.sf.log4jdbc.StatementSpy@3bd891d6
2019-04-15 20:58:40 -2. Connection.getAutoCommit() returned true
2019-04-15 20:58:40 -select 'x' 

2019-04-15 20:58:40 -select 'x' 
 {executed in 0 msec}
2019-04-15 20:58:40 -2. ResultSet.new ResultSet returned 
2019-04-15 20:58:40 -2. Statement.executeQuery(select 'x') returned net.sf.log4jdbc.ResultSetSpy@5cc55f17
2019-04-15 20:58:40 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@a298d91 - Field level information: 
	com.mysql.jdbc.Field@24de1df5[catalog=,tableName=,originalTableName=,columnName=x,originalColumnName=,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
2019-04-15 20:58:40 -2. ResultSet.next() returned true
2019-04-15 20:58:40 -2. ResultSet.close() returned 
2019-04-15 20:58:40 -2. Statement.close() returned 
2019-04-15 20:58:40 -2. Connection.getAutoCommit() returned true
2019-04-15 20:58:40 -2. Connection.getHoldability() returned 2
2019-04-15 20:58:40 -2. Connection.isReadOnly() returned false
2019-04-15 20:58:40 -2. Connection.getTransactionIsolation() returned 4
2019-04-15 20:58:40 -2. Connection.isClosed() returned false
2019-04-15 20:58:40 -2. Connection.getAutoCommit() returned true
2019-04-15 20:58:40 -2. Connection.setAutoCommit(false) returned 
2019-04-15 20:58:40 -3. Connection opened
2019-04-15 20:58:40 -3. Connection.new Connection returned 
2019-04-15 20:58:40 -3. Connection.getAutoCommit() returned true
2019-04-15 20:58:40 -3. Connection.isClosed() returned false
2019-04-15 20:58:40 -3. Statement.new Statement returned 
2019-04-15 20:58:40 -3. Connection.createStatement() returned net.sf.log4jdbc.StatementSpy@6fe10629
2019-04-15 20:58:40 -3. Connection.getAutoCommit() returned true
2019-04-15 20:58:40 -select 'x' 

2019-04-15 20:58:40 -select 'x' 
 {executed in 0 msec}
2019-04-15 20:58:40 -3. ResultSet.new ResultSet returned 
2019-04-15 20:58:40 -3. Statement.executeQuery(select 'x') returned net.sf.log4jdbc.ResultSetSpy@7ac3557b
2019-04-15 20:58:40 -3. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@4184af8a - Field level information: 
	com.mysql.jdbc.Field@3bc86eed[catalog=,tableName=,originalTableName=,columnName=x,originalColumnName=,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
2019-04-15 20:58:40 -3. ResultSet.next() returned true
2019-04-15 20:58:40 -3. ResultSet.close() returned 
2019-04-15 20:58:40 -3. Statement.close() returned 
2019-04-15 20:58:40 -3. Connection.getAutoCommit() returned true
2019-04-15 20:58:40 -3. Connection.getHoldability() returned 2
2019-04-15 20:58:40 -3. Connection.isReadOnly() returned false
2019-04-15 20:58:40 -3. Connection.getTransactionIsolation() returned 4
2019-04-15 20:58:40 -3. Connection.isClosed() returned false
2019-04-15 20:58:40 -3. Connection.getAutoCommit() returned true
2019-04-15 20:58:40 -3. Connection.setAutoCommit(false) returned 
2019-04-15 20:58:40 -1. Connection.isClosed() returned false
2019-04-15 20:58:40 -1. Connection.clearWarnings() returned 
2019-04-15 20:58:40 -1. Connection.clearWarnings() returned 
2019-04-15 20:58:40 -3. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:58:40 -3. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:58:40 -3. Connection.prepareStatement(select next_val as id_val from hibernate_sequence for update) returned net.sf.log4jdbc.PreparedStatementSpy@26c783c8
2019-04-15 20:58:40 -3. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:58:40 -3. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:58:40 -3. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:58:40 -3. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:58:40 -3. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:58:40 -3. Connection.getAutoCommit() returned false
2019-04-15 20:58:40 -3. Connection.getAutoCommit() returned false
2019-04-15 20:58:40 -select next_val as id_val from hibernate_sequence for update 

2019-04-15 20:58:40 -select next_val as id_val from hibernate_sequence for update 
 {executed in 4 msec}
2019-04-15 20:58:40 -3. ResultSet.new ResultSet returned 
2019-04-15 20:58:40 -3. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@1d285b9d
2019-04-15 20:58:40 -3. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@4ccb764f - Field level information: 
	com.mysql.jdbc.Field@35a3eea6[catalog=bootdo_jpa,tableName=hibernate_sequence,originalTableName=hibernate_sequence,columnName=id_val,originalColumnName=next_val,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
2019-04-15 20:58:40 -3. ResultSet.next() returned true
2019-04-15 20:58:40 -3. ResultSet.getLong(1) returned 4
2019-04-15 20:58:40 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -3. ResultSet.close() returned 
2019-04-15 20:58:40 -3. Connection.isClosed() returned false
2019-04-15 20:58:40 -3. PreparedStatement.clearParameters() returned 
2019-04-15 20:58:40 -3. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:58:40 -请求地址 : http://localhost:8080/index
2019-04-15 20:58:40 -HTTP METHOD : GET
2019-04-15 20:58:40 -CLASS_METHOD : com.bootdo_jpa.system.controller.LoginController.index
2019-04-15 20:58:40 -参数 : [{}]
2019-04-15 20:58:40 -1. Connection.isClosed() returned false
2019-04-15 20:58:40 -1. Connection.setReadOnly(true) returned 
2019-04-15 20:58:40 -1. Connection.getAutoCommit() returned true
2019-04-15 20:58:40 -1. Connection.setAutoCommit(false) returned 
2019-04-15 20:58:40 -3. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:58:40 -3. Connection.prepareStatement(update hibernate_sequence set next_val= ? where next_val=?) returned net.sf.log4jdbc.PreparedStatementSpy@397281e0
2019-04-15 20:58:40 -3. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:58:40 -3. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:58:40 -3. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:58:40 -3. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:58:40 -3. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:58:40 -3. PreparedStatement.setLong(1, 5) returned 
2019-04-15 20:58:40 -3. PreparedStatement.setLong(2, 4) returned 
2019-04-15 20:58:40 -3. Connection.getAutoCommit() returned false
2019-04-15 20:58:40 -update hibernate_sequence set next_val= 5 where next_val=4 

2019-04-15 20:58:40 -1. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:58:40 -1. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:58:40 -1. Connection.prepareStatement(select distinct m.menu_id , m.parent_id, m.name, m.url, m.perms, m.`type`, m.icon, m.order_num, m.gmt_create, m.gmt_modified 		from sys_menu m 		left join sys_role_menu rm on m.menu_id = rm.menu_id  		left join sys_user_role ur on rm.role_id =ur.role_id  		where ur.user_id = ? and m.type in (0,1)  		order by m.order_num) returned net.sf.log4jdbc.PreparedStatementSpy@5832b43f
2019-04-15 20:58:40 -1. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:58:40 -1. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:58:40 -1. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:58:40 -1. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:58:40 -1. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:58:40 -1. PreparedStatement.setLong(1, 1) returned 
2019-04-15 20:58:40 -1. Connection.getAutoCommit() returned false
2019-04-15 20:58:40 -1. Connection.getAutoCommit() returned false
2019-04-15 20:58:40 -select distinct m.menu_id , m.parent_id, m.name, m.url, m.perms, m.`type`, m.icon, m.order_num, 
m.gmt_create, m.gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id 
left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = 1 and m.type in (0,1) 
order by m.order_num 

2019-04-15 20:58:40 -select distinct m.menu_id , m.parent_id, m.name, m.url, m.perms, m.`type`, m.icon, m.order_num, 
m.gmt_create, m.gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id 
left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = 1 and m.type in (0,1) 
order by m.order_num 
 {executed in 1 msec}
2019-04-15 20:58:40 -1. ResultSet.new ResultSet returned 
2019-04-15 20:58:40 -1. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@4c6c5715
2019-04-15 20:58:40 -1. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@545faddc - Field level information: 
	com.mysql.jdbc.Field@97edc79[catalog=bootdo_jpa,tableName=m,originalTableName=sys_menu,columnName=menu_id,originalColumnName=menu_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@1c9b359e[catalog=bootdo_jpa,tableName=m,originalTableName=sys_menu,columnName=parent_id,originalColumnName=parent_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@32e11de7[catalog=bootdo_jpa,tableName=m,originalTableName=sys_menu,columnName=name,originalColumnName=name,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@1bf9772a[catalog=bootdo_jpa,tableName=m,originalTableName=sys_menu,columnName=url,originalColumnName=url,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@641bed38[catalog=bootdo_jpa,tableName=m,originalTableName=sys_menu,columnName=perms,originalColumnName=perms,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@21e903e0[catalog=bootdo_jpa,tableName=m,originalTableName=sys_menu,columnName=type,originalColumnName=type,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@1b5d2c1f[catalog=bootdo_jpa,tableName=m,originalTableName=sys_menu,columnName=icon,originalColumnName=icon,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
	com.mysql.jdbc.Field@4b4d5879[catalog=bootdo_jpa,tableName=m,originalTableName=sys_menu,columnName=order_num,originalColumnName=order_num,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@70041e05[catalog=bootdo_jpa,tableName=m,originalTableName=sys_menu,columnName=gmt_create,originalColumnName=gmt_create,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@199bf5e6[catalog=bootdo_jpa,tableName=m,originalTableName=sys_menu,columnName=gmt_modified,originalColumnName=gmt_modified,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
2019-04-15 20:58:40 -1. ResultSet.next() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(menu_id) returned 85
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:58:40 -1. ResultSet.getString(icon) returned fa fa-pencil-square
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(name) returned 通知公告
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(order_num) returned 0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(parent_id) returned 84
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(perms) returned oa:notify:notify
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(type) returned 1
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(url) returned oa/notify
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.next() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(menu_id) returned 98
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:58:40 -1. ResultSet.getString(icon) returned fa fa-area-chart
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(name) returned 百度chart
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(order_num) returned 0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(parent_id) returned 97
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(perms) returned 
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(type) returned 1
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(url) returned /chart/graph_echarts.html
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.next() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(menu_id) returned 101
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:58:40 -1. ResultSet.getString(icon) returned 
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(name) returned 待办任务
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(order_num) returned 0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(parent_id) returned 93
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(perms) returned 
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(type) returned 1
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(url) returned activiti/task/todo
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.next() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(menu_id) returned 92
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:58:40 -1. ResultSet.getString(icon) returned fa fa-user
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(name) returned 在线用户
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(order_num) returned 0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(parent_id) returned 91
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(perms) returned 
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(type) returned 1
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(url) returned sys/online
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.next() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(menu_id) returned 96
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:58:40 -1. ResultSet.getString(icon) returned fa fa-flag
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(name) returned 流程管理
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(order_num) returned 0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(parent_id) returned 93
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(perms) returned 
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(type) returned 1
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(url) returned activiti/process
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.next() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(menu_id) returned 104
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:58:40 -1. ResultSet.getString(icon) returned 
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(name) returned swagger
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(order_num) returned 0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(parent_id) returned 77
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(perms) returned 
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(type) returned 1
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(url) returned /swagger-ui.html
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.next() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(menu_id) returned 94
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:58:40 -1. ResultSet.getString(icon) returned fa fa-sort-amount-asc
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(name) returned 模型管理
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(order_num) returned 0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(parent_id) returned 93
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(perms) returned 
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(type) returned 1
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(url) returned activiti/model
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.next() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(menu_id) returned 90
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:58:40 -1. ResultSet.getString(icon) returned fa fa-envelope-square
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(name) returned 我的通知
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(order_num) returned 0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(parent_id) returned 84
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(perms) returned 
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(type) returned 1
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(url) returned oa/notify/selfNotify
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.next() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(menu_id) returned 27
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_create) returned 2017-08-14 22:11:53.0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:58:40 -1. ResultSet.getString(icon) returned fa fa-warning
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(name) returned 系统日志
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(order_num) returned 0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getLong(parent_id) returned 91
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(perms) returned common:log
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(type) returned 1
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(url) returned common/log
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.next() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(menu_id) returned 6
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_create) returned 2017-08-10 14:12:11.0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:58:40 -1. ResultSet.getString(icon) returned fa fa-user
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(name) returned 用户管理
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(order_num) returned 0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getLong(parent_id) returned 3
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(perms) returned sys:user:user
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(type) returned 1
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(url) returned sys/user/
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.next() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(menu_id) returned 68
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:58:40 -1. ResultSet.getString(icon) returned fa fa-edit
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(name) returned 发布文章
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(order_num) returned 0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getLong(parent_id) returned 49
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(perms) returned blog:bContent:add
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(type) returned 1
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(url) returned /blog/bContent/add
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.next() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(menu_id) returned 1
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_create) returned 2017-08-09 22:49:47.0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:58:40 -1. ResultSet.getString(icon) returned fa fa-bars
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(name) returned 基础管理
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(order_num) returned 0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getLong(parent_id) returned 0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(perms) returned 
2019-04-15 20:58:40 -update hibernate_sequence set next_val= 5 where next_val=4 
 {executed in 36 msec}
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(type) returned 0
2019-04-15 20:58:40 -3. PreparedStatement.executeUpdate() returned 14
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(url) returned 
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.next() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(menu_id) returned 3
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -3. Connection.isClosed() returned false
2019-04-15 20:58:40 -3. PreparedStatement.clearParameters() returned 
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_create) returned 2017-08-09 23:06:55.0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_modified) returned 2017-08-14 14:13:43.0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(icon) returned fa fa-desktop
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(name) returned 系统管理
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(order_num) returned 1
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getLong(parent_id) returned 0
2019-04-15 20:58:40 -3. Connection.commit() returned 
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(perms) returned null
2019-04-15 20:58:40 -1. ResultSet.getInt(type) returned 0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(url) returned null
2019-04-15 20:58:40 -1. ResultSet.next() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(menu_id) returned 78
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:58:40 -3. Connection.setAutoCommit(true) returned 
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:58:40 -1. ResultSet.getString(icon) returned fa fa-book
2019-04-15 20:58:40 -3. Connection.clearWarnings() returned 
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(name) returned 数据字典
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(order_num) returned 1
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getLong(parent_id) returned 1
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(perms) returned common:dict:dict
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(type) returned 1
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(url) returned /common/dict
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.next() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(menu_id) returned 50
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:58:40 -1. ResultSet.getString(icon) returned fa fa-file-image-o
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(name) returned 文章列表
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(order_num) returned 1
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getLong(parent_id) returned 49
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(perms) returned blog:bContent:bContent
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(type) returned 1
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(url) returned blog/bContent
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.next() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(menu_id) returned 57
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:58:40 -1. ResultSet.getString(icon) returned fa fa-caret-square-o-right
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(name) returned 运行监控
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(order_num) returned 1
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getLong(parent_id) returned 91
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(perms) returned 
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(type) returned 1
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(url) returned /druid/index.html
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.next() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(menu_id) returned 7
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_create) returned 2017-08-10 14:13:19.0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:58:40 -1. ResultSet.getString(icon) returned fa fa-paw
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(name) returned 角色管理
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(order_num) returned 1
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getLong(parent_id) returned 3
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(perms) returned sys:role:role
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(type) returned 1
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(url) returned sys/role
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.next() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(menu_id) returned 2
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_create) returned 2017-08-09 22:55:15.0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:58:40 -1. ResultSet.getString(icon) returned fa fa-th-list
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(name) returned 系统菜单
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(order_num) returned 2
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getLong(parent_id) returned 3
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(perms) returned sys:menu:menu
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(type) returned 1
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(url) returned sys/menu/
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.next() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(menu_id) returned 71
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:58:40 -1. ResultSet.getString(icon) returned fa fa-folder-open
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(name) returned 文件管理
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(order_num) returned 2
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getLong(parent_id) returned 1
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(perms) returned common:sysFile:sysFile
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(type) returned 1
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(url) returned /common/sysFile
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.next() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(menu_id) returned 48
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:58:40 -1. ResultSet.getString(icon) returned fa fa-code
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(name) returned 代码生成
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(order_num) returned 3
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getLong(parent_id) returned 77
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(perms) returned common:generator
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(type) returned 1
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(url) returned common/generator
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.next() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(menu_id) returned 73
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:58:40 -1. ResultSet.getString(icon) returned fa fa-users
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(name) returned 部门管理
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(order_num) returned 3
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getLong(parent_id) returned 3
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(perms) returned system:sysDept:sysDept
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(type) returned 1
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(url) returned /system/sysDept
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.next() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(menu_id) returned 72
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:58:40 -1. ResultSet.getString(icon) returned fa fa-hourglass-1
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(name) returned 计划任务
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(order_num) returned 4
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getLong(parent_id) returned 77
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(perms) returned common:taskScheduleJob
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(type) returned 1
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(url) returned common/job
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.next() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(menu_id) returned 77
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:58:40 -1. ResultSet.getString(icon) returned fa fa-gear
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(name) returned 系统工具
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(order_num) returned 4
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getLong(parent_id) returned 0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(perms) returned 
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(type) returned 0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(url) returned 
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.next() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(menu_id) returned 91
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:58:40 -1. ResultSet.getString(icon) returned fa fa-video-camera
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(name) returned 系统监控
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(order_num) returned 5
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getLong(parent_id) returned 0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(perms) returned 
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(type) returned 0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(url) returned 
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.next() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(menu_id) returned 84
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:58:40 -1. ResultSet.getString(icon) returned fa fa-laptop
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(name) returned 办公管理
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(order_num) returned 5
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getLong(parent_id) returned 0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(perms) returned 
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(type) returned 0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(url) returned 
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.next() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(menu_id) returned 49
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:58:40 -1. ResultSet.getString(icon) returned fa fa-rss
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(name) returned 博客管理
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(order_num) returned 6
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getLong(parent_id) returned 0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(perms) returned 
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(type) returned 0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(url) returned 
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.next() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(menu_id) returned 93
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:58:40 -1. ResultSet.getString(icon) returned fa fa-print
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(name) returned 工作流程
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(order_num) returned 6
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getLong(parent_id) returned 0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(perms) returned 
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(type) returned 0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(url) returned 
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.next() returned true
2019-04-15 20:58:40 -1. ResultSet.getLong(menu_id) returned 97
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_create) returned null
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(gmt_modified) returned null
2019-04-15 20:58:40 -1. ResultSet.getString(icon) returned fa fa-bar-chart
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(name) returned 图表管理
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(order_num) returned 7
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getLong(parent_id) returned 0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(perms) returned 
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(type) returned 0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(url) returned 
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.next() returned false
2019-04-15 20:58:40 -1. ResultSet.close() returned 
2019-04-15 20:58:40 -1. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:58:40 -1. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:58:40 -1. Connection.isClosed() returned false
2019-04-15 20:58:40 -1. PreparedStatement.clearParameters() returned 
2019-04-15 20:58:40 -1. Connection.commit() returned 
2019-04-15 20:58:40 -1. Connection.setAutoCommit(true) returned 
2019-04-15 20:58:40 -1. Connection.isReadOnly() returned true
2019-04-15 20:58:40 -1. Connection.setReadOnly(false) returned 
2019-04-15 20:58:40 -1. Connection.setReadOnly(true) returned 
2019-04-15 20:58:40 -1. Connection.getAutoCommit() returned true
2019-04-15 20:58:40 -1. Connection.setAutoCommit(false) returned 
2019-04-15 20:58:40 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:58:40 -2. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:58:40 -2. Connection.prepareStatement(insert into sys_log (gmt_create, ip, method, operation, params, time, user_id, username, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)) returned net.sf.log4jdbc.PreparedStatementSpy@be8c9e5
2019-04-15 20:58:40 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:58:40 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:58:40 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:58:40 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:58:40 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:58:40 -2. PreparedStatement.setTimestamp(1, 2019-04-15 20:58:40.65) returned 
2019-04-15 20:58:40 -2. PreparedStatement.setString(2, "127.0.0.1") returned 
2019-04-15 20:58:40 -2. PreparedStatement.setString(3, "com.bootdo_jpa.system.controller.LoginController.ajaxLogin()") returned 
2019-04-15 20:58:40 -2. PreparedStatement.setString(4, "登录") returned 
2019-04-15 20:58:40 -2. PreparedStatement.setNull(5, 12) returned 
2019-04-15 20:58:40 -2. PreparedStatement.setInt(6, 27) returned 
2019-04-15 20:58:40 -2. PreparedStatement.setLong(7, 1) returned 
2019-04-15 20:58:40 -2. PreparedStatement.setString(8, "admin") returned 
2019-04-15 20:58:40 -2. PreparedStatement.setLong(9, 4) returned 
2019-04-15 20:58:40 -2. Connection.getAutoCommit() returned false
2019-04-15 20:58:40 -2. Connection.getAutoCommit() returned false
2019-04-15 20:58:40 -insert into sys_log (gmt_create, ip, method, operation, params, time, user_id, username, id) 
values ('2019-04-15 20:58:40', '127.0.0.1', 'com.bootdo_jpa.system.controller.LoginController.ajaxLogin()', 
'登录', NULL, 27, 1, 'admin', 4) 

2019-04-15 20:58:40 -insert into sys_log (gmt_create, ip, method, operation, params, time, user_id, username, id) 
values ('2019-04-15 20:58:40', '127.0.0.1', 'com.bootdo_jpa.system.controller.LoginController.ajaxLogin()', 
'登录', NULL, 27, 1, 'admin', 4) 
 {executed in 1 msec}
2019-04-15 20:58:40 -2. PreparedStatement.executeUpdate() returned 1
2019-04-15 20:58:40 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:58:40 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:58:40 -2. Connection.isClosed() returned false
2019-04-15 20:58:40 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:58:40 -1. Connection.commit() returned 
2019-04-15 20:58:40 -1. Connection.setAutoCommit(true) returned 
2019-04-15 20:58:40 -1. Connection.isReadOnly() returned true
2019-04-15 20:58:40 -1. Connection.setReadOnly(false) returned 
2019-04-15 20:58:40 -1. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:58:40 -1. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:58:40 -1. Connection.prepareStatement(select filedo0_.id as id1_8_0_, filedo0_.create_date as create_d2_8_0_, filedo0_.type as type3_8_0_, filedo0_.url as url4_8_0_ from sys_file filedo0_ where filedo0_.id=?) returned net.sf.log4jdbc.PreparedStatementSpy@407ad32a
2019-04-15 20:58:40 -1. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:58:40 -1. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:58:40 -1. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:58:40 -1. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:58:40 -1. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:58:40 -1. PreparedStatement.setLong(1, 138) returned 
2019-04-15 20:58:40 -1. Connection.getAutoCommit() returned true
2019-04-15 20:58:40 -1. Connection.getAutoCommit() returned true
2019-04-15 20:58:40 -select filedo0_.id as id1_8_0_, filedo0_.create_date as create_d2_8_0_, filedo0_.type as type3_8_0_, 
filedo0_.url as url4_8_0_ from sys_file filedo0_ where filedo0_.id=138 

2019-04-15 20:58:40 -select filedo0_.id as id1_8_0_, filedo0_.create_date as create_d2_8_0_, filedo0_.type as type3_8_0_, 
filedo0_.url as url4_8_0_ from sys_file filedo0_ where filedo0_.id=138 
 {executed in 0 msec}
2019-04-15 20:58:40 -1. ResultSet.new ResultSet returned 
2019-04-15 20:58:40 -1. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@16b5d183
2019-04-15 20:58:40 -1. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@5ecca032 - Field level information: 
	com.mysql.jdbc.Field@4bf3c25[catalog=bootdo_jpa,tableName=filedo0_,originalTableName=sys_file,columnName=id1_8_0_,originalColumnName=id,mysqlType=8(FIELD_TYPE_LONGLONG),flags= AUTO_INCREMENT PRIMARY_KEY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@1f3d4b1[catalog=bootdo_jpa,tableName=filedo0_,originalTableName=sys_file,columnName=create_d2_8_0_,originalColumnName=create_date,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@397224c5[catalog=bootdo_jpa,tableName=filedo0_,originalTableName=sys_file,columnName=type3_8_0_,originalColumnName=type,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@204cee9[catalog=bootdo_jpa,tableName=filedo0_,originalTableName=sys_file,columnName=url4_8_0_,originalColumnName=url,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
2019-04-15 20:58:40 -1. ResultSet.next() returned true
2019-04-15 20:58:40 -1. ResultSet.getTimestamp(create_d2_8_0_) returned 2017-12-19 19:55:27.0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getInt(type3_8_0_) returned 0
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.getString(url4_8_0_) returned /files/9ec12ee7-65b5-4cc5-9900-d2ec6185b336.jpg
2019-04-15 20:58:40 -1. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -1. ResultSet.next() returned false
2019-04-15 20:58:40 -1. ResultSet.close() returned 
2019-04-15 20:58:40 -1. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:58:40 -1. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:58:40 -1. Connection.isClosed() returned false
2019-04-15 20:58:40 -1. PreparedStatement.clearParameters() returned 
2019-04-15 20:58:40 -1. Connection.setReadOnly(true) returned 
2019-04-15 20:58:40 -1. Connection.getAutoCommit() returned true
2019-04-15 20:58:40 -1. Connection.setAutoCommit(false) returned 
2019-04-15 20:58:40 -1. Connection.commit() returned 
2019-04-15 20:58:40 -1. Connection.setAutoCommit(true) returned 
2019-04-15 20:58:40 -1. Connection.isReadOnly() returned true
2019-04-15 20:58:40 -1. Connection.setReadOnly(false) returned 
2019-04-15 20:58:40 -耗时 : 71
2019-04-15 20:58:40 -3. Connection.isClosed() returned false
2019-04-15 20:58:40 -3. Connection.getAutoCommit() returned true
2019-04-15 20:58:40 -3. Connection.setAutoCommit(false) returned 
2019-04-15 20:58:40 -4. Connection opened
2019-04-15 20:58:40 -4. Connection.new Connection returned 
2019-04-15 20:58:40 -4. Connection.getAutoCommit() returned true
2019-04-15 20:58:40 -4. Connection.isClosed() returned false
2019-04-15 20:58:40 -4. Statement.new Statement returned 
2019-04-15 20:58:40 -4. Connection.createStatement() returned net.sf.log4jdbc.StatementSpy@75043ba
2019-04-15 20:58:40 -4. Connection.getAutoCommit() returned true
2019-04-15 20:58:40 -select 'x' 

2019-04-15 20:58:40 -select 'x' 
 {executed in 0 msec}
2019-04-15 20:58:40 -4. ResultSet.new ResultSet returned 
2019-04-15 20:58:40 -4. Statement.executeQuery(select 'x') returned net.sf.log4jdbc.ResultSetSpy@42e53044
2019-04-15 20:58:40 -4. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@3dd50766 - Field level information: 
	com.mysql.jdbc.Field@3934373a[catalog=,tableName=,originalTableName=,columnName=x,originalColumnName=,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
2019-04-15 20:58:40 -4. ResultSet.next() returned true
2019-04-15 20:58:40 -4. ResultSet.close() returned 
2019-04-15 20:58:40 -4. Statement.close() returned 
2019-04-15 20:58:40 -4. Connection.getAutoCommit() returned true
2019-04-15 20:58:40 -4. Connection.getHoldability() returned 2
2019-04-15 20:58:40 -4. Connection.isReadOnly() returned false
2019-04-15 20:58:40 -4. Connection.getTransactionIsolation() returned 4
2019-04-15 20:58:40 -4. Connection.isClosed() returned false
2019-04-15 20:58:40 -4. Connection.getAutoCommit() returned true
2019-04-15 20:58:40 -4. Connection.setAutoCommit(false) returned 
2019-04-15 20:58:40 -4. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:58:40 -4. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:58:40 -4. Connection.prepareStatement(select next_val as id_val from hibernate_sequence for update) returned net.sf.log4jdbc.PreparedStatementSpy@ae8d4f9
2019-04-15 20:58:40 -4. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:58:40 -4. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:58:40 -4. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:58:40 -4. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:58:40 -4. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:58:40 -4. Connection.getAutoCommit() returned false
2019-04-15 20:58:40 -4. Connection.getAutoCommit() returned false
2019-04-15 20:58:40 -select next_val as id_val from hibernate_sequence for update 

2019-04-15 20:58:40 -select next_val as id_val from hibernate_sequence for update 
 {executed in 5 msec}
2019-04-15 20:58:40 -4. ResultSet.new ResultSet returned 
2019-04-15 20:58:40 -4. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@ed7517c
2019-04-15 20:58:40 -4. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@4bd5dec2 - Field level information: 
	com.mysql.jdbc.Field@36d772ee[catalog=bootdo_jpa,tableName=hibernate_sequence,originalTableName=hibernate_sequence,columnName=id_val,originalColumnName=next_val,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
2019-04-15 20:58:40 -4. ResultSet.next() returned true
2019-04-15 20:58:40 -4. ResultSet.getLong(1) returned 5
2019-04-15 20:58:40 -4. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -4. ResultSet.close() returned 
2019-04-15 20:58:40 -4. Connection.isClosed() returned false
2019-04-15 20:58:40 -4. PreparedStatement.clearParameters() returned 
2019-04-15 20:58:40 -4. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:58:40 -4. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:58:40 -4. Connection.prepareStatement(update hibernate_sequence set next_val= ? where next_val=?) returned net.sf.log4jdbc.PreparedStatementSpy@4e3cc546
2019-04-15 20:58:40 -4. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:58:40 -4. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:58:40 -4. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:58:40 -4. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:58:40 -4. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:58:40 -4. PreparedStatement.setLong(1, 6) returned 
2019-04-15 20:58:40 -4. PreparedStatement.setLong(2, 5) returned 
2019-04-15 20:58:40 -4. Connection.getAutoCommit() returned false
2019-04-15 20:58:40 -update hibernate_sequence set next_val= 6 where next_val=5 

2019-04-15 20:58:40 -1. Connection.isClosed() returned false
2019-04-15 20:58:40 -1. Connection.clearWarnings() returned 
2019-04-15 20:58:40 -1. Connection.clearWarnings() returned 
2019-04-15 20:58:40 -请求地址 : http://localhost:8080/main
2019-04-15 20:58:40 -HTTP METHOD : GET
2019-04-15 20:58:40 -CLASS_METHOD : com.bootdo_jpa.system.controller.LoginController.main
2019-04-15 20:58:40 -参数 : []
2019-04-15 20:58:40 -耗时 : 0
2019-04-15 20:58:40 -2. Connection.commit() returned 
2019-04-15 20:58:40 -2. Connection.setAutoCommit(true) returned 
2019-04-15 20:58:40 -2. Connection.isClosed() returned false
2019-04-15 20:58:40 -2. Connection.clearWarnings() returned 
2019-04-15 20:58:40 -2. Connection.clearWarnings() returned 
2019-04-15 20:58:40 -请求地址 : http://localhost:8080/oa/notify/message
2019-04-15 20:58:40 -HTTP METHOD : GET
2019-04-15 20:58:40 -CLASS_METHOD : com.bootdo_jpa.oa.controller.NotifyController.message
2019-04-15 20:58:40 -参数 : []
2019-04-15 20:58:40 -2. Connection.isClosed() returned false
2019-04-15 20:58:40 -2. Connection.setReadOnly(true) returned 
2019-04-15 20:58:40 -2. Connection.getAutoCommit() returned true
2019-04-15 20:58:40 -2. Connection.setAutoCommit(false) returned 
2019-04-15 20:58:40 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:58:40 -2. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:58:40 -2. Connection.prepareStatement(select notifyreco0_.id as id1_4_, notifyreco0_.is_read as is_read2_4_, notifyreco0_.notify_id as notify_i3_4_, notifyreco0_.read_date as read_dat4_4_, notifyreco0_.user_id as user_id5_4_ from oa_notify_record notifyreco0_ where notifyreco0_.is_read=0 and notifyreco0_.user_id=1) returned net.sf.log4jdbc.PreparedStatementSpy@43d3b420
2019-04-15 20:58:40 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:58:40 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:58:40 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:58:40 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:58:40 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:58:40 -2. Connection.getAutoCommit() returned false
2019-04-15 20:58:40 -2. Connection.getAutoCommit() returned false
2019-04-15 20:58:40 -select notifyreco0_.id as id1_4_, notifyreco0_.is_read as is_read2_4_, notifyreco0_.notify_id 
as notify_i3_4_, notifyreco0_.read_date as read_dat4_4_, notifyreco0_.user_id as user_id5_4_ 
from oa_notify_record notifyreco0_ where notifyreco0_.is_read=0 and notifyreco0_.user_id=1 

2019-04-15 20:58:40 -select notifyreco0_.id as id1_4_, notifyreco0_.is_read as is_read2_4_, notifyreco0_.notify_id 
as notify_i3_4_, notifyreco0_.read_date as read_dat4_4_, notifyreco0_.user_id as user_id5_4_ 
from oa_notify_record notifyreco0_ where notifyreco0_.is_read=0 and notifyreco0_.user_id=1 
 {executed in 1 msec}
2019-04-15 20:58:40 -2. ResultSet.new ResultSet returned 
2019-04-15 20:58:40 -2. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@341c5a08
2019-04-15 20:58:40 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@3cd36de1 - Field level information: 
	com.mysql.jdbc.Field@62ffacef[catalog=bootdo_jpa,tableName=notifyreco0_,originalTableName=oa_notify_record,columnName=id1_4_,originalColumnName=id,mysqlType=8(FIELD_TYPE_LONGLONG),flags= AUTO_INCREMENT PRIMARY_KEY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@9b49315[catalog=bootdo_jpa,tableName=notifyreco0_,originalTableName=oa_notify_record,columnName=is_read2_4_,originalColumnName=is_read,mysqlType=1(FIELD_TYPE_TINY),flags= MULTI_KEY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@5f2e4431[catalog=bootdo_jpa,tableName=notifyreco0_,originalTableName=oa_notify_record,columnName=notify_i3_4_,originalColumnName=notify_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags= MULTI_KEY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@78359650[catalog=bootdo_jpa,tableName=notifyreco0_,originalTableName=oa_notify_record,columnName=read_dat4_4_,originalColumnName=read_date,mysqlType=10(FIELD_TYPE_DATE),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@6732c56d[catalog=bootdo_jpa,tableName=notifyreco0_,originalTableName=oa_notify_record,columnName=user_id5_4_,originalColumnName=user_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags= MULTI_KEY, charsetIndex=63, charsetName=US-ASCII]
2019-04-15 20:58:40 -2. ResultSet.next() returned false
2019-04-15 20:58:40 -2. ResultSet.close() returned 
2019-04-15 20:58:40 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:58:40 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:58:40 -2. Connection.isClosed() returned false
2019-04-15 20:58:40 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:58:40 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:58:40 -2. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:58:40 -2. Connection.prepareStatement(select count(notifyreco0_.id) as col_0_0_ from oa_notify_record notifyreco0_ where notifyreco0_.user_id=1 and notifyreco0_.is_read=0) returned net.sf.log4jdbc.PreparedStatementSpy@1fdd5584
2019-04-15 20:58:40 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:58:40 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:58:40 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:58:40 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:58:40 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:58:40 -2. Connection.getAutoCommit() returned false
2019-04-15 20:58:40 -select count(notifyreco0_.id) as col_0_0_ from oa_notify_record notifyreco0_ where notifyreco0_.user_id=1 
and notifyreco0_.is_read=0 

2019-04-15 20:58:40 -update hibernate_sequence set next_val= 6 where next_val=5 
 {executed in 102 msec}
2019-04-15 20:58:40 -4. PreparedStatement.executeUpdate() returned 14
2019-04-15 20:58:40 -select count(notifyreco0_.id) as col_0_0_ from oa_notify_record notifyreco0_ where notifyreco0_.user_id=1 
and notifyreco0_.is_read=0 
 {executed in 1 msec}
2019-04-15 20:58:40 -2. ResultSet.new ResultSet returned 
2019-04-15 20:58:40 -4. Connection.isClosed() returned false
2019-04-15 20:58:40 -2. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@7a5e1b1b
2019-04-15 20:58:40 -4. PreparedStatement.clearParameters() returned 
2019-04-15 20:58:40 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@4d3ebc39 - Field level information: 
	com.mysql.jdbc.Field@38bab16f[catalog=,tableName=,originalTableName=,columnName=col_0_0_,originalColumnName=,mysqlType=8(FIELD_TYPE_LONGLONG),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
2019-04-15 20:58:40 -2. ResultSet.next() returned true
2019-04-15 20:58:40 -2. ResultSet.getLong(col_0_0_) returned 0
2019-04-15 20:58:40 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:40 -2. ResultSet.next() returned false
2019-04-15 20:58:40 -4. Connection.commit() returned 
2019-04-15 20:58:40 -2. ResultSet.close() returned 
2019-04-15 20:58:40 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:58:40 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:58:40 -2. Connection.isClosed() returned false
2019-04-15 20:58:40 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:58:40 -4. Connection.setAutoCommit(true) returned 
2019-04-15 20:58:40 -4. Connection.clearWarnings() returned 
2019-04-15 20:58:40 -3. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:58:40 -3. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:58:40 -3. Connection.prepareStatement(insert into sys_log (gmt_create, ip, method, operation, params, time, user_id, username, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)) returned net.sf.log4jdbc.PreparedStatementSpy@32ae7aa8
2019-04-15 20:58:40 -3. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:58:40 -3. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:58:40 -3. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:58:40 -3. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:58:40 -3. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:58:40 -3. PreparedStatement.setTimestamp(1, 2019-04-15 20:58:40.803) returned 
2019-04-15 20:58:40 -3. PreparedStatement.setString(2, "127.0.0.1") returned 
2019-04-15 20:58:40 -3. PreparedStatement.setString(3, "com.bootdo_jpa.system.controller.LoginController.index()") returned 
2019-04-15 20:58:40 -3. PreparedStatement.setString(4, "请求访问主页") returned 
2019-04-15 20:58:40 -3. PreparedStatement.setNull(5, 12) returned 
2019-04-15 20:58:40 -3. PreparedStatement.setInt(6, 71) returned 
2019-04-15 20:58:40 -3. PreparedStatement.setLong(7, 1) returned 
2019-04-15 20:58:40 -3. PreparedStatement.setString(8, "admin") returned 
2019-04-15 20:58:40 -3. PreparedStatement.setLong(9, 5) returned 
2019-04-15 20:58:40 -3. Connection.getAutoCommit() returned false
2019-04-15 20:58:40 -3. Connection.getAutoCommit() returned false
2019-04-15 20:58:40 -insert into sys_log (gmt_create, ip, method, operation, params, time, user_id, username, id) 
values ('2019-04-15 20:58:40', '127.0.0.1', 'com.bootdo_jpa.system.controller.LoginController.index()', 
'请求访问主页', NULL, 71, 1, 'admin', 5) 

2019-04-15 20:58:40 -insert into sys_log (gmt_create, ip, method, operation, params, time, user_id, username, id) 
values ('2019-04-15 20:58:40', '127.0.0.1', 'com.bootdo_jpa.system.controller.LoginController.index()', 
'请求访问主页', NULL, 71, 1, 'admin', 5) 
 {executed in 1 msec}
2019-04-15 20:58:40 -3. PreparedStatement.executeUpdate() returned 1
2019-04-15 20:58:40 -3. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:58:40 -3. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:58:40 -3. Connection.isClosed() returned false
2019-04-15 20:58:40 -3. PreparedStatement.clearParameters() returned 
2019-04-15 20:58:40 -请求地址 : http://localhost:8080/main
2019-04-15 20:58:40 -HTTP METHOD : GET
2019-04-15 20:58:40 -CLASS_METHOD : com.bootdo_jpa.system.controller.LoginController.main
2019-04-15 20:58:40 -参数 : []
2019-04-15 20:58:40 -耗时 : 0
2019-04-15 20:58:40 -2. Connection.commit() returned 
2019-04-15 20:58:40 -2. Connection.setAutoCommit(true) returned 
2019-04-15 20:58:40 -2. Connection.isReadOnly() returned true
2019-04-15 20:58:40 -2. Connection.setReadOnly(false) returned 
2019-04-15 20:58:40 -耗时 : 28
2019-04-15 20:58:40 -2. Connection.isClosed() returned false
2019-04-15 20:58:40 -2. Connection.clearWarnings() returned 
2019-04-15 20:58:40 -2. Connection.clearWarnings() returned 
2019-04-15 20:58:40 -3. Connection.commit() returned 
2019-04-15 20:58:40 -3. Connection.setAutoCommit(true) returned 
2019-04-15 20:58:40 -3. Connection.isClosed() returned false
2019-04-15 20:58:40 -3. Connection.clearWarnings() returned 
2019-04-15 20:58:40 -3. Connection.clearWarnings() returned 
2019-04-15 20:58:43 -请求地址 : http://localhost:8080/main
2019-04-15 20:58:43 -HTTP METHOD : GET
2019-04-15 20:58:43 -CLASS_METHOD : com.bootdo_jpa.system.controller.LoginController.main
2019-04-15 20:58:43 -参数 : []
2019-04-15 20:58:43 -耗时 : 1
2019-04-15 20:58:45 -3. Connection.isClosed() returned false
2019-04-15 20:58:45 -3. Connection.setReadOnly(true) returned 
2019-04-15 20:58:45 -3. Connection.getAutoCommit() returned true
2019-04-15 20:58:45 -3. Connection.setAutoCommit(false) returned 
2019-04-15 20:58:45 -3. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:58:45 -3. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:58:45 -3. Connection.prepareStatement(select distinct m.perms 		from sys_menu m  		left join sys_role_menu rm on m.menu_id = rm.menu_id 		left join sys_user_role ur on rm.role_id = ur.role_id  		where ur.user_id = ?) returned net.sf.log4jdbc.PreparedStatementSpy@7f44666b
2019-04-15 20:58:45 -3. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:58:45 -3. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:58:45 -3. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:58:45 -3. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:58:45 -3. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:58:45 -3. PreparedStatement.setLong(1, 1) returned 
2019-04-15 20:58:45 -3. Connection.getAutoCommit() returned false
2019-04-15 20:58:45 -3. Connection.getAutoCommit() returned false
2019-04-15 20:58:45 -select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id 
left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = 1 

2019-04-15 20:58:45 -select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id 
left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = 1 
 {executed in 1 msec}
2019-04-15 20:58:45 -3. ResultSet.new ResultSet returned 
2019-04-15 20:58:45 -3. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@16afb4a1
2019-04-15 20:58:45 -3. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@7aaa635d - Field level information: 
	com.mysql.jdbc.Field@2601255d[catalog=bootdo_jpa,tableName=m,originalTableName=sys_menu,columnName=perms,originalColumnName=perms,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
2019-04-15 20:58:45 -3. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@75d6017a - Field level information: 
	com.mysql.jdbc.Field@2601255d[catalog=bootdo_jpa,tableName=m,originalTableName=sys_menu,columnName=perms,originalColumnName=perms,mysqlType=253(FIELD_TYPE_VAR_STRING),flags=, charsetIndex=33, charsetName=utf8]
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned 
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned act:process
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned activiti:model
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned sys:log:clear
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned sys:log:remove
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned sys:log:list
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned oa:notify:batchRemove
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned oa:notify:remove
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned oa:notify:edit
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned oa:notify:add
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned common:taskScheduleJob
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned common:generator
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned blog:bContent:add
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned blog:bContent:batchRemove
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned blog:bContent:remove
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned blog:bContent:edit
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned system:sysDept:edit
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned system:sysDept:remove
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned system:sysDept:add
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned sys:role:batchRemove
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned sys:role:remove
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned sys:role:edit
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned sys:role:add
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned sys:user:resetPwd
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned sys:user:disable
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned sys:user:batchRemove
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned sys:user:remove
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned sys:user:edit
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned sys:user:add
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned sys:menu:batchRemove
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned sys:menu:remove
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned sys:menu:edit
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned sys:menu:add
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned common:dict:batchRemove
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned common:dict:remove
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned common:dict:edit
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned common:dict:add
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned common:sysFile:sysFile
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned common:log
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned oa:notify:notify
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned blog:bContent:bContent
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned system:sysDept:sysDept
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned sys:role:role
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned sys:user:user
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned sys:menu:menu
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned null
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(perms) returned common:dict:dict
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned false
2019-04-15 20:58:45 -3. ResultSet.close() returned 
2019-04-15 20:58:45 -3. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:58:45 -3. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:58:45 -3. Connection.isClosed() returned false
2019-04-15 20:58:45 -3. PreparedStatement.clearParameters() returned 
2019-04-15 20:58:45 -3. Connection.commit() returned 
2019-04-15 20:58:45 -3. Connection.setAutoCommit(true) returned 
2019-04-15 20:58:45 -3. Connection.isReadOnly() returned true
2019-04-15 20:58:45 -3. Connection.setReadOnly(false) returned 
2019-04-15 20:58:45 -请求地址 : http://localhost:8080/common/dict
2019-04-15 20:58:45 -HTTP METHOD : GET
2019-04-15 20:58:45 -CLASS_METHOD : com.bootdo_jpa.common.controller.DictController.dict
2019-04-15 20:58:45 -参数 : []
2019-04-15 20:58:45 -耗时 : 0
2019-04-15 20:58:45 -3. Connection.isClosed() returned false
2019-04-15 20:58:45 -3. Connection.clearWarnings() returned 
2019-04-15 20:58:45 -3. Connection.clearWarnings() returned 
2019-04-15 20:58:45 -请求地址 : http://localhost:8080/common/dict/type
2019-04-15 20:58:45 -HTTP METHOD : GET
2019-04-15 20:58:45 -CLASS_METHOD : com.bootdo_jpa.common.controller.DictController.listType
2019-04-15 20:58:45 -参数 : []
2019-04-15 20:58:45 -3. Connection.isClosed() returned false
2019-04-15 20:58:45 -3. Connection.setReadOnly(true) returned 
2019-04-15 20:58:45 -3. Connection.getAutoCommit() returned true
2019-04-15 20:58:45 -3. Connection.setAutoCommit(false) returned 
2019-04-15 20:58:45 -3. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:58:45 -3. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:58:45 -3. Connection.prepareStatement(select distinct dictdo0_.type as col_0_0_, dictdo0_.description as col_1_0_ from sys_dict dictdo0_) returned net.sf.log4jdbc.PreparedStatementSpy@63c5d2b0
2019-04-15 20:58:45 -3. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:58:45 -3. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:58:45 -3. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:58:45 -3. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:58:45 -3. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:58:45 -3. Connection.getAutoCommit() returned false
2019-04-15 20:58:45 -3. Connection.getAutoCommit() returned false
2019-04-15 20:58:45 -select distinct dictdo0_.type as col_0_0_, dictdo0_.description as col_1_0_ from sys_dict dictdo0_ 

2019-04-15 20:58:45 -select distinct dictdo0_.type as col_0_0_, dictdo0_.description as col_1_0_ from sys_dict dictdo0_ 
 {executed in 1 msec}
2019-04-15 20:58:45 -3. ResultSet.new ResultSet returned 
2019-04-15 20:58:45 -3. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@68a03441
2019-04-15 20:58:45 -3. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@4efb15a5 - Field level information: 
	com.mysql.jdbc.Field@3e61e98[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=col_0_0_,originalColumnName=type,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@589f00f4[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=col_1_0_,originalColumnName=description,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(col_0_0_) returned del_flag
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.getString(col_1_0_) returned 删除标记
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(col_0_0_) returned show_hide
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.getString(col_1_0_) returned 显示/隐藏
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(col_0_0_) returned yes_no
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.getString(col_1_0_) returned 是/否
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(col_0_0_) returned color
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.getString(col_1_0_) returned 颜色值
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(col_0_0_) returned theme
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.getString(col_1_0_) returned 主题方案
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(col_0_0_) returned sys_area_type
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.getString(col_1_0_) returned 区域类型
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(col_0_0_) returned sys_office_type
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.getString(col_1_0_) returned 机构类型
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(col_0_0_) returned sys_office_common
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.getString(col_1_0_) returned 快捷通用部门
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(col_0_0_) returned sys_office_grade
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.getString(col_1_0_) returned 机构等级
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(col_0_0_) returned sys_data_scope
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.getString(col_1_0_) returned 数据范围
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(col_0_0_) returned sys_user_type
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.getString(col_1_0_) returned 用户类型
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(col_0_0_) returned cms_theme
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.getString(col_1_0_) returned 站点主题
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(col_0_0_) returned cms_module
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.getString(col_1_0_) returned 栏目模型
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(col_0_0_) returned cms_show_modes
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.getString(col_1_0_) returned 展现方式
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(col_0_0_) returned cms_del_flag
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.getString(col_1_0_) returned 内容状态
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(col_0_0_) returned cms_posid
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.getString(col_1_0_) returned 推荐位
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(col_0_0_) returned cms_guestbook
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.getString(col_1_0_) returned 留言板分类
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(col_0_0_) returned oa_leave_type
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.getString(col_1_0_) returned 请假类型
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(col_0_0_) returned sys_log_type
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.getString(col_1_0_) returned 日志类型
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(col_0_0_) returned act_type
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.getString(col_1_0_) returned 流程类型
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(col_0_0_) returned act_category
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.getString(col_1_0_) returned 流程分类
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(col_0_0_) returned gen_category
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.getString(col_1_0_) returned 代码生成分类
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(col_0_0_) returned gen_query_type
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.getString(col_1_0_) returned 查询方式
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(col_0_0_) returned gen_show_type
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.getString(col_1_0_) returned 字段生成方案
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(col_0_0_) returned gen_java_type
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.getString(col_1_0_) returned Java类型
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(col_0_0_) returned sex
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.getString(col_1_0_) returned 性别
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(col_0_0_) returned oa_notify_type
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.getString(col_1_0_) returned 通知通告类型
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(col_0_0_) returned oa_notify_status
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.getString(col_1_0_) returned 通知通告状态
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(col_0_0_) returned oa_notify_read
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.getString(col_1_0_) returned 通知通告状态
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(col_0_0_) returned blog_type
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.getString(col_1_0_) returned 博客类型
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned true
2019-04-15 20:58:45 -3. ResultSet.getString(col_0_0_) returned hobby
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.getString(col_1_0_) returned 爱好
2019-04-15 20:58:45 -3. ResultSet.wasNull() returned false
2019-04-15 20:58:45 -3. ResultSet.next() returned false
2019-04-15 20:58:45 -3. ResultSet.close() returned 
2019-04-15 20:58:45 -3. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:58:45 -3. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:58:45 -3. Connection.isClosed() returned false
2019-04-15 20:58:45 -3. PreparedStatement.clearParameters() returned 
2019-04-15 20:58:45 -3. Connection.commit() returned 
2019-04-15 20:58:45 -3. Connection.setAutoCommit(true) returned 
2019-04-15 20:58:45 -请求地址 : http://localhost:8080/common/dict/list
2019-04-15 20:58:45 -3. Connection.isReadOnly() returned true
2019-04-15 20:58:45 -HTTP METHOD : GET
2019-04-15 20:58:45 -CLASS_METHOD : com.bootdo_jpa.common.controller.DictController.list
2019-04-15 20:58:45 -参数 : [{limit=10, offset=0}]
2019-04-15 20:58:45 -2. Connection.isClosed() returned false
2019-04-15 20:58:45 -3. Connection.setReadOnly(false) returned 
2019-04-15 20:58:45 -耗时 : 15
2019-04-15 20:58:45 -2. Connection.setReadOnly(true) returned 
2019-04-15 20:58:45 -2. Connection.getAutoCommit() returned true
2019-04-15 20:58:45 -2. Connection.setAutoCommit(false) returned 
2019-04-15 20:58:45 -3. Connection.isClosed() returned false
2019-04-15 20:58:45 -3. Connection.clearWarnings() returned 
2019-04-15 20:58:45 -3. Connection.clearWarnings() returned 
2019-04-15 20:58:46 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:58:46 -2. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:58:46 -2. Connection.prepareStatement(select dictdo0_.id as id1_7_, dictdo0_.create_by as create_b2_7_, dictdo0_.create_date as create_d3_7_, dictdo0_.del_flag as del_flag4_7_, dictdo0_.description as descript5_7_, dictdo0_.name as name6_7_, dictdo0_.parent_id as parent_i7_7_, dictdo0_.remarks as remarks8_7_, dictdo0_.sort as sort9_7_, dictdo0_.type as type10_7_, dictdo0_.update_by as update_11_7_, dictdo0_.update_date as update_12_7_, dictdo0_.value as value13_7_ from sys_dict dictdo0_ where ?=1 order by dictdo0_.id desc limit ?) returned net.sf.log4jdbc.PreparedStatementSpy@f5fef61
2019-04-15 20:58:46 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:58:46 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:58:46 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:58:46 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:58:46 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:58:46 -2. PreparedStatement.setBoolean(1, true) returned 
2019-04-15 20:58:46 -2. PreparedStatement.setInt(2, 10) returned 
2019-04-15 20:58:46 -2. Connection.getAutoCommit() returned false
2019-04-15 20:58:46 -2. Connection.getAutoCommit() returned false
2019-04-15 20:58:46 -select dictdo0_.id as id1_7_, dictdo0_.create_by as create_b2_7_, dictdo0_.create_date as create_d3_7_, 
dictdo0_.del_flag as del_flag4_7_, dictdo0_.description as descript5_7_, dictdo0_.name as name6_7_, 
dictdo0_.parent_id as parent_i7_7_, dictdo0_.remarks as remarks8_7_, dictdo0_.sort as sort9_7_, 
dictdo0_.type as type10_7_, dictdo0_.update_by as update_11_7_, dictdo0_.update_date as update_12_7_, 
dictdo0_.value as value13_7_ from sys_dict dictdo0_ where 1=1 order by dictdo0_.id desc limit 
10 

2019-04-15 20:58:46 -select dictdo0_.id as id1_7_, dictdo0_.create_by as create_b2_7_, dictdo0_.create_date as create_d3_7_, 
dictdo0_.del_flag as del_flag4_7_, dictdo0_.description as descript5_7_, dictdo0_.name as name6_7_, 
dictdo0_.parent_id as parent_i7_7_, dictdo0_.remarks as remarks8_7_, dictdo0_.sort as sort9_7_, 
dictdo0_.type as type10_7_, dictdo0_.update_by as update_11_7_, dictdo0_.update_date as update_12_7_, 
dictdo0_.value as value13_7_ from sys_dict dictdo0_ where 1=1 order by dictdo0_.id desc limit 
10 
 {executed in 1 msec}
2019-04-15 20:58:46 -2. ResultSet.new ResultSet returned 
2019-04-15 20:58:46 -2. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@7eef1888
2019-04-15 20:58:46 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@173efb68 - Field level information: 
	com.mysql.jdbc.Field@28c455b2[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=id1_7_,originalColumnName=id,mysqlType=8(FIELD_TYPE_LONGLONG),flags= AUTO_INCREMENT PRIMARY_KEY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@2117f1b3[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=create_b2_7_,originalColumnName=create_by,mysqlType=3(FIELD_TYPE_LONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@27ba9641[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=create_d3_7_,originalColumnName=create_date,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@473fcc65[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=del_flag4_7_,originalColumnName=del_flag,mysqlType=254(FIELD_TYPE_STRING),flags= BINARY MULTI_KEY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@4ddc68f5[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=descript5_7_,originalColumnName=description,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@53588294[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=name6_7_,originalColumnName=name,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY MULTI_KEY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@20a30e20[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=parent_i7_7_,originalColumnName=parent_id,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@1946b2b5[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=remarks8_7_,originalColumnName=remarks,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@37f3faa8[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=sort9_7_,originalColumnName=sort,mysqlType=246( Unknown MySQL Type # 246),flags=, charsetIndex=63, charsetName=ISO-8859-1]
	com.mysql.jdbc.Field@20a882e0[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=type10_7_,originalColumnName=type,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY, charsetIndex=83, charsetName=utf8]
	com.mysql.jdbc.Field@18424adb[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=update_11_7_,originalColumnName=update_by,mysqlType=8(FIELD_TYPE_LONGLONG),flags=, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@343d907c[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=update_12_7_,originalColumnName=update_date,mysqlType=12(FIELD_TYPE_DATETIME),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
	com.mysql.jdbc.Field@1c330ae9[catalog=bootdo_jpa,tableName=dictdo0_,originalTableName=sys_dict,columnName=value13_7_,originalColumnName=value,mysqlType=253(FIELD_TYPE_VAR_STRING),flags= BINARY MULTI_KEY, charsetIndex=83, charsetName=utf8]
2019-04-15 20:58:46 -2. ResultSet.next() returned true
2019-04-15 20:58:46 -2. ResultSet.getLong(id1_7_) returned 122
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getInt(create_b2_7_) returned 0
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned true
2019-04-15 20:58:46 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:58:46 -2. ResultSet.getString(del_flag4_7_) returned 
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getString(descript5_7_) returned 爱好
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getString(name6_7_) returned 绘画
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned true
2019-04-15 20:58:46 -2. ResultSet.getString(remarks8_7_) returned 
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getBigDecimal(sort9_7_) returned null
2019-04-15 20:58:46 -2. ResultSet.getString(type10_7_) returned hobby
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getLong(update_11_7_) returned 0
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned true
2019-04-15 20:58:46 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:58:46 -2. ResultSet.getString(value13_7_) returned painting
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.next() returned true
2019-04-15 20:58:46 -2. ResultSet.getLong(id1_7_) returned 121
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getInt(create_b2_7_) returned 0
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned true
2019-04-15 20:58:46 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:58:46 -2. ResultSet.getString(del_flag4_7_) returned 
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getString(descript5_7_) returned 爱好
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getString(name6_7_) returned 编码
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned true
2019-04-15 20:58:46 -2. ResultSet.getString(remarks8_7_) returned 
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getBigDecimal(sort9_7_) returned null
2019-04-15 20:58:46 -2. ResultSet.getString(type10_7_) returned hobby
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getLong(update_11_7_) returned 0
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned true
2019-04-15 20:58:46 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:58:46 -2. ResultSet.getString(value13_7_) returned code
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.next() returned true
2019-04-15 20:58:46 -2. ResultSet.getLong(id1_7_) returned 120
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getInt(create_b2_7_) returned 0
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned true
2019-04-15 20:58:46 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:58:46 -2. ResultSet.getString(del_flag4_7_) returned 
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getString(descript5_7_) returned 博客类型
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getString(name6_7_) returned 文章
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned true
2019-04-15 20:58:46 -2. ResultSet.getString(remarks8_7_) returned 
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getBigDecimal(sort9_7_) returned null
2019-04-15 20:58:46 -2. ResultSet.getString(type10_7_) returned blog_type
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getLong(update_11_7_) returned 0
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned true
2019-04-15 20:58:46 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:58:46 -2. ResultSet.getString(value13_7_) returned article
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.next() returned true
2019-04-15 20:58:46 -2. ResultSet.getLong(id1_7_) returned 119
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getInt(create_b2_7_) returned 0
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned true
2019-04-15 20:58:46 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:58:46 -2. ResultSet.getString(del_flag4_7_) returned 
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getString(descript5_7_) returned 博客类型
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getString(name6_7_) returned 交流
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned true
2019-04-15 20:58:46 -2. ResultSet.getString(remarks8_7_) returned 
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getBigDecimal(sort9_7_) returned null
2019-04-15 20:58:46 -2. ResultSet.getString(type10_7_) returned blog_type
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getLong(update_11_7_) returned 0
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned true
2019-04-15 20:58:46 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:58:46 -2. ResultSet.getString(value13_7_) returned communication
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.next() returned true
2019-04-15 20:58:46 -2. ResultSet.getLong(id1_7_) returned 118
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getInt(create_b2_7_) returned 0
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned true
2019-04-15 20:58:46 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:58:46 -2. ResultSet.getString(del_flag4_7_) returned 
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getString(descript5_7_) returned 博客类型
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getString(name6_7_) returned 关于
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned true
2019-04-15 20:58:46 -2. ResultSet.getString(remarks8_7_) returned 全url是:/blog/open/page/about
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getBigDecimal(sort9_7_) returned null
2019-04-15 20:58:46 -2. ResultSet.getString(type10_7_) returned blog_type
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getLong(update_11_7_) returned 0
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned true
2019-04-15 20:58:46 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:58:46 -2. ResultSet.getString(value13_7_) returned about
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.next() returned true
2019-04-15 20:58:46 -2. ResultSet.getLong(id1_7_) returned 113
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getInt(create_b2_7_) returned 0
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned true
2019-04-15 20:58:46 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:58:46 -2. ResultSet.getString(del_flag4_7_) returned 
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getString(descript5_7_) returned 删除标记
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getString(name6_7_) returned 删除
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned true
2019-04-15 20:58:46 -2. ResultSet.getString(remarks8_7_) returned 
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getBigDecimal(sort9_7_) returned null
2019-04-15 20:58:46 -2. ResultSet.getString(type10_7_) returned del_flag
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getLong(update_11_7_) returned 0
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned true
2019-04-15 20:58:46 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:58:46 -2. ResultSet.getString(value13_7_) returned 0
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.next() returned true
2019-04-15 20:58:46 -2. ResultSet.getLong(id1_7_) returned 112
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getInt(create_b2_7_) returned 1
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:58:46 -2. ResultSet.getString(del_flag4_7_) returned 0
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getString(descript5_7_) returned 通知通告状态
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getString(name6_7_) returned 草稿
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getString(remarks8_7_) returned 
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getBigDecimal(sort9_7_) returned 10
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getString(type10_7_) returned oa_notify_status
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getLong(update_11_7_) returned 1
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:58:46 -2. ResultSet.getString(value13_7_) returned 0
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.next() returned true
2019-04-15 20:58:46 -2. ResultSet.getLong(id1_7_) returned 111
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getInt(create_b2_7_) returned 1
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:58:46 -2. ResultSet.getString(del_flag4_7_) returned 0
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getString(descript5_7_) returned 通知通告状态
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getString(name6_7_) returned 已读
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getString(remarks8_7_) returned null
2019-04-15 20:58:46 -2. ResultSet.getBigDecimal(sort9_7_) returned 20
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getString(type10_7_) returned oa_notify_read
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getLong(update_11_7_) returned 1
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:58:46 -2. ResultSet.getString(value13_7_) returned 1
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.next() returned true
2019-04-15 20:58:46 -2. ResultSet.getLong(id1_7_) returned 110
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getInt(create_b2_7_) returned 1
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:58:46 -2. ResultSet.getString(del_flag4_7_) returned 0
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getString(descript5_7_) returned 通知通告状态
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getString(name6_7_) returned 未读
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getString(remarks8_7_) returned null
2019-04-15 20:58:46 -2. ResultSet.getBigDecimal(sort9_7_) returned 10
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getString(type10_7_) returned oa_notify_read
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getLong(update_11_7_) returned 1
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:58:46 -2. ResultSet.getString(value13_7_) returned 0
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.next() returned true
2019-04-15 20:58:46 -2. ResultSet.getLong(id1_7_) returned 109
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getInt(create_b2_7_) returned 1
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getTimestamp(create_d3_7_) returned null
2019-04-15 20:58:46 -2. ResultSet.getString(del_flag4_7_) returned 0
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getString(descript5_7_) returned 通知通告状态
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getString(name6_7_) returned 发布
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getLong(parent_i7_7_) returned 0
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getString(remarks8_7_) returned null
2019-04-15 20:58:46 -2. ResultSet.getBigDecimal(sort9_7_) returned 20
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getString(type10_7_) returned oa_notify_status
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getLong(update_11_7_) returned 1
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.getTimestamp(update_12_7_) returned null
2019-04-15 20:58:46 -2. ResultSet.getString(value13_7_) returned 1
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.close() returned 
2019-04-15 20:58:46 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:58:46 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:58:46 -2. Connection.isClosed() returned false
2019-04-15 20:58:46 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:58:46 -2. Connection.getCatalog() returned bootdo_jpa
2019-04-15 20:58:46 -2. PreparedStatement.new PreparedStatement returned 
2019-04-15 20:58:46 -2. Connection.prepareStatement(select count(dictdo0_.id) as col_0_0_ from sys_dict dictdo0_ where ?=1) returned net.sf.log4jdbc.PreparedStatementSpy@42c70241
2019-04-15 20:58:46 -2. PreparedStatement.getMaxFieldSize() returned 67108864
2019-04-15 20:58:46 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:58:46 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:58:46 -2. PreparedStatement.getFetchDirection() returned 1000
2019-04-15 20:58:46 -2. PreparedStatement.getFetchSize() returned 0
2019-04-15 20:58:46 -2. PreparedStatement.setBoolean(1, true) returned 
2019-04-15 20:58:46 -2. Connection.getAutoCommit() returned false
2019-04-15 20:58:46 -select count(dictdo0_.id) as col_0_0_ from sys_dict dictdo0_ where 1=1 

2019-04-15 20:58:46 -select count(dictdo0_.id) as col_0_0_ from sys_dict dictdo0_ where 1=1 
 {executed in 1 msec}
2019-04-15 20:58:46 -2. ResultSet.new ResultSet returned 
2019-04-15 20:58:46 -2. PreparedStatement.executeQuery() returned net.sf.log4jdbc.ResultSetSpy@17f30915
2019-04-15 20:58:46 -2. ResultSet.getMetaData() returned com.mysql.jdbc.ResultSetMetaData@3cc3a2de - Field level information: 
	com.mysql.jdbc.Field@466c6a0d[catalog=,tableName=,originalTableName=,columnName=col_0_0_,originalColumnName=,mysqlType=8(FIELD_TYPE_LONGLONG),flags= BINARY, charsetIndex=63, charsetName=US-ASCII]
2019-04-15 20:58:46 -2. ResultSet.next() returned true
2019-04-15 20:58:46 -2. ResultSet.getLong(col_0_0_) returned 114
2019-04-15 20:58:46 -2. ResultSet.wasNull() returned false
2019-04-15 20:58:46 -2. ResultSet.next() returned false
2019-04-15 20:58:46 -2. ResultSet.close() returned 
2019-04-15 20:58:46 -2. PreparedStatement.getMaxRows() returned 0
2019-04-15 20:58:46 -2. PreparedStatement.getQueryTimeout() returned 0
2019-04-15 20:58:46 -2. Connection.isClosed() returned false
2019-04-15 20:58:46 -2. PreparedStatement.clearParameters() returned 
2019-04-15 20:58:46 -2. Connection.commit() returned 
2019-04-15 20:58:46 -2. Connection.setAutoCommit(true) returned 
2019-04-15 20:58:46 -2. Connection.isReadOnly() returned true
2019-04-15 20:58:46 -2. Connection.setReadOnly(false) returned 
2019-04-15 20:58:46 -耗时 : 56
2019-04-15 20:58:46 -2. Connection.isClosed() returned false
2019-04-15 20:58:46 -2. Connection.clearWarnings() returned 
2019-04-15 20:58:46 -2. Connection.clearWarnings() returned 
2019-04-15 20:59:25 -1. Connection closed
2019-04-15 20:59:25 -1. Connection.close() returned 
2019-04-15 20:59:29 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 2, completed tasks = 11]
